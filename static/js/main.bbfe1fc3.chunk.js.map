{"version":3,"sources":["components/Category.module.css","hardhat/typechain/factories/LuminaAdmin__factory.ts","hardhat/typechain/factories/LuminaCampaignLaunch__factory.ts","hardhat/typechain/factories/LuminaMarketing__factory.ts","hardhat/typechain/factories/LuminaRecords__factory.ts","hardhat/typechain/factories/LuminaToken__factory.ts","hardhat/typechain/factories/LuminaTrustee__factory.ts","hardhat/typechain/factories/ProgressContractLocker__factory.ts","hardhat/typechain/factories/UtilsTest__factory.ts","hardhat/typechain/factories/ERC20__factory.ts","hardhat/SymfoniContext.tsx","components/Solve.tsx","utils/bigNumber.tsx","components/Rules.ts","components/Parameters.ts","components/Category.tsx","components/Challenges.tsx","utils/colors.tsx","components/Address.tsx","components/CommisionSetting.js","components/LuminaToken.tsx","components/Icons.js","App.tsx","serviceWorker.ts","index.tsx","components/Address.module.css"],"names":["module","exports","LuminaAdmin__factory","signer","_abi","_bytecode","recordsAddr_","overrides","address","signerOrProvider","Contract","ContractFactory","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","components","LuminaCampaignLaunch__factory","marketingAddr_","LuminaMarketing__factory","tokenAddr_","LuminaRecords__factory","LuminaToken__factory","symbol","initSupply","LuminaTrustee__factory","adminAddr_","ProgressContractLocker__factory","erc20Addr_","progressingAddr_","UtilsTest__factory","ERC20__factory","name_","symbol_","emptyContract","instance","undefined","factory","ProviderContext","React","createContext","CurrentAddressContext","SignerContext","defaultSymfoniContext","currentHardhatProvider","init","Error","loading","messages","providers","SymfoniContext","LuminaAdminContext","LuminaCampaignLaunchContext","LuminaMarketingContext","LuminaRecordsContext","LuminaTokenContext","LuminaTrusteeContext","ProgressContractLockerContext","UtilsTestContext","ERC20Context","Symfoni","showLoading","autoInit","props","useState","initializeCounter","setInitializeCounter","setCurrentHardhatProvider","setLoading","setMessages","setSigner","provider","setProvider","currentAddress","setCurrentAddress","fallbackProvider","providerPriority","setProviderPriority","LuminaAdmin","setLuminaAdmin","LuminaCampaignLaunch","setLuminaCampaignLaunch","LuminaMarketing","setLuminaMarketing","LuminaRecords","setLuminaRecords","LuminaToken","setLuminaToken","LuminaTrustee","setLuminaTrustee","ProgressContractLocker","setProgressContractLocker","UtilsTest","setUtilsTest","ERC20","setERC20","useEffect","length","console","debug","pop","getProvider","a","hardhatProviderName","_providerPriority","localStorage","getItem","sort","b","reduce","maybeProvider","providerIdentification","foundProvider","Promise","resolve","toLowerCase","getWeb3ModalProvider","web3provider","ethers","Web3Provider","JsonRpcProvider","url","getSigner","_provider","Wallet","fromMnemonic","connect","providerOptions","web3Modal","Web3Modal","cacheProvider","subscribed","finish","text","old","finishWithContracts","getLuminaAdmin","_signer","getLuminaCampaignLaunch","getLuminaMarketing","getLuminaRecords","getLuminaToken","getLuminaTrustee","getProgressContractLocker","getUtilsTest","getERC20","providerObject","getAddress","doAsync","contractAddress","LuminaAdminDeployment","receipt","LuminaCampaignLaunchDeployment","LuminaMarketingDeployment","LuminaRecordsDeployment","LuminaTokenDeployment","LuminaTrusteeDeployment","ProgressContractLockerDeployment","constants","AddressZero","Provider","value","handleInitProvider","loadingComponent","map","msg","i","key","children","solve","blockNumber","challengeHash","solvedDifficulty","status","one","BigNumber","from","random","isReady","rnd","randomWords","rnds","toString","nonce","difficultyN","targetN","shl","sub","stop","cnt","timeMs","setTimeout","batch","startTimeMs","Date","now","digest","keccak256","digestNum","lte","add","endTimeMs","formatBalance","balance","decimals","b1","div","pow","b2","mod","toNumber","toLocaleString","isZero","padStart","ZERO","ONE","TEN","getWalletDifficultyDiscount","h1","h2","n","to","middle","mask","and","findLsb","xor","gte","getDifficultyLabel","difficulty","getReasonLabel","reason","s","MIN_CHALLENGE_DIFFICULTY","demo","Cat2Color","cat","color","Category","title","category","style","backgroundColor","className","css","stopAll","runStatus","Object","keys","forEach","bnStr","rs","stopFn","challengesRunStatus","Challenges","challenges","group","registeredBalances","claimReward","verifyClaim","challengesMap","blockNumbers","bn","toHexString","challengeHashes","bal","balances","findBalance","generalDifficulty","MAX_CHALLENGE_DIFFICULTY","totalCnt","addressDiscount","balanceDiscount","getBalanceDifficultyDiscount","adjustedDifficulty","ch","blockNumberHex","claimsCnt","claimed","toChallengesMap","runStatusSnap","setRunStatusSnap","indexes","rewardUnits","nexts","currentChallenges","setCurrentChallenges","mounted","nrn","nrs","cmt","targetDifficulty","solved","_refresh","handleStartMining","e","preventDefault","trials","solutionTrials","trials0","timeMs0","solution","handleStopMining","handleClaimReward","textAlign","hash","substr","claimable","startsWith","getRewardUnits","rewardsCnt","rewardUnit","REWARDS_CNT_LIMIT","statusTitle","statusIcon","statusColor","progressTitle","progress","Math","floor","gominer","icon","width","height","labelSize","labelColor","bgColor","labelAlignment","animateOnRender","transitionTimingFunction","transitionDuration","completed","disabled","onClick","white","red","pink","purple","deepPurple","indigo","blue","lightBlue","black","cyan","teal","green","lightGreen","yellow","amber","orange","brown","darkGrey","grey","lightgrey","blueGrey","Address","chainId","hover1","setHover1","down1","setDown1","hover2","setHover2","down2","setDown2","button","buttonHover","buttonDown","className1","className2","onPointerOver","onPointerOut","onPointerDown","onPointerUp","href","target","rel","commisionOptions","label","commisionOptionsMap","o","customStyles","control","provided","state","background","borderColor","minHeight","boxShadow","isFocused","valueContainer","padding","input","margin","indicatorSeparator","display","indicatorsContainer","CommisionSetting","handleChange","selectedOption","setCommision","commision","this","styles","placeholder","onChange","options","Component","err","setErr","setBlockNumber","setAddress","totalSupply","setTotalSupply","setBalance","ownerAddress","setOwnerAddress","paused","setPaused","challengesAllowance","setChallengesAllowance","useEffectCnt","setUseEffectCnt","txCnt","setTxCnt","setRegisteredBalances","initChallenges","basicChallenges","setBasicChallenges","premiumChallenges","setPremiumChallenges","totalLockedSupply","setTotalLockedBalance","lockedBalance","setLockedBalance","lockedAvailableBalance","setLockedAvailableBalance","claimedTokens","setClaimedTokens","availableTokens","setAvailableTokens","network","setNetwork","timerCnt","setTimerCnt","setDemo","goMiner","setGoMiner","goMinerErr","setGoMinerErr","token","useContext","TokenContext","records","RecordsContext","trustee","TrusteeContext","admin","AdminContext","locker","LockerContext","window","ethereum","eerr","getNetwork","detectNetwork","runTokenTx","txf","f","t","tx","wait","confirmations","ex","data","message","err0","substring","alert","runRecordsTx","runTrusteeTx","runAdminTx","runLockerTx","l","handlePause","pause","handleUnpause","unpause","readBasicChallenges","readChallenges","basicCha","readPremiumChallenges","premiumCha","readAllChallenges","handleReadChallenges","handleAddChallenges","addChallenges","handleLockBalance","lockerAddress","approve","deposit","handleWithdrawBalance","withdraw","handleRegisterBalance","registerBalance","handleClearClaim","parseClaim","valid","claim","JSON","parse","miner","minerAddress","recipient","regex","test","handleVerifyClaim","verifyAlert","handleClaim","handleGoMinerChange","trim","premium","claimAlert","owner","_network","_paused","_ownerAddress","getBalances","_registeredBalances","_totalSupply","getChallengesAllowance","_challengesAllowance","_address","getCommision","_commision","balanceOf","_balance","getBlockNumber","_blockNumber","getClaimedTokens","_claimedTokens","_availableTokens","DEMO","_demo","eq","_lockedBalance","availableBalanceOf","_lockedAvailableBalance","totalLockedBalance","_totalLockedSupply","tm","clearTimeout","BigLogo","alt","src","SmallLogo","networkName","toUpperCase","Colors","fontWeight","marginLeft","marginRight","tokenDecimals","gt","download","size","slice","library","faWifi","faHeart","farHeart","faHeartbeat","faExclamationTriangle","faThumbsUp","faHome","faTerminal","faChartLine","faTachometerAlt","faInfo","faMicrochip","faTrophy","faPlus","faMinus","faHandPaper","faCheck","faBackspace","faCalculator","faPercent","faSmile","faUser","faUserMinus","faUserPlus","faRandom","faDiceD20","faSyncAlt","faToggleOn","faToggleOff","faTrashAlt","faFilter","faSearch","faSearchMinus","faSearchPlus","faArrowsAltH","faPlay","faPause","faStop","faShareSquare","faEllipsisH","faRunning","faTh","faGripVertical","faGripHorizontal","faBug","faHistory","faCodeBranch","faGenderless","faTable","faListUl","faBookMedical","faPalette","faCog","faGolfBall","faBowlingBall","faTrashRestore","faCoins","faCopy","faRecycle","faExternalLinkAlt","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.bbfe1fc3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cat\":\"Category_cat__2ALJo\",\"err\":\"Category_err__1S7hS\"};","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { LuminaAdmin } from \"../LuminaAdmin\";\n\nexport class LuminaAdmin__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(recordsAddr_: string, overrides?: Overrides): Promise<LuminaAdmin> {\n    return super.deploy(recordsAddr_, overrides || {}) as Promise<LuminaAdmin>;\n  }\n  getDeployTransaction(\n    recordsAddr_: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(recordsAddr_, overrides || {});\n  }\n  attach(address: string): LuminaAdmin {\n    return super.attach(address) as LuminaAdmin;\n  }\n  connect(signer: Signer): LuminaAdmin__factory {\n    return super.connect(signer) as LuminaAdmin__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): LuminaAdmin {\n    return new Contract(address, _abi, signerOrProvider) as LuminaAdmin;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recordsAddr_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"challenge\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"premium\",\n        type: \"bool\",\n      },\n    ],\n    name: \"AddChallenge\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE_INC\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_WEEK\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_DIFFICULTY_STEP\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_NULL\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"DEMO\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"LUCKY_NUMBER\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_CNT\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_DONOR_BLOCKS\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MINERS_CLAIM_MIN_RECIPIENT_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MIN_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARDS_CNT_LIMIT\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_INC_INTERVAL\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_INC\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_STANDARD\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_START\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_DECIMALS\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"premium\",\n        type: \"bool\",\n      },\n    ],\n    name: \"_cleanupChallenge\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint8\",\n        name: \"limit\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"addChallenges\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"trusteeAddr_\",\n        type: \"address\",\n      },\n    ],\n    name: \"attachTrustee\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getChallengesAllowance\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bool\",\n        name: \"premium\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"limit\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"readChallenges\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"totalCnt\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint8[]\",\n        name: \"indexes\",\n        type: \"uint8[]\",\n      },\n      {\n        internalType: \"uint64[]\",\n        name: \"blockNumbers\",\n        type: \"uint64[]\",\n      },\n      {\n        internalType: \"uint16[]\",\n        name: \"rewardUnits\",\n        type: \"uint16[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"challengeHashes\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint8[]\",\n        name: \"nexts\",\n        type: \"uint8[]\",\n      },\n      {\n        internalType: \"uint16[]\",\n        name: \"claimsCnt\",\n        type: \"uint16[]\",\n      },\n      {\n        internalType: \"bool[]\",\n        name: \"claimed\",\n        type: \"bool[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"recordsAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"retrieveChallenge\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint256\",\n            name: \"challengeHash\",\n            type: \"uint256\",\n          },\n          {\n            internalType: \"uint64\",\n            name: \"blockNumber\",\n            type: \"uint64\",\n          },\n          {\n            internalType: \"uint16\",\n            name: \"rewardUnits\",\n            type: \"uint16\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"index\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"bool\",\n            name: \"valid\",\n            type: \"bool\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"prev\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint8\",\n            name: \"next\",\n            type: \"uint8\",\n          },\n        ],\n        internalType: \"struct ChallengeRecords.Challenge\",\n        name: \"ch\",\n        type: \"tuple\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"premium\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"generalDifficulty\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"trusteeAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { LuminaCampaignLaunch } from \"../LuminaCampaignLaunch\";\n\nexport class LuminaCampaignLaunch__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    marketingAddr_: string,\n    overrides?: Overrides\n  ): Promise<LuminaCampaignLaunch> {\n    return super.deploy(\n      marketingAddr_,\n      overrides || {}\n    ) as Promise<LuminaCampaignLaunch>;\n  }\n  getDeployTransaction(\n    marketingAddr_: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(marketingAddr_, overrides || {});\n  }\n  attach(address: string): LuminaCampaignLaunch {\n    return super.attach(address) as LuminaCampaignLaunch;\n  }\n  connect(signer: Signer): LuminaCampaignLaunch__factory {\n    return super.connect(signer) as LuminaCampaignLaunch__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): LuminaCampaignLaunch {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as LuminaCampaignLaunch;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"marketingAddr_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"address\",\n        name: \"miner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"_claim\",\n    outputs: [\n      {\n        internalType: \"address payable[]\",\n        name: \"recipients\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"tokenCommisions\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ethCommisions\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n    ],\n    name: \"_hasReferral\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"referrer\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"user\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"_referral\",\n    outputs: [\n      {\n        internalType: \"address payable[]\",\n        name: \"recipients\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"tokenCommisions\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"ethCommisions\",\n        type: \"uint256[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"claimsCnt\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"hasReferral\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"marketingAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"referralsCnt\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b50604051610c27380380610c2783398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610b94806100936000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806348d497c71161005b57806348d497c7146100fa5780634fe309701461010d57806356494faa14610139578063c142fed81461014c57600080fd5b806303c9f1e7146100825780633f2ee795146100ad5780633ff42b92146100df575b600080fd5b6100956100903660046108a8565b61015f565b6040516100a49392919061097d565b60405180910390f35b6000546100c790600160a01b90046001600160401b031681565b6040516001600160401b0390911681526020016100a4565b6000546040516001600160a01b0390911681526020016100a4565b6100956101083660046109f2565b61049e565b336000908152600260205260409020546001600160a01b031615155b60405190151581526020016100a4565b610129610147366004610a34565b610842565b6001546100c7906001600160401b031681565b60608080336001600160a01b031661017f6000546001600160a01b031690565b6001600160a01b0316146101ae5760405162461bcd60e51b81526004016101a590610a56565b60405180910390fd5b600180546001600160401b03169060006101c783610ac9565b91906101000a8154816001600160401b0302191690836001600160401b0316021790555050876001600160a01b0316896001600160a01b031614801561022657506001600160a01b03881660009081526003602052604090205460ff16155b15610491576001600160a01b038089166000908152600260205260408120549091169081610255576001610258565b60025b90508060ff166001600160401b0381111561027557610275610af0565b60405190808252806020026020018201604052801561029e578160200160208202803683370190505b5094508060ff166001600160401b038111156102bc576102bc610af0565b6040519080825280602002602001820160405280156102e5578160200160208202803683370190505b5093508060ff166001600160401b0381111561030357610303610af0565b60405190808252806020026020018201604052801561032c578160200160208202803683370190505b50925060008a868260ff168151811061034757610347610b06565b6001600160a01b0390921660209283029190910190910152610372600a670de0b6b3a7640000610b1c565b858260ff168151811061038757610387610b06565b60209081029190910101526103a5600a670de0b6b3a7640000610b1c565b8b6001600160a01b03163110156103eb576103c9600a670de0b6b3a7640000610b1c565b848260ff16815181106103de576103de610b06565b6020026020010181815250505b6001600160a01b0383161561046a578061040481610b3e565b91505082868260ff168151811061041d5761041d610b06565b6001600160a01b0390921660209283029190910190910152610448600a670de0b6b3a7640000610b1c565b858260ff168151811061045d5761045d610b06565b6020026020010181815250505b5050506001600160a01b0388166000908152600360205260409020805460ff191660011790555b9750975097945050505050565b60608080336001600160a01b03166104be6000546001600160a01b031690565b6001600160a01b0316146104e45760405162461bcd60e51b81526004016101a590610a56565b856001600160a01b0316876001600160a01b031614156105515760405162461bcd60e51b815260206004820152602260248201527f52656665727265722063616e6e6f7420626520726566657272616c2073656e6460448201526132b960f11b60648201526084016101a5565b6001600160a01b0386811660009081526002602052604090205416156105c95760405162461bcd60e51b815260206004820152602760248201527f4f6e6c79206f6e6520726566657272616c207065722073656e64657220697320604482015266185b1b1bddd95960ca1b60648201526084016101a5565b60008054600160a01b90046001600160401b03169060146105e983610ac9565b82546001600160401b039182166101009390930a9283029190920219909116179055506040805160028082526060820183529182906020830190803683370190505093508060ff166001600160401b0381111561064857610648610af0565b604051908082528060200260200182016040528015610671578160200160208202803683370190505b5092508060ff166001600160401b0381111561068f5761068f610af0565b6040519080825280602002602001820160405280156106b8578160200160208202803683370190505b509150600088858260ff16815181106106d3576106d3610b06565b6001600160a01b03909216602092830291909101909101526106fe600a670de0b6b3a7640000610b1c565b848260ff168151811061071357610713610b06565b6020026020010181815250506000838260ff168151811061073657610736610b06565b60209081029190910101528061074b81610b3e565b91505087858260ff168151811061076457610764610b06565b6001600160a01b039092166020928302919091019091015261078f600a670de0b6b3a7640000610b1c565b848260ff16815181106107a4576107a4610b06565b60209081029190910101526107c2600a670de0b6b3a7640000610b1c565b886001600160a01b0316311015610808576107e6600a670de0b6b3a7640000610b1c565b838260ff16815181106107fb576107fb610b06565b6020026020010181815250505b50506001600160a01b0395861660009081526002602052604090208054969097166001600160a01b03199096169590951790955594915050565b600080546001600160a01b0316331461086d5760405162461bcd60e51b81526004016101a590610a56565b506001600160a01b038181166000908152600260205260409020541615155b919050565b80356001600160a01b038116811461088c57600080fd5b600080600080600080600060e0888a0312156108c357600080fd5b87356001600160401b03811681146108da57600080fd5b96506108e860208901610891565b95506108f660408901610891565b9450606088013563ffffffff8116811461090f57600080fd5b9350608088013560ff8116811461092557600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600081518084526020808501945080840160005b8381101561097257815187529582019590820190600101610956565b509495945050505050565b606080825284519082018190526000906020906080840190828801845b828110156109bf5781516001600160a01b03168452928401929084019060010161099a565b505050838103828501526109d38187610942565b91505082810360408401526109e88185610942565b9695505050505050565b60008060008060808587031215610a0857600080fd5b610a1185610891565b9350610a1f60208601610891565b93969395505050506040820135916060013590565b600060208284031215610a4657600080fd5b610a4f82610891565b9392505050565b60208082526037908201527f4f6e6c794d61726b6574696e673a206f6e6c79206d61726b6574696e6720636160408201527f6e206578656375746520746869732066756e6374696f6e000000000000000000606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b0380831681811415610ae657610ae6610ab3565b6001019392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600082610b3957634e487b7160e01b600052601260045260246000fd5b500490565b600060ff821660ff811415610b5557610b55610ab3565b6001019291505056fea26469706673582212208e7128a19127e553b3b20615da58b8ff7236aca6775145432abb39f8619e425064736f6c634300080b0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { LuminaMarketing } from \"../LuminaMarketing\";\n\nexport class LuminaMarketing__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(tokenAddr_: string, overrides?: Overrides): Promise<LuminaMarketing> {\n    return super.deploy(\n      tokenAddr_,\n      overrides || {}\n    ) as Promise<LuminaMarketing>;\n  }\n  getDeployTransaction(\n    tokenAddr_: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(tokenAddr_, overrides || {});\n  }\n  attach(address: string): LuminaMarketing {\n    return super.attach(address) as LuminaMarketing;\n  }\n  connect(signer: Signer): LuminaMarketing__factory {\n    return super.connect(signer) as LuminaMarketing__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): LuminaMarketing {\n    return new Contract(address, _abi, signerOrProvider) as LuminaMarketing;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenAddr_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"message\",\n        type: \"string\",\n      },\n    ],\n    name: \"CampaignClaimFailed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Paused\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"tokenAddr\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"message\",\n        type: \"string\",\n      },\n    ],\n    name: \"TokenCallFailed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Unpaused\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE_INC\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_WEEK\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_DIFFICULTY_STEP\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_NULL\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"DEMO\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"LUCKY_NUMBER\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_CNT\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_DONOR_BLOCKS\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MINERS_CLAIM_MIN_RECIPIENT_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MIN_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARDS_CNT_LIMIT\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_INC_INTERVAL\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_INC\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_STANDARD\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_START\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_DECIMALS\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"address\",\n        name: \"miner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"rewardUnits\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"commisionPrc\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"_claim\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenBudget\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"ethBudget\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"addBudget\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"addCampaign\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"trusteeAddr_\",\n        type: \"address\",\n      },\n    ],\n    name: \"attachTrustee\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"getCampaign\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenBudget\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"ethBudget\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"campaignId\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"valid\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"active\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getCampaigns\",\n    outputs: [\n      {\n        internalType: \"address[]\",\n        name: \"campaigns\",\n        type: \"address[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasReferral\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"pause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"referrer\",\n        type: \"address\",\n      },\n    ],\n    name: \"referral\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"removeBudget\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"removeCampaign\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"startCampaign\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"campaignAddr\",\n        type: \"address\",\n      },\n    ],\n    name: \"stopCampaign\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"tokenAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"trusteeAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"unpause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b50604051620028ca380380620028ca833981016040819052620000349162000240565b6200003f3362000098565b6000805460ff60a01b19169055600180546001600160a01b0319163317905562000068620000e8565b600380546001600160a01b039092166001600160a01b031992831681179091556004805490921617905562000272565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b33620000f362000166565b6001600160a01b0316146200014f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b620001646200018260201b62001a431760201c565b565b60006200017d6200023160201b62001ae81760201c565b905090565b62000196600054600160a01b900460ff1690565b15620001d85760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640162000146565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258620002143390565b6040516001600160a01b03909116815260200160405180910390a1565b6000546001600160a01b031690565b6000602082840312156200025357600080fd5b81516001600160a01b03811681146200026b57600080fd5b9392505050565b61264880620002826000396000f3fe60806040526004361061023f5760003560e01c8063777b0c211161012e578063b313bd62116100ab578063e3eddde21161006f578063e3eddde214610664578063e4663a5b14610684578063f2fde38b146106a4578063f883fcaa14610550578063fc47e209146106c457600080fd5b8063b313bd6214610624578063b91268e8146103a1578063c28bd11c14610550578063c28cedf314610639578063c6088d971461064e57600080fd5b80639d941362116100f25780639d9413621461051b578063a2157767146105b8578063a5c9cd82146105cd578063a6b03633146105e2578063ac9c4fd31461060457600080fd5b8063777b0c21146105305780637fb012321461055057806382e51bd0146105655780638456cb59146105855780638da5cb5b1461059a57600080fd5b80633e6e387c116101bc5780635c975abb116101805780635c975abb1461042d5780635fbe4d1d14610458578063715018a614610478578063731301cf1461048d57806373d6aafa1461051b57600080fd5b80633e6e387c146103c45780633f4ba83a146103d9578063479e92c8146103ee578063504b3662146104035780635b7f415c1461041857600080fd5b80631df55679116102035780631df5567914610313578063270d8e0e146103335780632713b9601461035357806330db4fa0146103735780633a3a7c53146103a157600080fd5b806306e386321461024b5780630bf433091461027857806314270b651461029f57806318f053da146102d15780631c505d1d146102f357600080fd5b3661024657005b600080fd5b34801561025757600080fd5b50610260600581565b60405161ffff90911681526020015b60405180910390f35b34801561028457600080fd5b5061028d60d081565b60405160ff909116815260200161026f565b3480156102ab57600080fd5b506002546001600160a01b03165b6040516001600160a01b03909116815260200161026f565b3480156102dd57600080fd5b506102f16102ec366004611ed8565b6106da565b005b3480156102ff57600080fd5b506102f161030e366004611efc565b610888565b34801561031f57600080fd5b506102f161032e366004611ed8565b6109fe565b34801561033f57600080fd5b506102f161034e366004611f35565b610b2b565b34801561035f57600080fd5b506102f161036e366004611f6a565b610d7e565b34801561037f57600080fd5b5061038860c881565b60405167ffffffffffffffff909116815260200161026f565b3480156103ad57600080fd5b506103b66110a4565b60405190815260200161026f565b3480156103d057600080fd5b50610260600281565b3480156103e557600080fd5b506102f16110be565b3480156103fa57600080fd5b5061028d600a81565b34801561040f57600080fd5b5061028d606481565b34801561042457600080fd5b5061028d601281565b34801561043957600080fd5b50600054600160a01b900460ff165b604051901515815260200161026f565b34801561046457600080fd5b506003546102b9906001600160a01b031681565b34801561048457600080fd5b506102f16110f2565b34801561049957600080fd5b506104e96104a8366004611ed8565b6001600160a01b0316600090815260086020526040902080546001820154600290920154909260ff8083169261010081048216926201000090910490911690565b60408051958652602086019490945260ff9092169284019290925290151560608301521515608082015260a00161026f565b34801561052757600080fd5b50610260600a81565b34801561053c57600080fd5b506102f161054b366004611ed8565b611171565b34801561055c57600080fd5b5061028d600281565b34801561057157600080fd5b506102f1610580366004611ed8565b611244565b34801561059157600080fd5b506102f161131c565b3480156105a657600080fd5b506000546001600160a01b03166102b9565b3480156105c457600080fd5b5061028d60ff81565b3480156105d957600080fd5b506103b661134e565b3480156105ee57600080fd5b506105f761135a565b60405161026f9190611ff7565b34801561061057600080fd5b506102f161061f366004611ed8565b6113bc565b34801561063057600080fd5b50610388600281565b34801561064557600080fd5b50610448600181565b34801561065a57600080fd5b506102606103e881565b34801561067057600080fd5b5061044861067f366004611ed8565b61158a565b34801561069057600080fd5b506102f161069f366004611ed8565b61174a565b3480156106b057600080fd5b506102f16106bf366004611ed8565b6119a8565b3480156106d057600080fd5b50610388612cbe81565b6000546001600160a01b0316331461070d5760405162461bcd60e51b815260040161070490612044565b60405180910390fd5b6001600160a01b03811660009081526008602052604090206002810154610100900460ff1661074e5760405162461bcd60e51b815260040161070490612079565b6002810154600780546001600160a01b0385169260ff16908110610774576107746120b0565b6000918252602090912001546001600160a01b0316146107a65760405162461bcd60e51b8152600401610704906120c6565b805460055410156107f45760405162461bcd60e51b8152602060048201526018602482015277496e636f6e73697374656e7420627564676574206461746160401b6044820152606401610704565b806001015460065410156108455760405162461bcd60e51b8152602060048201526018602482015277496e636f6e73697374656e7420627564676574206461746160401b6044820152606401610704565b805460058054600090610859908490612113565b9091555050600181015460068054600090610875908490612113565b9091555050600080825560019091015550565b600054600160a01b900460ff161561089e575050565b6001600160a01b03821660009081526008602052604090206002810154610100900460ff166108df5760405162461bcd60e51b815260040161070490612079565b6002810154600780546001600160a01b0386169260ff16908110610905576109056120b0565b6000918252602090912001546001600160a01b0316146109375760405162461bcd60e51b8152600401610704906120c6565b600281015462010000900460ff16156109f957805460018201546040516348d497c760e01b81526001600160a01b03858116600483015233602483015260448201939093526064810191909152849160009182918291908516906348d497c7906084016000604051808303816000875af11580156109b9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109e19190810190612202565b9250925092506109f48786858585611af7565b505050505b505050565b6001546001600160a01b03163314610a7e5760405162461bcd60e51b815260206004820152603760248201527f4f6e6c79547275737465653a206f6e6c792063726561746f722063616e20617460448201527f746163682061207472757374656520636f6e74726163740000000000000000006064820152608401610704565b6002546001600160a01b031615610afd5760405162461bcd60e51b815260206004820152603b60248201527f4f6e6c79547275737465653a20746865207472757374656520636f6e7472616360448201527f742068617320616c7265616479206265656e20617474616368656400000000006064820152608401610704565b600180546001600160a01b0319908116909155600280549091166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610b555760405162461bcd60e51b815260040161070490612044565b6001600160a01b03831660009081526008602052604090206002810154610100900460ff16610b965760405162461bcd60e51b815260040161070490612079565b6002810154600780546001600160a01b0387169260ff16908110610bbc57610bbc6120b0565b6000918252602090912001546001600160a01b031614610bee5760405162461bcd60e51b8152600401610704906120c6565b82600554610bfc91906122f6565b600480546040516370a0823160e01b815230928101929092526001600160a01b0316906370a0823190602401602060405180830381865afa158015610c45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c69919061230e565b1015610cb75760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420746f6b656e2062616c616e63650000000000006044820152606401610704565b81600654610cc591906122f6565b471015610d145760405162461bcd60e51b815260206004820152601860248201527f496e73756666696369656e74206574682062616c616e636500000000000000006044820152606401610704565b8260056000828254610d2691906122f6565b925050819055508160066000828254610d3f91906122f6565b9091555050805483908290600090610d589084906122f6565b9250508190555081816001016000828254610d7391906122f6565b909155505050505050565b6002546001600160a01b03163314610df45760405162461bcd60e51b815260206004820152603360248201527f4f6e6c79547275737465653a206f6e6c7920747275737465652063616e20657860448201527232b1baba32903a3434b990333ab731ba34b7b760691b6064820152608401610704565b600054600160a01b900460ff1615610e0b5761109d565b60005b60075463ffffffff8216101561109b57600060078263ffffffff1681548110610e3957610e396120b0565b60009182526020808320909101546001600160a01b03168083526008909152604090912060028101549192509060ff61010090910416610e8b5760405162461bcd60e51b815260040161070490612079565b6002810154600780546001600160a01b0385169260ff16908110610eb157610eb16120b0565b6000918252602090912001546001600160a01b031614610ee35760405162461bcd60e51b8152600401610704906120c6565b600281015462010000900460ff161561108657805460018201546040516303c9f1e760e01b815267ffffffffffffffff8b1660048201526001600160a01b038a81166024830152898116604483015263ffffffff8916606483015260ff8816608483015260a482019390935260c481019190915283918216906303c9f1e79060e4016000604051808303816000875af1925050508015610fa557506040513d6000823e601f3d908101601f19168201604052610fa29190810190612202565b60015b61107357610fb1612327565b806308c379a014156110125750610fc6612343565b80610fd15750611014565b7f1c78fe569029f719914c6066018a968a8ca4d3810eed21ca6d09951cd0a9f590848b836040516110049392919061241a565b60405180910390a150611084565b505b604080516001600160a01b038516815267ffffffffffffffff8b166020820152606081830181905260009082015290517f1c78fe569029f719914c6066018a968a8ca4d3810eed21ca6d09951cd0a9f5909181900360800190a1611084565b6110808686858585611af7565b5050505b505b5050808061109390612457565b915050610e0e565b505b5050505050565b6110b06003601261247b565b6110bb90600a612584565b81565b6000546001600160a01b031633146110e85760405162461bcd60e51b815260040161070490612044565b6110f0611dbf565b565b6000546001600160a01b0316331461111c5760405162461bcd60e51b815260040161070490612044565b600054600160a01b900460ff16156111695760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610704565b6110f0611e43565b6000546001600160a01b0316331461119b5760405162461bcd60e51b815260040161070490612044565b6001600160a01b03811660009081526008602052604090206002810154610100900460ff166111dc5760405162461bcd60e51b815260040161070490612079565b6002810154600780546001600160a01b0385169260ff16908110611202576112026120b0565b6000918252602090912001546001600160a01b0316146112345760405162461bcd60e51b8152600401610704906120c6565b600201805462ff00001916905550565b6000546001600160a01b0316331461126e5760405162461bcd60e51b815260040161070490612044565b6001600160a01b03811660009081526008602052604090206002810154610100900460ff166112af5760405162461bcd60e51b815260040161070490612079565b6002810154600780546001600160a01b0385169260ff169081106112d5576112d56120b0565b6000918252602090912001546001600160a01b0316146113075760405162461bcd60e51b8152600401610704906120c6565b600201805462ff000019166201000017905550565b6000546001600160a01b031633146113465760405162461bcd60e51b815260040161070490612044565b6110f0611a43565b6110bb6012600a612584565b606060078054806020026020016040519081016040528092919081815260200182805480156113b257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611394575b5050505050905090565b6000546001600160a01b031633146113e65760405162461bcd60e51b815260040161070490612044565b6001600160a01b03811660009081526008602052604090206002810154610100900460ff16156114775760405162461bcd60e51b815260206004820152603660248201527f5468652063616d706169676e2077697468207468697320636f6e7472616374206044820152756164647265737320616c72656164792065786973747360501b6064820152608401610704565b600754610100116114ca5760405162461bcd60e51b815260206004820152601d60248201527f4e6f206d6f72652063616d706169676e732061726520616c6c6f7765640000006044820152606401610704565b60028101805461010061ff00198216811783556007805461ffff1990931660ff938416179091178355805460018101825560008290527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880180546001600160a01b0319166001600160a01b03871690811790915592548154919216908110611554576115546120b0565b6000918252602090912001546001600160a01b0316146115865760405162461bcd60e51b8152600401610704906120c6565b5050565b60008054600160a01b900460ff16156115e55760405162461bcd60e51b815260206004820181905260248201527f546865206d61726b6574696e6720636f6e7472616374206973207061757365646044820152606401610704565b6001600160a01b03821660009081526008602052604090206002810154610100900460ff166116265760405162461bcd60e51b815260040161070490612079565b6002810154600780546001600160a01b0386169260ff1690811061164c5761164c6120b0565b6000918252602090912001546001600160a01b03161461167e5760405162461bcd60e51b8152600401610704906120c6565b600281015462010000900460ff166116d85760405162461bcd60e51b815260206004820152601a60248201527f5468652063616d706169676e206973206e6f74206163746976650000000000006044820152606401610704565b604051632b24a7d560e11b815233600482015283906001600160a01b038216906356494faa90602401602060405180830381865afa15801561171e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117429190612593565b949350505050565b6000546001600160a01b031633146117745760405162461bcd60e51b815260040161070490612044565b6001600160a01b03811660009081526008602052604090206002810154610100900460ff166117b55760405162461bcd60e51b815260040161070490612079565b6002810154600780546001600160a01b0385169260ff169081106117db576117db6120b0565b6000918252602090912001546001600160a01b03161461180d5760405162461bcd60e51b8152600401610704906120c6565b611816826106da565b600780546000919061182a90600190612113565b8154811061183a5761183a6120b0565b60009182526020808320909101546001600160a01b0316808352600890915260409091206002015490915060ff610100909104166118ba5760405162461bcd60e51b815260206004820152601960248201527f496e636f73697374656e742063616d706169676e2064617461000000000000006044820152606401610704565b600280830180546001600160a01b0384166000908152600860205260409020909201805460ff191660ff938416179055546007805484939192909116908110611905576119056120b0565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506007805480611944576119446125b5565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556002938401805461ff00191690556001600160a01b0394909416815260089093525060408220828155600181019290925501805462ffffff19169055565b6000546001600160a01b031633146119d25760405162461bcd60e51b815260040161070490612044565b6001600160a01b038116611a375760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610704565b611a4081611e73565b50565b600054600160a01b900460ff1615611a905760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610704565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611acb3390565b6040516001600160a01b03909116815260200160405180910390a1565b6000546001600160a01b031690565b60005b835181101561109b576000848281518110611b1757611b176120b0565b6020026020010151905060006001600160a01b0316816001600160a01b031614611dac578351821015611cf4576000848381518110611b5857611b586120b0565b60200260200101519050600081118015611b73575086548111155b15611cf2576004805460405163a9059cbb60e01b81526001600160a01b03858116938201939093526024810184905291169063a9059cbb906044016020604051808303816000875af1925050508015611be9575060408051601f3d908101601f19168201909252611be691810190612593565b60015b611cbe57611bf5612327565b806308c379a01415611c625750611c0a612343565b80611c155750611c64565b6003546040517fa76d52006316997771fc50eef565e7d0432c0e464675710e478b3322568b510991611c54918c916001600160a01b03169085906125cb565b60405180910390a150611cf2565b505b600354604080516001600160a01b038b8116825290921660208301526060828201819052600090830152517fa76d52006316997771fc50eef565e7d0432c0e464675710e478b3322568b51099181900360800190a1611cf2565b5080876000016000828254611cd39190612113565b925050819055508060056000828254611cec9190612113565b90915550505b505b8251821015611dac576000838381518110611d1157611d116120b0565b60200260200101519050600081118015611d2f575080876001015410155b8015611d3b5750804710155b15611daa576040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015611d76573d6000803e3d6000fd5b5080876001016000828254611d8b9190612113565b925050819055508060066000828254611da49190612113565b90915550505b505b5080611db7816125f7565b915050611afa565b600054600160a01b900460ff16611e0f5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610704565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33611acb565b6000546001600160a01b03163314611e6d5760405162461bcd60e51b815260040161070490612044565b6110f060005b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114611a4057600080fd5b600060208284031215611eea57600080fd5b8135611ef581611ec3565b9392505050565b60008060408385031215611f0f57600080fd5b8235611f1a81611ec3565b91506020830135611f2a81611ec3565b809150509250929050565b600080600060608486031215611f4a57600080fd5b8335611f5581611ec3565b95602085013595506040909401359392505050565b600080600080600060a08688031215611f8257600080fd5b853567ffffffffffffffff81168114611f9a57600080fd5b94506020860135611faa81611ec3565b93506040860135611fba81611ec3565b9250606086013563ffffffff81168114611fd357600080fd5b9150608086013560ff81168114611fe957600080fd5b809150509295509295909350565b6020808252825182820181905260009190848201906040850190845b818110156120385783516001600160a01b031683529284019291840191600101612013565b50909695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601b908201527f5468652063616d706169676e20646f6573206e6f742065786973740000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6020808252601a908201527f496e636f6e73697374656e742063616d706169676e206c697374000000000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015612125576121256120fd565b500390565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156121665761216661212a565b6040525050565b600067ffffffffffffffff8211156121875761218761212a565b5060051b60200190565b600082601f8301126121a257600080fd5b815160206121af8261216d565b6040516121bc8282612140565b83815260059390931b85018201928281019150868411156121dc57600080fd5b8286015b848110156121f757805183529183019183016121e0565b509695505050505050565b60008060006060848603121561221757600080fd5b835167ffffffffffffffff8082111561222f57600080fd5b818601915086601f83011261224357600080fd5b815160206122508261216d565b60405161225d8282612140565b83815260059390931b850182019282810191508a84111561227d57600080fd5b948201945b838610156122a457855161229581611ec3565b82529482019490820190612282565b918901519197509093505050808211156122bd57600080fd5b6122c987838801612191565b935060408601519150808211156122df57600080fd5b506122ec86828701612191565b9150509250925092565b60008219821115612309576123096120fd565b500190565b60006020828403121561232057600080fd5b5051919050565b600060033d11156123405760046000803e5060005160e01c5b90565b600060443d10156123515790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561238157505050505090565b82850191508151818111156123995750505050505090565b843d87010160208285010111156123b35750505050505090565b6123c260208286010187612140565b509095945050505050565b6000815180845260005b818110156123f3576020818501810151868301820152016123d7565b81811115612405576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b038416815267ffffffffffffffff8316602082015260606040820181905260009061244e908301846123cd565b95945050505050565b600063ffffffff80831681811415612471576124716120fd565b6001019392505050565b600060ff821660ff841680821015612495576124956120fd565b90039392505050565b600181815b808511156124d95781600019048211156124bf576124bf6120fd565b808516156124cc57918102915b93841c93908002906124a3565b509250929050565b6000826124f05750600161257e565b816124fd5750600061257e565b8160018114612513576002811461251d57612539565b600191505061257e565b60ff84111561252e5761252e6120fd565b50506001821b61257e565b5060208310610133831016604e8410600b841016171561255c575081810a61257e565b612566838361249e565b806000190482111561257a5761257a6120fd565b0290505b92915050565b6000611ef560ff8416836124e1565b6000602082840312156125a557600080fd5b81518015158114611ef557600080fd5b634e487b7160e01b600052603160045260246000fd5b6001600160a01b0384811682528316602082015260606040820181905260009061244e908301846123cd565b600060001982141561260b5761260b6120fd565b506001019056fea264697066735822122039cb53aa3b47ef01eaff7d8712c0d949941803e77b5f2cd54375f19a27d07ffc64736f6c634300080b0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { LuminaRecords } from \"../LuminaRecords\";\n\nexport class LuminaRecords__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(overrides?: Overrides): Promise<LuminaRecords> {\n    return super.deploy(overrides || {}) as Promise<LuminaRecords>;\n  }\n  getDeployTransaction(overrides?: Overrides): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): LuminaRecords {\n    return super.attach(address) as LuminaRecords;\n  }\n  connect(signer: Signer): LuminaRecords__factory {\n    return super.connect(signer) as LuminaRecords__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): LuminaRecords {\n    return new Contract(address, _abi, signerOrProvider) as LuminaRecords;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"commisionPrc\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"Commision\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RegisteredBalance\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE_INC\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_WEEK\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_DIFFICULTY_STEP\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_NULL\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"DEMO\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"LUCKY_NUMBER\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_CNT\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_DONOR_BLOCKS\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MINERS_CLAIM_MIN_RECIPIENT_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MIN_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARDS_CNT_LIMIT\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_INC_INTERVAL\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_INC\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_STANDARD\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_START\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_DECIMALS\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"rewardUnits\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"_addClaim\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"force\",\n        type: \"bool\",\n      },\n    ],\n    name: \"_registerBalance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"registered\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"_updateBalance\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"firstBlockNumber_\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"_updateFirstBlockNumber\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"adminAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"adminAddr_\",\n        type: \"address\",\n      },\n    ],\n    name: \"attachAdmin\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenAddr_\",\n        type: \"address\",\n      },\n    ],\n    name: \"attachToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"trusteeAddr_\",\n        type: \"address\",\n      },\n    ],\n    name: \"attachTrustee\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"findBalance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getBalances\",\n    outputs: [\n      {\n        internalType: \"uint256[]\",\n        name: \"balances\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint64[]\",\n        name: \"blockNumbers\",\n        type: \"uint64[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64[]\",\n        name: \"blockNumbers\",\n        type: \"uint64[]\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"getClaims\",\n    outputs: [\n      {\n        internalType: \"uint16[]\",\n        name: \"claimsCnt\",\n        type: \"uint16[]\",\n      },\n      {\n        internalType: \"bool[]\",\n        name: \"claimed\",\n        type: \"bool[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"getClaimsCnt\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"wallet\",\n        type: \"address\",\n      },\n    ],\n    name: \"getCommision\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"commisionPrc\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasClaimed\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"rewardUnits\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint8\",\n        name: \"commisionPrc\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"setCommision\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"tokenAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"trusteeAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b5060008054336001600160a01b031991821681178355600280548316821790556004805490921617905560058054600160a01b600160e01b0319169055611a3b90819061005d90396000f3fe608060405234801561001057600080fd5b50600436106102265760003560e01c8063609eb1c311610130578063ad6e3318116100b8578063c6088d971161007c578063c6088d971461043d578063d045d5ae14610446578063d7a8a2b714610473578063f883fcaa146103de578063fc47e2091461049b57600080fd5b8063ad6e33181461041a578063b313bd621461042d578063b91268e81461031d578063c28bd11c146103de578063c28cedf31461043557600080fd5b806381830593116100ff57806381830593146103e6578063910eb1ce146103f75780639d941362146103d6578063a21577671461040a578063a5c9cd821461041257600080fd5b8063609eb1c3146103a2578063731fd3f7146103b557806373d6aafa146103d65780637fb01232146103de57600080fd5b80633e6e387c116101b3578063504b366211610182578063504b36621461035b578063552ba3331461036357806356656875146103765780635b7f415c146103895780635fbe4d1d1461039157600080fd5b80633e6e387c14610325578063406a6f601461032d578063479e92c814610340578063480414df1461034857600080fd5b80631df55679116101fa5780631df55679146102a457806322a0c348146102b957806330db4fa0146102da578063362b8b32146102fa5780633a3a7c531461031d57600080fd5b8062113e081461022b57806306e386321461024a5780630bf433091461026557806314270b651461027f575b600080fd5b6102336104a4565b60405161024192919061143f565b60405180910390f35b610252600581565b60405161ffff9091168152602001610241565b61026d60d081565b60405160ff9091168152602001610241565b6003546001600160a01b03165b6040516001600160a01b039091168152602001610241565b6102b76102b23660046114df565b610674565b005b6102cc6102c7366004611511565b6107a6565b604051908152602001610241565b6102e260c881565b6040516001600160401b039091168152602001610241565b61030d610308366004611544565b61090b565b6040519015158152602001610241565b6102cc610b54565b610252600281565b6102b761033b3660046114df565b610b6e565b61026d600a81565b6102b76103563660046114df565b610c8b565b61026d606481565b6102b7610371366004611589565b610da8565b61026d6103843660046114df565b610ec4565b61026d601281565b6001546001600160a01b031661028c565b6102b76103b03660046115b3565b610f47565b6103c86103c336600461160e565b61104b565b6040516102419291906116e4565b610252600a81565b61026d600281565b6005546001600160a01b031661028c565b6102b7610405366004611758565b6111cb565b61026d60ff81565b6102cc61126b565b6102b7610428366004611773565b611277565b6102e2600281565b61030d600181565b6102526103e881565b610252610454366004611758565b6001600160401b031660009081526007602052604090205461ffff1690565b610486610481366004611796565b61133c565b60405163ffffffff9091168152602001610241565b6102e2612cbe81565b33600090815260066020526040808220815160e08101835260609384939092908290810182600586835b8282101561050f5760408051808201909152600283028501805482526001908101546001600160401b031660208084019190915291835290920191016104ce565b50505090825250600a919091015460ff9081166020928301529082015191925081166001600160401b03811115610548576105486115f8565b604051908082528060200260200182016040528015610571578160200160208202803683370190505b5093508060ff166001600160401b0381111561058f5761058f6115f8565b6040519080825280602002602001820160405280156105b8578160200160208202803683370190505b50925060005b826020015160ff168160ff16101561066d57825160ff8216600581106105e6576105e66117c0565b602002015160000151858260ff1681518110610604576106046117c0565b6020908102919091010152825160ff821660058110610625576106256117c0565b602002015160200151848260ff1681518110610643576106436117c0565b6001600160401b039092166020928302919091019091015280610665816117ec565b9150506105be565b5050509091565b6002546001600160a01b031633146106f95760405162461bcd60e51b815260206004820152603760248201527f4f6e6c79547275737465653a206f6e6c792063726561746f722063616e20617460448201527f746163682061207472757374656520636f6e747261637400000000000000000060648201526084015b60405180910390fd5b6003546001600160a01b0316156107785760405162461bcd60e51b815260206004820152603b60248201527f4f6e6c79547275737465653a20746865207472757374656520636f6e7472616360448201527f742068617320616c7265616479206265656e206174746163686564000000000060648201526084016106f0565b600280546001600160a01b0319908116909155600380549091166001600160a01b0392909216919091179055565b6001600160a01b038216600090815260066020526040808220815160e08101835283929091908290810182600586835b828210156108175760408051808201909152600283028501805482526001908101546001600160401b031660208084019190915291835290920191016107d6565b50505090825250600a919091015460ff16602090910152905060005b816020015160ff168160ff1610156108b457815160ff82166005811061085b5761085b6117c0565b6020020151602001516001600160401b0316846001600160401b0316106108a257815160ff821660058110610892576108926117c0565b6020020151519250610905915050565b806108ac816117ec565b915050610833565b5081156109035760405162461bcd60e51b815260206004820152601d60248201527f5f62616c616e636546696e643a20636f72727570742062616c616e636500000060448201526064016106f0565b505b92915050565b6001546000906001600160a01b031633146109385760405162461bcd60e51b81526004016106f09061180c565b6001600160a01b038416600090815260066020526040902061095981611373565b6109656003601261185b565b61097090600a611962565b84101561099157600a8101546000945060ff16610991576000915050610b4d565b600a810154439060ff16158015906109a95750815485145b156109b75760019250610b4a565b600a820154600560ff90911610806109cc5750835b15610b4557600a820154600090600560ff909116106109f6576109f16001600561185b565b6109ff565b600a83015460ff165b9050805b60ff811615610a8b5783610a1860018361185b565b60ff1660058110610a2b57610a2b6117c0565b600202018460ff831660058110610a4457610a446117c0565b8254600291909102919091019081556001918201549101805467ffffffffffffffff19166001600160401b0390921691909117905580610a8381611971565b915050610a03565b5085835560018301805467ffffffffffffffff19166001600160401b038416179055600a830154600560ff9091161015610aee57600a8301805460ff16906000610ad4836117ec565b91906101000a81548160ff021916908360ff160217905550505b604080516001600160401b038416815260208101889052600195506001600160a01b038916917f0794a217cb61f365d81276ab2903aebd9d4d2c6d326af7deba31fce55ca8c48a910160405180910390a250610b4a565b600092505b50505b9392505050565b610b606003601261185b565b610b6b90600a611962565b81565b6000546001600160a01b03163314610be45760405162461bcd60e51b815260206004820152603360248201527f4f6e6c79546f6b656e3a206f6e6c792063726561746f722063616e206174746160448201527218da0818481d1bdad95b8818dbdb9d1c9858dd606a1b60648201526084016106f0565b6001546001600160a01b031615610c5d5760405162461bcd60e51b815260206004820152603760248201527f4f6e6c79546f6b656e3a2074686520746f6b656e20636f6e74726163742068616044820152761cc8185b1c9958591e481899595b88185d1d1858da1959604a1b60648201526084016106f0565b600080546001600160a01b0319908116909155600180549091166001600160a01b0392909216919091179055565b6004546001600160a01b03163314610d015760405162461bcd60e51b815260206004820152603360248201527f4f6e6c7941646d696e3a206f6e6c792063726561746f722063616e206174746160448201527218da08184818591b5a5b8818dbdb9d1c9858dd606a1b60648201526084016106f0565b6005546001600160a01b031615610d7a5760405162461bcd60e51b815260206004820152603760248201527f4f6e6c7941646d696e3a207468652061646d696e20636f6e74726163742068616044820152761cc8185b1c9958591e481899595b88185d1d1858da1959604a1b60648201526084016106f0565b600480546001600160a01b0319908116909155600580549091166001600160a01b0392909216919091179055565b6001546001600160a01b03163314610dd25760405162461bcd60e51b81526004016106f09061180c565b6001600160a01b0382166000908152600660205260409020610df381611373565b600a810154439060ff16610e555782825560018201805467ffffffffffffffff19166001600160401b038316179055600a8201805460ff16906000610e37836117ec565b91906101000a81548160ff021916908360ff16021790555050610e71565b8154831015610e71575081815560018101546001600160401b03165b604080516001600160401b0383168152602081018590526001600160a01b038616917f0794a217cb61f365d81276ab2903aebd9d4d2c6d326af7deba31fce55ca8c48a910160405180910390a250505050565b6001600160a01b03811660009081526009602052604081205460ff168015610efd5760ff81811614610ef65780610f00565b6000610f00565b60165b915060ff82161580610f25575060ff8216600a11801590610f255750605a60ff831611155b610f415760405162461bcd60e51b81526004016106f09061198e565b50919050565b6003546001600160a01b03163314610fbd5760405162461bcd60e51b815260206004820152603360248201527f4f6e6c79547275737465653a206f6e6c7920747275737465652063616e20657860448201527232b1baba32903a3434b990333ab731ba34b7b760691b60648201526084016106f0565b6001600160401b0383166000908152600760205260408120805461ffff1691610fe5836119e3565b825461ffff9182166101009390930a9283029190920219909116179055506001600160401b0390921660009081526008602090815260408083206001600160a01b03909416835292905220805463ffffffff90921663ffffffff19909216919091179055565b8151606090819060ff81166001600160401b0381111561106d5761106d6115f8565b604051908082528060200260200182016040528015611096578160200160208202803683370190505b5092508060ff166001600160401b038111156110b4576110b46115f8565b6040519080825280602002602001820160405280156110dd578160200160208202803683370190505b50915060005b8160ff168160ff1610156111c257611130868260ff1681518110611109576111096117c0565b60200260200101516001600160401b031660009081526007602052604090205461ffff1690565b848260ff1681518110611145576111456117c0565b602002602001019061ffff16908161ffff1681525050611181868260ff1681518110611173576111736117c0565b60200260200101518661133c565b63ffffffff1660001415838260ff16815181106111a0576111a06117c0565b91151560209283029190910190910152806111ba816117ec565b9150506110e3565b50509250929050565b6005546001600160a01b0316331461123e5760405162461bcd60e51b815260206004820152603060248201527f4f6e6c7941646d696e3a20636f6e6c792061646d696e2063616e20657865637560448201526f3a32903a3434b990333ab731ba34b7b760811b60648201526084016106f0565b600580546001600160401b03909216600160a01b0267ffffffffffffffff60a01b19909216919091179055565b610b6b6012600a611962565b3360ff8216158061129b575060ff8216600a1180159061129b5750605a60ff831611155b6112b75760405162461bcd60e51b81526004016106f09061198e565b600060ff8316156112c857826112cb565b60ff5b6001600160a01b03831660008181526009602052604090819020805460ff851660ff1990911617905551919250907f51a5c3921364280218d7e7926208d254f2ce18260cf6f45e7bb9432b044fe20b9061132f90869060ff91909116815260200190565b60405180910390a2505050565b6001600160401b0390911660009081526008602090815260408083206001600160a01b039094168352929052205463ffffffff1690565b600a810154600160ff909116111561143c57600a81015460009061139c9060019060ff1661185b565b90505b60ff81161561143a576000826113b660018461185b565b60ff16600581106113c9576113c96117c0565b600554600160029290920292909201908101549092506001600160401b03600160a01b909204821691161161142757600a8301805460ff1690600061140d83611971565b91906101000a81548160ff021916908360ff160217905550505b508061143281611971565b91505061139f565b505b50565b604080825283519082018190526000906020906060840190828701845b828110156114785781518452928401929084019060010161145c565b5050508381038285015284518082528583019183019060005b818110156114b65783516001600160401b031683529284019291840191600101611491565b5090979650505050505050565b80356001600160a01b03811681146114da57600080fd5b919050565b6000602082840312156114f157600080fd5b610b4d826114c3565b80356001600160401b03811681146114da57600080fd5b6000806040838503121561152457600080fd5b61152d836114c3565b915061153b602084016114fa565b90509250929050565b60008060006060848603121561155957600080fd5b611562846114c3565b9250602084013591506040840135801515811461157e57600080fd5b809150509250925092565b6000806040838503121561159c57600080fd5b6115a5836114c3565b946020939093013593505050565b6000806000606084860312156115c857600080fd5b6115d1846114fa565b92506115df602085016114c3565b9150604084013563ffffffff8116811461157e57600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561162157600080fd5b82356001600160401b038082111561163857600080fd5b818501915085601f83011261164c57600080fd5b8135602082821115611660576116606115f8565b8160051b604051601f19603f83011681018181108682111715611685576116856115f8565b6040529283528183019350848101820192898411156116a357600080fd5b948201945b838610156116c8576116b9866114fa565b855294820194938201936116a8565b96506116d790508782016114c3565b9450505050509250929050565b604080825283519082018190526000906020906060840190828701845b8281101561172157815161ffff1684529284019290840190600101611701565b5050508381038285015284518082528583019183019060005b818110156114b657835115158352928401929184019160010161173a565b60006020828403121561176a57600080fd5b610b4d826114fa565b60006020828403121561178557600080fd5b813560ff81168114610b4d57600080fd5b600080604083850312156117a957600080fd5b6117b2836114fa565b915061153b602084016114c3565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff811415611803576118036117d6565b60010192915050565b6020808252602f908201527f4f6e6c79546f6b656e3a206f6e6c7920746f6b656e2063616e2065786563757460408201526e32903a3434b990333ab731ba34b7b760891b606082015260800190565b600060ff821660ff841680821015611875576118756117d6565b90039392505050565b600181815b808511156118b957816000190482111561189f5761189f6117d6565b808516156118ac57918102915b93841c9390800290611883565b509250929050565b6000826118d057506001610905565b816118dd57506000610905565b81600181146118f357600281146118fd57611919565b6001915050610905565b60ff84111561190e5761190e6117d6565b50506001821b610905565b5060208310610133831016604e8410600b841016171561193c575081810a610905565b611946838361187e565b806000190482111561195a5761195a6117d6565b029392505050565b6000610b4d60ff8416836118c1565b600060ff821680611984576119846117d6565b6000190192915050565b60208082526035908201527f436f6d6d6973696f6e2076616c7565206973206f7574206f6620616c6c6f77656040820152740642072616e67653a205b31302d39305d206f72203605c1b606082015260800190565b600061ffff808316818114156119fb576119fb6117d6565b600101939250505056fea26469706673582212203bbd01010ac8023f3ce02a864f4765034e0c92e956db208258f345aedf78d8d864736f6c634300080b0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer, BigNumberish } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { LuminaToken } from \"../LuminaToken\";\n\nexport class LuminaToken__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    name: string,\n    symbol: string,\n    initSupply: BigNumberish,\n    recordsAddr_: string,\n    overrides?: Overrides\n  ): Promise<LuminaToken> {\n    return super.deploy(\n      name,\n      symbol,\n      initSupply,\n      recordsAddr_,\n      overrides || {}\n    ) as Promise<LuminaToken>;\n  }\n  getDeployTransaction(\n    name: string,\n    symbol: string,\n    initSupply: BigNumberish,\n    recordsAddr_: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(\n      name,\n      symbol,\n      initSupply,\n      recordsAddr_,\n      overrides || {}\n    );\n  }\n  attach(address: string): LuminaToken {\n    return super.attach(address) as LuminaToken;\n  }\n  connect(signer: Signer): LuminaToken__factory {\n    return super.connect(signer) as LuminaToken__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): LuminaToken {\n    return new Contract(address, _abi, signerOrProvider) as LuminaToken;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"symbol\",\n        type: \"string\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"initSupply\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recordsAddr_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"recordsAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"registerBalance\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b50604051620010a3380380620010a3833981016040819052620000349162000344565b8351849084906200004d906003906020850190620001d1565b50805162000063906004906020840190620001d1565b505050600062000078620000e460201b60201c565b90508060ff166012146200008b57600080fd5b620000af336200009d83600a620004ee565b620000a9908662000506565b620000e9565b50600580546001600160a01b039092166001600160a01b03199283168117909155600680549092161790555062000580915050565b601290565b6001600160a01b038216620001445760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000158919062000528565b90915550506001600160a01b038216600090815260208190526040812080548392906200018790849062000528565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001df9062000543565b90600052602060002090601f0160209004810192826200020357600085556200024e565b82601f106200021e57805160ff19168380011785556200024e565b828001600101855582156200024e579182015b828111156200024e57825182559160200191906001019062000231565b506200025c92915062000260565b5090565b5b808211156200025c576000815560010162000261565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200029f57600080fd5b81516001600160401b0380821115620002bc57620002bc62000277565b604051601f8301601f19908116603f01168101908282118183101715620002e757620002e762000277565b816040528381526020925086838588010111156200030457600080fd5b600091505b8382101562000328578582018301518183018401529082019062000309565b838211156200033a5760008385830101525b9695505050505050565b600080600080608085870312156200035b57600080fd5b84516001600160401b03808211156200037357600080fd5b62000381888389016200028d565b955060208701519150808211156200039857600080fd5b50620003a7878288016200028d565b60408701516060880151919550935090506001600160a01b0381168114620003ce57600080fd5b939692955090935050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000430578160001904821115620004145762000414620003d9565b808516156200042257918102915b93841c9390800290620003f4565b509250929050565b6000826200044957506001620004e8565b816200045857506000620004e8565b81600181146200047157600281146200047c576200049c565b6001915050620004e8565b60ff841115620004905762000490620003d9565b50506001821b620004e8565b5060208310610133831016604e8410600b8410161715620004c1575081810a620004e8565b620004cd8383620003ef565b8060001904821115620004e457620004e4620003d9565b0290505b92915050565b6000620004ff60ff84168362000438565b9392505050565b6000816000190483118215151615620005235762000523620003d9565b500290565b600082198211156200053e576200053e620003d9565b500190565b600181811c908216806200055857607f821691505b602082108114156200057a57634e487b7160e01b600052602260045260246000fd5b50919050565b610b1380620005906000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c578063a457c2d711610066578063a457c2d7146101b8578063a9059cbb146101cb578063c2cf1cdc146101de578063dd62ed3e146101e857600080fd5b8063395093511461017457806370a082311461018757806395d89b41146101b057600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd146101155780631e7bfd601461012757806323b872dd14610152578063313ce56714610165575b600080fd5b6100dc610221565b6040516100e9919061092e565b60405180910390f35b61010561010036600461099f565b6102b3565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b60055461013a906001600160a01b031681565b6040516001600160a01b0390911681526020016100e9565b6101056101603660046109c9565b6102c9565b604051601281526020016100e9565b61010561018236600461099f565b610378565b610119610195366004610a05565b6001600160a01b031660009081526020819052604090205490565b6100dc6103b4565b6101056101c636600461099f565b6103c3565b6101056101d936600461099f565b61045c565b6101e6610469565b005b6101196101f6366004610a27565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461023090610a5a565b80601f016020809104026020016040519081016040528092919081815260200182805461025c90610a5a565b80156102a95780601f1061027e576101008083540402835291602001916102a9565b820191906000526020600020905b81548152906001019060200180831161028c57829003601f168201915b5050505050905090565b60006102c03384846104fa565b50600192915050565b60006102d684848461061e565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103605760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61036d85338584036104fa565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102c09185906103af908690610a95565b6104fa565b60606004805461023090610a5a565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156104455760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610357565b61045233858584036104fa565b5060019392505050565b60006102c033848461061e565b33600090815260208190526040812054600654604051631b15c59960e11b815233600482015260248101839052600160448201529192506001600160a01b03169063362b8b32906064016020604051808303816000875af11580156104d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f69190610abb565b5050565b6001600160a01b03831661055c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610357565b6001600160a01b0382166105bd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610357565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b610629838383610760565b6006546001600160a01b031663552ba3338461065a816001600160a01b031660009081526020819052604090205490565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156106a057600080fd5b505af19250505080156106b1575060015b506006546001600160a01b031663362b8b32836106e3816001600160a01b031660009081526020819052604090205490565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152600060448201526064016020604051808303816000875af1925050508015610751575060408051601f3d908101601f1916820190925261074e91810190610abb565b60015b61075a57505050565b50505050565b6001600160a01b0383166107c45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610357565b6001600160a01b0382166108265760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610357565b6001600160a01b0383166000908152602081905260409020548181101561089e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610357565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108d5908490610a95565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161092191815260200190565b60405180910390a361075a565b600060208083528351808285015260005b8181101561095b5785810183015185820160400152820161093f565b8181111561096d576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461099a57600080fd5b919050565b600080604083850312156109b257600080fd5b6109bb83610983565b946020939093013593505050565b6000806000606084860312156109de57600080fd5b6109e784610983565b92506109f560208501610983565b9150604084013590509250925092565b600060208284031215610a1757600080fd5b610a2082610983565b9392505050565b60008060408385031215610a3a57600080fd5b610a4383610983565b9150610a5160208401610983565b90509250929050565b600181811c90821680610a6e57607f821691505b60208210811415610a8f57634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610ab657634e487b7160e01b600052601160045260246000fd5b500190565b600060208284031215610acd57600080fd5b81518015158114610a2057600080fdfea26469706673582212209c3f96b4504cef7d73ba137cba03e598e0c6c339c9805d18e5422456a47b06cc64736f6c634300080b0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { LuminaTrustee } from \"../LuminaTrustee\";\n\nexport class LuminaTrustee__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    tokenAddr_: string,\n    recordsAddr_: string,\n    adminAddr_: string,\n    overrides?: Overrides\n  ): Promise<LuminaTrustee> {\n    return super.deploy(\n      tokenAddr_,\n      recordsAddr_,\n      adminAddr_,\n      overrides || {}\n    ) as Promise<LuminaTrustee>;\n  }\n  getDeployTransaction(\n    tokenAddr_: string,\n    recordsAddr_: string,\n    adminAddr_: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(\n      tokenAddr_,\n      recordsAddr_,\n      adminAddr_,\n      overrides || {}\n    );\n  }\n  attach(address: string): LuminaTrustee {\n    return super.attach(address) as LuminaTrustee;\n  }\n  connect(signer: Signer): LuminaTrustee__factory {\n    return super.connect(signer) as LuminaTrustee__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): LuminaTrustee {\n    return new Contract(address, _abi, signerOrProvider) as LuminaTrustee;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"tokenAddr_\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recordsAddr_\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"adminAddr_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"miner\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"solution\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"commisionPrc\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"claimNo\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"Claim\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"marketingAddr\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"message\",\n        type: \"string\",\n      },\n    ],\n    name: \"MarketingCallFailed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Paused\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Unpaused\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE_INC\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_WEEK\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_DIFFICULTY_STEP\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_NULL\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"DEMO\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"LUCKY_NUMBER\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_CNT\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_DONOR_BLOCKS\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MINERS_CLAIM_MIN_RECIPIENT_BALANCE\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MIN_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARDS_CNT_LIMIT\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_INC_INTERVAL\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_INC\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_STANDARD\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"REWARD_UNITS_START\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_DECIMALS\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"TOKEN_UNIT\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"adminAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"address\",\n        name: \"miner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"solution\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"claimReward\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"rewardUnits\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"reason\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"premium\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"claimsCnt\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getClaimedTokens\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getProgress\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"progress\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"progressMax\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"marketingAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"pause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"recordsAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"marketingAddr_\",\n        type: \"address\",\n      },\n    ],\n    name: \"setMarketingAddr\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"tokenAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"unpause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"address\",\n        name: \"miner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"solution\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"verifyClaim\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"rewardUnits\",\n        type: \"uint32\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"reason\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"premium\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"rewardsCnt\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"claimsCnt\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"address\",\n        name: \"miner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"solution\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"verifySolution\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"solvedDifficulty\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b506040516200277a3803806200277a83398101604081905262000034916200025d565b6200003f33620000ca565b6000805460ff60a01b19169055620000566200011a565b600180546001600160a01b039485166001600160a01b03199182168117909255600280549486169482168517905560038054939095169281168317909455600580548516909117905560068054909316909117909155600780546001600160e01b03191690911790556000600855620002a7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146200017a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6200018f6200019160201b620015e11760201c565b565b620001a5600054600160a01b900460ff1690565b15620001e75760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640162000171565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258620002233390565b6040516001600160a01b03909116815260200160405180910390a1565b80516001600160a01b03811681146200025857600080fd5b919050565b6000806000606084860312156200027357600080fd5b6200027e8462000240565b92506200028e6020850162000240565b91506200029e6040850162000240565b90509250925092565b6124c380620002b76000396000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c80638183059311610125578063b91268e8116100ad578063c6088d971161007c578063c6088d9714610427578063f2fde38b14610430578063f668bee514610443578063f883fcaa1461039b578063fc47e2091461048957600080fd5b8063b91268e814610307578063b915dec214610417578063c28bd11c1461039b578063c28cedf31461041f57600080fd5b80639d941362116100f45780639d94136214610393578063a2157767146103ec578063a5c9cd82146103f4578063a7c1d590146103fc578063b313bd621461040f57600080fd5b806381830593146103a35780638456cb59146103b65780638da5cb5b146103be578063939c4456146103cf57600080fd5b80633ff42b92116101a85780635c975abb116101775780635c975abb1461035a5780635fbe4d1d14610378578063715018a61461038b57806373d6aafa146103935780637fb012321461039b57600080fd5b80633ff42b921461032f578063479e92c814610342578063504b36621461034a5780635b7f415c1461035257600080fd5b80631e7bfd60116101ef5780631e7bfd60146102bc57806330db4fa0146102e75780633a3a7c53146103075780633e6e387c1461031d5780633f4ba83a1461032557600080fd5b806306e38632146102215780630bf43309146102415780630e7d8db91461025b5780630ff8a7eb146102a9575b600080fd5b610229600581565b60405161ffff90911681526020015b60405180910390f35b61024960d081565b60405160ff9091168152602001610238565b61026e610269366004611da9565b610492565b6040805163ffffffff909616865260ff90941660208601529115159284019290925261ffff918216606084015216608082015260a001610238565b6102296102b7366004611da9565b610862565b6002546102cf906001600160a01b031681565b6040516001600160a01b039091168152602001610238565b6102ef60c881565b6040516001600160401b039091168152602001610238565b61030f610a50565b604051908152602001610238565b610229600281565b61032d610a6a565b005b6004546102cf906001600160a01b031681565b610249600a81565b610249606481565b610249601281565b600054600160a01b900460ff165b6040519015158152602001610238565b6001546102cf906001600160a01b031681565b61032d610a9e565b610229600a81565b610249600281565b6003546102cf906001600160a01b031681565b61032d610afa565b6000546001600160a01b03166102cf565b6103d7610b2c565b60408051928352602083019190915201610238565b61024960ff81565b61030f610baf565b61032d61040a366004611dfa565b610bbb565b6102ef600281565b60085461030f565b610368600181565b6102296103e881565b61032d61043e366004611dfa565b610d20565b610456610451366004611da9565b610dbb565b6040805163ffffffff909516855260ff90931660208501529015159183019190915261ffff166060820152608001610238565b6102ef612cbe81565b60008060008060006104ae60005460ff600160a01b9091041690565b156104d45760405162461bcd60e51b81526004016104cb90611e1e565b60405180910390fd5b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260075460405163f5d4d8a160e01b81526001600160401b038c1660048201526000916001600160a01b03169063f5d4d8a19060240161012060405180830381865afa158015610560573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105849190611eed565b60808301519197509193509091506105de5760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206368616c6c656e6765207265636f7264000000000000000060448201526064016104cb565b60006105f08c8b848660000151611663565b905060006106008d8d8d8d610862565b9050600098508160ff168161ffff161061084e5760065460405163d7a8a2b760e01b81526001600160401b038f1660048201526001600160a01b038d811660248301529091169063d7a8a2b790604401602060405180830381865afa15801561066d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106919190611fb1565b63ffffffff16156106a55760039750610853565b8a6001600160a01b03168c6001600160a01b03161415801561074957506106ce60036012611fed565b6106d990600a6120f4565b6005546040516370a0823160e01b81526001600160a01b038e81166004830152909116906370a0823190602401602060405180830381865afa158015610723573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107479190612103565b105b156107575760059750610853565b60006107668560000151611843565b9097509050600261ffff8816111561077d57600296505b600660009054906101000a90046001600160a01b03166001600160a01b031663d045d5ae8f6040518263ffffffff1660e01b81526004016107cd91906001600160401b0391909116815260200190565b602060405180830381865afa1580156107ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080e919061211c565b95508661ffff168661ffff16101561084357846040015161ffff168161ffff166108389190612137565b995060009850610848565b600498505b50610853565b600297505b50505050945094509450945094565b60008054600160a01b900460ff161561088d5760405162461bcd60e51b81526004016104cb90611e1e565b60075460405163f5d4d8a160e01b81526001600160401b0387166004820152600091829182916001600160a01b03169063f5d4d8a19060240161012060405180830381865afa1580156108e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109089190611eed565b9250925092508060ff16600161091f576014610922565b600a5b60ff1611158015610937575060d060ff821611155b6109835760405162461bcd60e51b815260206004820152601a60248201527f446966666963756c7479206973206f7574206f662072616e676500000000000060448201526064016104cb565b81158061099257506001821515145b61099b57600080fd5b82516040805160208101889052908101919091526001600160a01b0380881660608301528816608082015260009060a00160405160208183030381529060405290508051608014610a265760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420736f6c7574696f6e206461746160581b60448201526064016104cb565b80516020820120610a36816118dc565b610a4290610100612163565b9a9950505050505050505050565b610a5c60036012611fed565b610a6790600a6120f4565b81565b6000546001600160a01b03163314610a945760405162461bcd60e51b81526004016104cb90612186565b610a9c61194f565b565b6000546001600160a01b03163314610ac85760405162461bcd60e51b81526004016104cb90612186565b600054600160a01b900460ff1615610af25760405162461bcd60e51b81526004016104cb90611e1e565b610a9c6119d3565b6000546001600160a01b03163314610b245760405162461bcd60e51b81526004016104cb90612186565b610a9c6115e1565b6008546005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610b78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9c9190612103565b600854610ba991906121bb565b90509091565b610a676012600a6120f4565b6000546001600160a01b03163314610be55760405162461bcd60e51b81526004016104cb90612186565b6001600160a01b0381161580610c7857506000546001600160a01b03166001600160a01b0316816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6d91906121d3565b6001600160a01b0316145b610cfe5760405162461bcd60e51b815260206004820152604b60248201527f546865206d61726b6574696e6720636f6e74726163742061646472657373206d60448201527f75737420706f696e7420746f206120636f6e747261637420776974682074686560648201526a1039b0b6b29037bbb732b960a91b608482015260a4016104cb565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610d4a5760405162461bcd60e51b81526004016104cb90612186565b6001600160a01b038116610daf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104cb565b610db881611a03565b50565b600080600080610dd560005460ff600160a01b9091041690565b15610df25760405162461bcd60e51b81526004016104cb90611e1e565b6000610e0089898989610492565b9398509196509450909250905060ff84166115d55760008563ffffffff1611610e635760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c995dd85c9908185b5bdd5b9d605a1b60448201526064016104cb565b610e716107d06103e8611a53565b8563ffffffff161115610ec65760405162461bcd60e51b815260206004820152601e60248201527f496e76616c6964207265776172642c20616d6f756e7420746f6f20626967000060448201526064016104cb565b6000610ef2610ed760036012611fed565b610ee290600a6120f4565b63ffffffff8089169190611a5316565b600654604051635665687560e01b81526001600160a01b038b8116600483015292935060009290911690635665687590602401602060405180830381865afa158015610f42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6691906121f0565b9050886001600160a01b03168a6001600160a01b031614611113576000610f9b6064610f958560ff8616611a53565b90611a68565b90506000610fa98483611a74565b60055460405163a9059cbb60e01b81526001600160a01b038e811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015610ffe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611022919061220b565b5060055460405163a9059cbb60e01b81526001600160a01b038e81166004830152602482018590529091169063a9059cbb906044016020604051808303816000875af1158015611076573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109a919061220b565b508b6001600160a01b03168b6001600160a01b03168e6001600160401b03167f302c08954cd01f3e9a025e113b28fe1600afb14599ebd20d4447981c78fa958e8d878b6040516111049392919092835260ff91909116602083015261ffff16604082015260600190565b60405180910390a450506111eb565b60055460405163a9059cbb60e01b81526001600160a01b038b81166004830152602482018590529091169063a9059cbb906044016020604051808303816000875af1158015611166573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118a919061220b565b50604080518981526000602082015261ffff86168183015290516001600160a01b038c811692908c16916001600160401b038f16917f302c08954cd01f3e9a025e113b28fe1600afb14599ebd20d4447981c78fa958e919081900360600190a45b6008546111f89083611a80565b600855600261ffff8516106112485760405162461bcd60e51b8152602060048201526016602482015275636c61696d20636f756e7420697320746f6f2062696760501b60448201526064016104cb565b8261ffff168461ffff16106112985760405162461bcd60e51b8152602060048201526016602482015275636c61696d20636f756e7420697320746f6f2062696760501b60448201526064016104cb565b836112a281612226565b60065460405163609eb1c360e01b81526001600160401b038f1660048201526001600160a01b038d8116602483015263ffffffff8c1660448301529297509116915063609eb1c390606401600060405180830381600087803b15801561130757600080fd5b505af115801561131b573d6000803e3d6000fd5b505050508261ffff168461ffff16106113d55760078054600160a01b90046001600160401b031690601461134e83612248565b82546101009290920a6001600160401b0381810219909316918316021790915560075460405163f7f595fb60e01b8152918e16600483015287151560248301526001600160a01b0316915063f7f595fb90604401600060405180830381600087803b1580156113bc57600080fd5b505af11580156113d0573d6000803e3d6000fd5b505050505b6004546001600160a01b0316156115d257600480546040516301389dcb60e51b81526001600160401b038e16928101929092526001600160a01b038c811660248401528b8116604484015263ffffffff8a16606484015260ff8416608484015216908190632713b9609060a401600060405180830381600087803b15801561145c57600080fd5b505af192505050801561146d575060015b6115d057611479612265565b806308c379a0141561152d575061148e612281565b80611499575061152f565b600980546001600160401b03169060006114b283612248565b91906101000a8154816001600160401b0302191690836001600160401b03160217905550507fe4672f4d62a9c8ce07cefba7f97b1e461ca30161fc35c9095d5aab6c3b77e189600460009054906101000a90046001600160a01b03168e8360405161151f9392919061230a565b60405180910390a1506115d0565b505b600980546801000000000000000090046001600160401b031690600861155483612248565b82546101009290920a6001600160401b03818102199093169183160217909155600454604080516001600160a01b039092168252918f16602082015260609181018290526000918101919091527fe4672f4d62a9c8ce07cefba7f97b1e461ca30161fc35c9095d5aab6c3b77e189915060800160405180910390a15b505b50505b50945094509450949050565b600054600160a01b900460ff161561160b5760405162461bcd60e51b81526004016104cb90611e1e565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586116463390565b6040516001600160a01b03909116815260200160405180910390a1565b600654604051630454186960e31b81526001600160a01b0385811660048301526001600160401b038716602483015260009283929116906322a0c34890604401602060405180830381865afa1580156116c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e49190612103565b905060006116f3848784611a8c565b9050600061170083611b59565b905060ff8616600a1180159061171a575060d060ff871611155b61177c5760405162461bcd60e51b815260206004820152602d60248201527f766572696679436c61696d28293a2067656e6572616c446966666963756c747960448201526c206f7574206f662072616e676560981b60648201526084016104cb565b6000611788828461237f565b90508060ff168760ff16101561179f5760006117a9565b6117a98188611fed565b9450600a60ff861610156117bc57600a94505b60ff8516600a118015906117d4575060d060ff861611155b6118375760405162461bcd60e51b815260206004820152602e60248201527f766572696679436c61696d28293a2061646a7573746564446966666963756c7460448201526d79206f7574206f662072616e676560901b60648201526084016104cb565b50505050949350505050565b600080826202222260ec82901c141561186557506101f4936107d09350915050565b61222260f082901c1415611881575060c8936101f49350915050565b61022260f482901c141561189b5750606493849350915050565b602260fe82901c14156118b5575060329360149350915050565b600260fc82901c14156118cf575060149360059350915050565b50600a9360019350915050565b6000806101005b8061ffff168261ffff161015611948576000600161190183856123a4565b61ffff16901c9050600060016119188360026123ca565b61192291906123da565b905080861161193357819250611941565b61193e8260016123a4565b93505b50506118e3565b5092915050565b600054600160a01b900460ff1661199f5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016104cb565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33611646565b6000546001600160a01b031633146119fd5760405162461bcd60e51b81526004016104cb90612186565b610a9c60005b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611a5f82846123f1565b90505b92915050565b6000611a5f8284612426565b6000611a5f82846123da565b6000611a5f82846121bb565b6000836001600160a01b03841680821883611aa682611cf9565b905061ffff8116611aba5750610100611ac8565b80611ac48161243a565b9150505b6000611ae0611ad96012600a6120f4565b8890611a68565b9050600060018210611b345760148361ffff1610611b005750601e611b4c565b600a8361ffff1610611b2957611b17600a84611fed565b611b2290601461237f565b9050611b4c565b611b22836002612458565b600a8361ffff161115611b495750600a611b4c565b50815b9998505050505050505050565b600080611b72611b6b6012600a6120f4565b8490611a68565b90506000611ba6611b8560036012611fed565b611b9090600a6120f4565b610f95611b9f6012600a6120f4565b8790611d73565b9050600060018310611c5c576103e88310611bc35750601e611cf1565b6101f48310611bd45750601c611cf1565b60c88310611be45750601a611cf1565b60648310611bf457506018611cf1565b60328310611c0457506016611cf1565b60148310611c1457506014611cf1565b600a8310611c2457506012611cf1565b60058310611c3457506010611cf1565b60038310611c445750600e611cf1565b60028310611c545750600c611cf1565b50600a611cf1565b6101f48210611c6d57506009611cf1565b60c88210611c7d57506008611cf1565b60648210611c8d57506007611cf1565b60328210611c9d57506006611cf1565b60148210611cad57506005611cf1565b600a8210611cbd57506004611cf1565b60058210611ccd57506003611cf1565b60028210611cdd57506002611cf1565b60018210611ced57506001611cf1565b5060005b949350505050565b600081611d0857506000919050565b60016101005b8061ffff168261ffff1610156119485760006001611d2c83856123a4565b61ffff16901c905060006001611d438360026123ca565b611d4d91906123da565b9050858116611d6857611d618260016123a4565b9350611d6c565b8192505b5050611d0e565b6000611a5f8284612479565b6001600160401b0381168114610db857600080fd5b6001600160a01b0381168114610db857600080fd5b60008060008060808587031215611dbf57600080fd5b8435611dca81611d7f565b93506020850135611dda81611d94565b92506040850135611dea81611d94565b9396929550929360600135925050565b600060208284031215611e0c57600080fd5b8135611e1781611d94565b9392505050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60e081018181106001600160401b0382111715611e7557634e487b7160e01b600052604160045260246000fd5b60405250565b601f8201601f191681016001600160401b0381118282101715611eae57634e487b7160e01b600052604160045260246000fd5b6040525050565b805161ffff81168114611ec757600080fd5b919050565b805160ff81168114611ec757600080fd5b80518015158114611ec757600080fd5b6000806000838503610120811215611f0457600080fd5b60e0811215611f1257600080fd5b50604051611f1f81611e48565b845181526020850151611f3181611d7f565b6020820152611f4260408601611eb5565b6040820152611f5360608601611ecc565b6060820152611f6460808601611edd565b6080820152611f7560a08601611ecc565b60a0820152611f8660c08601611ecc565b60c08201529250611f9960e08501611edd565b9150611fa86101008501611ecc565b90509250925092565b600060208284031215611fc357600080fd5b815163ffffffff81168114611e1757600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168082101561200757612007611fd7565b90039392505050565b600181815b8085111561204b57816000190482111561203157612031611fd7565b8085161561203e57918102915b93841c9390800290612015565b509250929050565b60008261206257506001611a62565b8161206f57506000611a62565b8160018114612085576002811461208f576120ab565b6001915050611a62565b60ff8411156120a0576120a0611fd7565b50506001821b611a62565b5060208310610133831016604e8410600b84101617156120ce575081810a611a62565b6120d88383612010565b80600019048211156120ec576120ec611fd7565b029392505050565b6000611a5f60ff841683612053565b60006020828403121561211557600080fd5b5051919050565b60006020828403121561212e57600080fd5b611a5f82611eb5565b600063ffffffff8083168185168183048111821515161561215a5761215a611fd7565b02949350505050565b600061ffff8381169083168181101561217e5761217e611fd7565b039392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156121ce576121ce611fd7565b500190565b6000602082840312156121e557600080fd5b8151611e1781611d94565b60006020828403121561220257600080fd5b611a5f82611ecc565b60006020828403121561221d57600080fd5b611a5f82611edd565b600061ffff8083168181141561223e5761223e611fd7565b6001019392505050565b60006001600160401b038083168181141561223e5761223e611fd7565b600060033d111561227e5760046000803e5060005160e01c5b90565b600060443d101561228f5790565b6040516003193d81016004833e81513d6001600160401b0381602484011181841117156122be57505050505090565b82850191508151818111156122d65750505050505090565b843d87010160208285010111156122f05750505050505090565b6122ff60208286010187611e7b565b509095945050505050565b60018060a01b0384168152600060206001600160401b0385168184015260606040840152835180606085015260005b8181101561235557858101830151858201608001528201612339565b81811115612367576000608083870101525b50601f01601f19169290920160800195945050505050565b600060ff821660ff84168060ff0382111561239c5761239c611fd7565b019392505050565b600061ffff8083168185168083038211156123c1576123c1611fd7565b01949350505050565b6000611a5f61ffff841683612053565b6000828210156123ec576123ec611fd7565b500390565b600081600019048311821515161561240b5761240b611fd7565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261243557612435612410565b500490565b600061ffff82168061244e5761244e611fd7565b6000190192915050565b600060ff821660ff84168160ff04811182151516156120ec576120ec611fd7565b60008261248857612488612410565b50069056fea26469706673582212204d23160e1ee3f61ca80f12b85beba6576c000300845295ec4aca0f9bbf1a238d64736f6c634300080b0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { ProgressContractLocker } from \"../ProgressContractLocker\";\n\nexport class ProgressContractLocker__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    erc20Addr_: string,\n    progressingAddr_: string,\n    overrides?: Overrides\n  ): Promise<ProgressContractLocker> {\n    return super.deploy(\n      erc20Addr_,\n      progressingAddr_,\n      overrides || {}\n    ) as Promise<ProgressContractLocker>;\n  }\n  getDeployTransaction(\n    erc20Addr_: string,\n    progressingAddr_: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(\n      erc20Addr_,\n      progressingAddr_,\n      overrides || {}\n    );\n  }\n  attach(address: string): ProgressContractLocker {\n    return super.attach(address) as ProgressContractLocker;\n  }\n  connect(signer: Signer): ProgressContractLocker__factory {\n    return super.connect(signer) as ProgressContractLocker__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): ProgressContractLocker {\n    return new Contract(\n      address,\n      _abi,\n      signerOrProvider\n    ) as ProgressContractLocker;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"erc20Addr_\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"progressingAddr_\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"availableBalanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"deposit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"erc20Addr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"notAvailableBalanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"progressingAddr\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalLockedBalance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"withdraw\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"withdrawAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"withdrawnBalanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b5060405162001cee38038062001cee833981016040819052620000349162000456565b620000c76040518060400160405280600781526020016602637b1b5b2b2160cd1b815250836001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000c19190810190620004a4565b62000223565b62000124604051806040016040528060018152602001601360fa1b815250846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000097573d6000803e3d6000fd5b8383838381600390805190602001906200014092919062000393565b5080516200015690600490602084019062000393565b5050600580546001600160a01b038086166001600160a01b031992831617909255600680549285169290911682179055604080516349ce222b60e11b8152815192935063939c445692600480830193928290030181865afa158015620001c0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001e6919062000580565b5050600a80546001600160a01b039788166001600160a01b0319918216179091556009805496909716951694909417909455506200064792505050565b80518251606091849184916000916200023d9190620005bb565b6001600160401b038111156200025757620002576200048e565b6040519080825280601f01601f19166020018201604052801562000282576020820181803683370190505b509050806000805b85518110156200030657858181518110620002a957620002a9620005d6565b01602001516001600160f81b0319168383620002c581620005ec565b945081518110620002da57620002da620005d6565b60200101906001600160f81b031916908160001a90535080620002fd81620005ec565b9150506200028a565b5060005b84518110156200038657848181518110620003295762000329620005d6565b01602001516001600160f81b03191683836200034581620005ec565b9450815181106200035a576200035a620005d6565b60200101906001600160f81b031916908160001a905350806200037d81620005ec565b9150506200030a565b5090979650505050505050565b828054620003a1906200060a565b90600052602060002090601f016020900481019282620003c5576000855562000410565b82601f10620003e057805160ff191683800117855562000410565b8280016001018555821562000410579182015b8281111562000410578251825591602001919060010190620003f3565b506200041e92915062000422565b5090565b5b808211156200041e576000815560010162000423565b80516001600160a01b03811681146200045157600080fd5b919050565b600080604083850312156200046a57600080fd5b620004758362000439565b9150620004856020840162000439565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215620004b857600080fd5b82516001600160401b0380821115620004d057600080fd5b818501915085601f830112620004e557600080fd5b815181811115620004fa57620004fa6200048e565b604051601f8201601f19908116603f011681019083821181831017156200052557620005256200048e565b8160405282815288868487010111156200053e57600080fd5b600093505b8284101562000562578484018601518185018701529285019262000543565b82841115620005745760008684830101525b98975050505050505050565b600080604083850312156200059457600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b60008219821115620005d157620005d1620005a5565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415620006035762000603620005a5565b5060010190565b600181811c908216806200061f57607f821691505b602082108114156200064157634e487b7160e01b600052602260045260246000fd5b50919050565b61169780620006576000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806362d8908f116100ad578063a457c2d711610071578063a457c2d714610289578063a9059cbb1461029c578063b6b55f25146102af578063c20704af146102c2578063dd62ed3e146102d557600080fd5b806362d8908f1461021457806370a082311461022757806378f77ebf14610250578063853828b61461027957806395d89b411461028157600080fd5b80632d98ac5e116100f45780632d98ac5e146101aa5780632e1a7d4d146101b2578063313ce567146101c7578063317e3ce0146101d6578063395093511461020157600080fd5b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017257806323b872dd1461018457806325d998bb14610197575b600080fd5b61013961030e565b60405161014691906112fa565b60405180910390f35b61016261015d36600461136b565b6103a0565b6040519015158152602001610146565b6002545b604051908152602001610146565b610162610192366004611395565b6103b7565b6101766101a53660046113d1565b610466565b6101766105bf565b6101c56101c03660046113ec565b610630565b005b60405160128152602001610146565b600a546101e9906001600160a01b031681565b6040516001600160a01b039091168152602001610146565b61016261020f36600461136b565b6107a8565b6101766102223660046113d1565b6107e4565b6101766102353660046113d1565b6001600160a01b031660009081526020819052604090205490565b61017661025e3660046113d1565b6001600160a01b031660009081526008602052604090205490565b6101c561081c565b610139610927565b61016261029736600461136b565b610936565b6101626102aa36600461136b565b6109cf565b6101c56102bd3660046113ec565b6109dc565b6009546101e9906001600160a01b031681565b6101766102e3366004611405565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461031d90611438565b80601f016020809104026020016040519081016040528092919081815260200182805461034990611438565b80156103965780601f1061036b57610100808354040283529160200191610396565b820191906000526020600020905b81548152906001019060200180831161037957829003601f168201915b5050505050905090565b60006103ad338484610c36565b5060015b92915050565b60006103c4848484610d5b565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561044e5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61045b8533858403610c36565b506001949350505050565b6001600160a01b0381166000908152602081905260408120548190600654604080516349ce222b60e11b8152815193945060009384936001600160a01b03169263939c445692600480820193918290030181865afa1580156104cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f09190611473565b91509150816000141561050857506000949350505050565b8082106105185750909392505050565b6001600160a01b03851660009081526007602052604081205490506000610593836040518060400160405280602081526020017f50726f67726573734c6f636b65723a207a65726f2070726f67726573734d617881525061058c87610586878b610e3090919063ffffffff16565b90610e43565b9190610e4f565b9050818111156105b2576105a78183610e89565b979650505050505050565b5060009695505050505050565b6005546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561060c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b19190611497565b33600061063c82610466565b9050808311156106b45760405162461bcd60e51b815260206004820152603760248201527f50726f67726573734c6f636b65723a205769746864726177616c20657863656560448201527f64732074686520617661696c61626c6520616d6f756e740000000000000000006064820152608401610445565b6001600160a01b0382166000908152600760205260409020546106d78185610e30565b6001600160a01b0384166000908152600760209081526040808320939093556008905220546107068186610e30565b6001600160a01b0385166000908152600860205260409020556107298486610e95565b60055460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018890529091169063a9059cbb906044016020604051808303816000875af115801561077c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a091906114b0565b505050505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103ad9185906107df9086906114e8565b610c36565b6001600160a01b038116600090815260208190526040812054600061080884610466565b90506108148282610e89565b949350505050565b33600061082882610466565b9050600061084b836001600160a01b031660009081526007602052604090205490565b90506108578183610e30565b6001600160a01b0384166000908152600760209081526040808320939093556008905220546108868184610e30565b6001600160a01b0385166000908152600860205260409020556108a98484610e95565b60055460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018690529091169063a9059cbb906044016020604051808303816000875af11580156108fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092091906114b0565b5050505050565b60606004805461031d90611438565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156109b85760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610445565b6109c53385858403610c36565b5060019392505050565b60006103ad338484610d5b565b6005546040516323b872dd60e01b81523360048201819052306024830181905260448301859052909290916001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610a3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5f91906114b0565b50610a6a8284610fdb565b600654604080516349ce222b60e11b8152815160009384936001600160a01b039091169263939c445692600480830193928290030181865afa158015610ab4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad89190611473565b600654604080516349ce222b60e11b815281519496509294506001600160a01b039091169263939c44569260048082019392918290030181865afa158015610b24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b489190611473565b9092509050811561092057808210610be05760405162461bcd60e51b815260206004820152604f60248201527f50726f67726573734c6f636b65723a2070726f6772657373206973203130302560448201527f2c20697420646f6573206e6f74206d616b6520616e792073656e736520746f2060648201526e6465706f73697420616e796d6f726560881b608482015260a401610445565b6000610bef86848460126110ba565b6001600160a01b038616600090815260076020526040902054909150610c159082610e30565b6001600160a01b038616600090815260076020526040902055505050505050565b6001600160a01b038316610c985760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610445565b6001600160a01b038216610cf95760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610445565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316600090815260208190526040902054610d7f848484611120565b8115610e2a576001600160a01b03841660009081526007602052604081205490506000610def836040518060400160405280601c81526020017f50726f67726573734c6f636b65723a207a65726f2062616c616e63650000000081525061058c8786610e4390919063ffffffff16565b9050610dfb8282610e89565b6001600160a01b038088166000908152600760205260408082209390935590871681522054610c159082610e30565b50505050565b6000610e3c82846114e8565b9392505050565b6000610e3c8284611500565b60008183610e705760405162461bcd60e51b815260040161044591906112fa565b50828481610e8057610e8061151f565b04949350505050565b6000610e3c8284611535565b6001600160a01b038216610ef55760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610445565b6001600160a01b03821660009081526020819052604090205481811015610f695760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610445565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610f98908490611535565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610d4e565b6001600160a01b0382166110315760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610445565b806002600082825461104391906114e8565b90915550506001600160a01b038216600090815260208190526040812080548392906110709084906114e8565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000806110d1846110cb8888610e43565b906112ee565b905060006110e084600a611630565b905060006110f2866110cb848a610e43565b905060006111008383610e89565b90506000611112826110cb8787610e43565b9a9950505050505050505050565b6001600160a01b0383166111845760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610445565b6001600160a01b0382166111e65760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610445565b6001600160a01b0383166000908152602081905260409020548181101561125e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610445565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906112959084906114e8565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516112e191815260200190565b60405180910390a3610e2a565b6000610e3c828461163f565b600060208083528351808285015260005b818110156113275785810183015185820160400152820161130b565b81811115611339576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461136657600080fd5b919050565b6000806040838503121561137e57600080fd5b6113878361134f565b946020939093013593505050565b6000806000606084860312156113aa57600080fd5b6113b38461134f565b92506113c16020850161134f565b9150604084013590509250925092565b6000602082840312156113e357600080fd5b610e3c8261134f565b6000602082840312156113fe57600080fd5b5035919050565b6000806040838503121561141857600080fd5b6114218361134f565b915061142f6020840161134f565b90509250929050565b600181811c9082168061144c57607f821691505b6020821081141561146d57634e487b7160e01b600052602260045260246000fd5b50919050565b6000806040838503121561148657600080fd5b505080516020909101519092909150565b6000602082840312156114a957600080fd5b5051919050565b6000602082840312156114c257600080fd5b81518015158114610e3c57600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156114fb576114fb6114d2565b500190565b600081600019048311821515161561151a5761151a6114d2565b500290565b634e487b7160e01b600052601260045260246000fd5b600082821015611547576115476114d2565b500390565b600181815b8085111561158757816000190482111561156d5761156d6114d2565b8085161561157a57918102915b93841c9390800290611551565b509250929050565b60008261159e575060016103b1565b816115ab575060006103b1565b81600181146115c157600281146115cb576115e7565b60019150506103b1565b60ff8411156115dc576115dc6114d2565b50506001821b6103b1565b5060208310610133831016604e8410600b841016171561160a575081810a6103b1565b611614838361154c565b8060001904821115611628576116286114d2565b029392505050565b6000610e3c60ff84168361158f565b60008261165c57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220f2d8de076ac6425d79cd8add09ecf132861c731fd1bae6a1259812853c82cae164736f6c634300080b0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { UtilsTest } from \"../UtilsTest\";\n\nexport class UtilsTest__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(overrides?: Overrides): Promise<UtilsTest> {\n    return super.deploy(overrides || {}) as Promise<UtilsTest>;\n  }\n  getDeployTransaction(overrides?: Overrides): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): UtilsTest {\n    return super.attach(address) as UtilsTest;\n  }\n  connect(signer: Signer): UtilsTest__factory {\n    return super.connect(signer) as UtilsTest__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): UtilsTest {\n    return new Contract(address, _abi, signerOrProvider) as UtilsTest;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"n\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"findHsb\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"n\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"findLsb\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b5061031e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80636413c2781461003b578063eb19394a14610065575b600080fd5b61004e610049366004610181565b610078565b60405161ffff909116815260200160405180910390f35b61004e610073366004610181565b610089565b600061008382610094565b92915050565b600061008382610115565b6000816100a357506000919050565b60016101005b8061ffff168261ffff16101561010e57600060016100c783856101b0565b61ffff16901c9050600060016100de8360026102ba565b6100e891906102d1565b9050858116610103576100fc8260016101b0565b9350610107565b8192505b50506100a9565b5092915050565b6000806101005b8061ffff168261ffff16101561010e576000600161013a83856101b0565b61ffff16901c9050600060016101518360026102ba565b61015b91906102d1565b905080861161016c5781925061017a565b6101778260016101b0565b93505b505061011c565b60006020828403121561019357600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600061ffff8083168185168083038211156101cd576101cd61019a565b01949350505050565b600181815b808511156102115781600019048211156101f7576101f761019a565b8085161561020457918102915b93841c93908002906101db565b509250929050565b60008261022857506001610083565b8161023557506000610083565b816001811461024b576002811461025557610271565b6001915050610083565b60ff8411156102665761026661019a565b50506001821b610083565b5060208310610133831016604e8410600b8410161715610294575081810a610083565b61029e83836101d6565b80600019048211156102b2576102b261019a565b029392505050565b60006102ca61ffff841683610219565b9392505050565b6000828210156102e3576102e361019a565b50039056fea2646970667358221220ee7c96362309201c41d6d57af274e98bfb221ce9c91426339eac2f5ef7bb54cd64736f6c634300080b0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { ERC20 } from \"../ERC20\";\n\nexport class ERC20__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    name_: string,\n    symbol_: string,\n    overrides?: Overrides\n  ): Promise<ERC20> {\n    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC20>;\n  }\n  getDeployTransaction(\n    name_: string,\n    symbol_: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(name_, symbol_, overrides || {});\n  }\n  attach(address: string): ERC20 {\n    return super.attach(address) as ERC20;\n  }\n  connect(signer: Signer): ERC20__factory {\n    return super.connect(signer) as ERC20__factory;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {\n    return new Contract(address, _abi, signerOrProvider) as ERC20;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"name_\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"symbol_\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b5060405162000b5638038062000b568339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b6108c480620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610701565b60405180910390f35b6100df6100da366004610772565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461079c565b61026e565b604051601281526020016100c3565b6100df610131366004610772565b61031d565b6100f36101443660046107d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df610175366004610772565b610368565b6100df610188366004610772565b610401565b6100f361019b3660046107fa565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061082d565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061082d565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610354908690610868565b61040e565b6060600480546101d59061082d565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a7908490610868565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072e57858101830151858201604001528201610712565b81811115610740576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461076d57600080fd5b919050565b6000806040838503121561078557600080fd5b61078e83610756565b946020939093013593505050565b6000806000606084860312156107b157600080fd5b6107ba84610756565b92506107c860208501610756565b9150604084013590509250925092565b6000602082840312156107ea57600080fd5b6107f382610756565b9392505050565b6000806040838503121561080d57600080fd5b61081683610756565b915061082460208401610756565b90509250929050565b600181811c9082168061084157607f821691505b6020821081141561086257634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561088957634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220889f9738f938576d163ae004c2b4ae05a7aaa0695bc2dda1358085592049f21564736f6c634300080b0033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { providers, Signer, ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport Web3Modal, { IProviderOptions } from \"web3modal\";\nimport LuminaAdminDeployment from \"./deployments/mumbai/LuminaAdmin.json\";\nimport { LuminaAdmin } from \"./typechain/LuminaAdmin\";\nimport { LuminaAdmin__factory } from \"./typechain/factories/LuminaAdmin__factory\";\nimport LuminaCampaignLaunchDeployment from \"./deployments/mumbai/LuminaCampaignLaunch.json\";\nimport { LuminaCampaignLaunch } from \"./typechain/LuminaCampaignLaunch\";\nimport { LuminaCampaignLaunch__factory } from \"./typechain/factories/LuminaCampaignLaunch__factory\";\nimport LuminaMarketingDeployment from \"./deployments/mumbai/LuminaMarketing.json\";\nimport { LuminaMarketing } from \"./typechain/LuminaMarketing\";\nimport { LuminaMarketing__factory } from \"./typechain/factories/LuminaMarketing__factory\";\nimport LuminaRecordsDeployment from \"./deployments/mumbai/LuminaRecords.json\";\nimport { LuminaRecords } from \"./typechain/LuminaRecords\";\nimport { LuminaRecords__factory } from \"./typechain/factories/LuminaRecords__factory\";\nimport LuminaTokenDeployment from \"./deployments/mumbai/LuminaToken.json\";\nimport { LuminaToken } from \"./typechain/LuminaToken\";\nimport { LuminaToken__factory } from \"./typechain/factories/LuminaToken__factory\";\nimport LuminaTrusteeDeployment from \"./deployments/mumbai/LuminaTrustee.json\";\nimport { LuminaTrustee } from \"./typechain/LuminaTrustee\";\nimport { LuminaTrustee__factory } from \"./typechain/factories/LuminaTrustee__factory\";\nimport ProgressContractLockerDeployment from \"./deployments/mumbai/ProgressContractLocker.json\";\nimport { ProgressContractLocker } from \"./typechain/ProgressContractLocker\";\nimport { ProgressContractLocker__factory } from \"./typechain/factories/ProgressContractLocker__factory\";\nimport { UtilsTest } from \"./typechain/UtilsTest\";\nimport { UtilsTest__factory } from \"./typechain/factories/UtilsTest__factory\";\nimport { ERC20 } from \"./typechain/ERC20\";\nimport { ERC20__factory } from \"./typechain/factories/ERC20__factory\";\n\nconst emptyContract = {\n    instance: undefined,\n    factory: undefined\n};\nconst defaultProvider: providers.Provider | undefined = undefined;\nexport const ProviderContext = React.createContext<[providers.Provider | undefined, React.Dispatch<React.SetStateAction<providers.Provider | undefined>>]>([defaultProvider, () => { }]);\nconst defaultCurrentAddress: string = \"\";\nexport const CurrentAddressContext = React.createContext<[string, React.Dispatch<React.SetStateAction<string>>]>([defaultCurrentAddress, () => { }]);\nconst defaultSigner: Signer | undefined = undefined;\nexport const SignerContext = React.createContext<[Signer | undefined, React.Dispatch<React.SetStateAction<Signer | undefined>>]>([defaultSigner, () => { }]);\nconst defaultSymfoniContext: SymfoniContextInterface = {\n    currentHardhatProvider: \"\",\n    init: () => { throw Error(\"Symfoni context not initialized\") },\n    loading: false,\n    messages: [],\n    providers: []\n};\nexport const SymfoniContext = React.createContext<SymfoniContextInterface>(defaultSymfoniContext);\nexport const LuminaAdminContext = React.createContext<SymfoniLuminaAdmin>(emptyContract);\nexport const LuminaCampaignLaunchContext = React.createContext<SymfoniLuminaCampaignLaunch>(emptyContract);\nexport const LuminaMarketingContext = React.createContext<SymfoniLuminaMarketing>(emptyContract);\nexport const LuminaRecordsContext = React.createContext<SymfoniLuminaRecords>(emptyContract);\nexport const LuminaTokenContext = React.createContext<SymfoniLuminaToken>(emptyContract);\nexport const LuminaTrusteeContext = React.createContext<SymfoniLuminaTrustee>(emptyContract);\nexport const ProgressContractLockerContext = React.createContext<SymfoniProgressContractLocker>(emptyContract);\nexport const UtilsTestContext = React.createContext<SymfoniUtilsTest>(emptyContract);\nexport const ERC20Context = React.createContext<SymfoniERC20>(emptyContract);\n\nexport interface SymfoniContextInterface {\n    init: (provider?: string) => void;\n    loading: boolean;\n    messages: string[];\n    currentHardhatProvider: string;\n    providers: string[];\n}\n\nexport interface SymfoniProps {\n    autoInit?: boolean;\n    showLoading?: boolean;\n    loadingComponent?: React.ReactNode;\n}\n\nexport interface SymfoniLuminaAdmin {\n    instance?: LuminaAdmin;\n    factory?: LuminaAdmin__factory;\n}\n\nexport interface SymfoniLuminaCampaignLaunch {\n    instance?: LuminaCampaignLaunch;\n    factory?: LuminaCampaignLaunch__factory;\n}\n\nexport interface SymfoniLuminaMarketing {\n    instance?: LuminaMarketing;\n    factory?: LuminaMarketing__factory;\n}\n\nexport interface SymfoniLuminaRecords {\n    instance?: LuminaRecords;\n    factory?: LuminaRecords__factory;\n}\n\nexport interface SymfoniLuminaToken {\n    instance?: LuminaToken;\n    factory?: LuminaToken__factory;\n}\n\nexport interface SymfoniLuminaTrustee {\n    instance?: LuminaTrustee;\n    factory?: LuminaTrustee__factory;\n}\n\nexport interface SymfoniProgressContractLocker {\n    instance?: ProgressContractLocker;\n    factory?: ProgressContractLocker__factory;\n}\n\nexport interface SymfoniUtilsTest {\n    instance?: UtilsTest;\n    factory?: UtilsTest__factory;\n}\n\nexport interface SymfoniERC20 {\n    instance?: ERC20;\n    factory?: ERC20__factory;\n}\n\nexport const Symfoni: React.FC<SymfoniProps> = ({\n    showLoading = true,\n    autoInit = true,\n    ...props\n}) => {\n    const [initializeCounter, setInitializeCounter] = useState(0);\n    const [currentHardhatProvider, setCurrentHardhatProvider] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [messages, setMessages] = useState<string[]>([]);\n    const [signer, setSigner] = useState<Signer | undefined>(defaultSigner);\n    const [provider, setProvider] = useState<providers.Provider | undefined>(defaultProvider);\n    const [currentAddress, setCurrentAddress] = useState<string>(defaultCurrentAddress);\n    const [fallbackProvider] = useState<string | undefined>(undefined);\n    const [providerPriority, setProviderPriority] = useState<string[]>([\"web3modal\", \"hardhat\"]);\n    const [LuminaAdmin, setLuminaAdmin] = useState<SymfoniLuminaAdmin>(emptyContract);\n    const [LuminaCampaignLaunch, setLuminaCampaignLaunch] = useState<SymfoniLuminaCampaignLaunch>(emptyContract);\n    const [LuminaMarketing, setLuminaMarketing] = useState<SymfoniLuminaMarketing>(emptyContract);\n    const [LuminaRecords, setLuminaRecords] = useState<SymfoniLuminaRecords>(emptyContract);\n    const [LuminaToken, setLuminaToken] = useState<SymfoniLuminaToken>(emptyContract);\n    const [LuminaTrustee, setLuminaTrustee] = useState<SymfoniLuminaTrustee>(emptyContract);\n    const [ProgressContractLocker, setProgressContractLocker] = useState<SymfoniProgressContractLocker>(emptyContract);\n    const [UtilsTest, setUtilsTest] = useState<SymfoniUtilsTest>(emptyContract);\n    const [ERC20, setERC20] = useState<SymfoniERC20>(emptyContract);\n    useEffect(() => {\n        if (messages.length > 0)\n            console.debug(messages.pop())\n    }, [messages])\n\n    const getProvider = async (): Promise<{ provider: providers.Provider, hardhatProviderName: string } | undefined> => {\n        let hardhatProviderName = \"Not set\";\n        let _providerPriority = [...providerPriority];\n        // Fallback provider\n        if (fallbackProvider && autoInit && initializeCounter === 0) {\n            if (localStorage.getItem(\"WEB3_CONNECT_CACHED_PROVIDER\") === null) {\n                _providerPriority = _providerPriority.sort((a, b) => {\n                    return a === fallbackProvider ? -1 : b === fallbackProvider ? 1 : 0;\n                })\n            }\n        }\n        const provider = await _providerPriority.reduce(async (maybeProvider: Promise<providers.Provider | undefined>, providerIdentification) => {\n            let foundProvider = await maybeProvider\n            if (foundProvider) {\n                return Promise.resolve(foundProvider)\n            }\n            else {\n                switch (providerIdentification.toLowerCase()) {\n                    case \"web3modal\":\n                        try {\n                            const provider = await getWeb3ModalProvider()\n                            const web3provider = new ethers.providers.Web3Provider(provider);\n                            hardhatProviderName = \"web3modal\";\n                            return Promise.resolve(web3provider)\n                        } catch (error) {\n                            return Promise.resolve(undefined)\n                        }\n                    case \"hardhat\":\n                        try {\n                            const provider = new ethers.providers.JsonRpcProvider({\n                                url: \"http://127.0.0.1:8545\",\n                            });\n                            hardhatProviderName = \"hardhat\";\n                            return Promise.resolve(provider)\n                        } catch (error) {\n                            return Promise.resolve(undefined)\n                        } default:\n                        return Promise.resolve(undefined)\n                }\n            }\n        }, Promise.resolve(undefined)) // end reduce\n        return provider ? { provider, hardhatProviderName } : undefined\n    };\n    const getSigner = async (_provider: providers.Provider, hardhatProviderName: string): Promise<Signer | undefined> => {\n        switch (hardhatProviderName) {\n            case \"web3modal\":\n                const web3provider = _provider as ethers.providers.Web3Provider\n                return await web3provider.getSigner()\n            case \"hardhat\":\n                return ethers.Wallet.fromMnemonic(\"rapid marriage slogan catalog swift off kite differ pluck million argue cost\").connect(_provider)\n            default:\n                return undefined\n        }\n    };\n    const getWeb3ModalProvider = async (): Promise<any> => {\n        const providerOptions: IProviderOptions = {\n\n        };\n        const web3Modal = new Web3Modal({\n            // network: \"mainnet\",\n            cacheProvider: false,\n            providerOptions, // required\n        });\n        return await web3Modal.connect();\n    };\n\n    useEffect(() => {\n        let subscribed = true\n        const doAsync = async () => {\n            const finish = (text: string) => {\n                setLoading(false)\n                setMessages(old => [...old, text])\n            }\n            const finishWithContracts = (text: string) => {\n                setLuminaAdmin(getLuminaAdmin(_provider, _signer))\n                setLuminaCampaignLaunch(getLuminaCampaignLaunch(_provider, _signer))\n                setLuminaMarketing(getLuminaMarketing(_provider, _signer))\n                setLuminaRecords(getLuminaRecords(_provider, _signer))\n                setLuminaToken(getLuminaToken(_provider, _signer))\n                setLuminaTrustee(getLuminaTrustee(_provider, _signer))\n                setProgressContractLocker(getProgressContractLocker(_provider, _signer))\n                setUtilsTest(getUtilsTest(_provider, _signer))\n                setERC20(getERC20(_provider, _signer))\n                finish(text)\n            }\n            if (!autoInit && initializeCounter === 0) return finish(\"Auto init turned off.\")\n            setLoading(true)\n            setMessages(old => [...old, \"Initiating Symfoni React\"])\n            const providerObject = await getProvider() // getProvider can actually return undefined, see issue https://github.com/microsoft/TypeScript/issues/11094\n\n            if (!subscribed || !providerObject) return finish(\"No provider or signer.\")\n            const _provider = providerObject.provider\n            setProvider(_provider)\n            setMessages(old => [...old, \"Useing \" + providerObject.hardhatProviderName])\n            setCurrentHardhatProvider(providerObject.hardhatProviderName)\n            const _signer = await getSigner(_provider, providerObject.hardhatProviderName);\n\n            if (!subscribed || !_signer) return finishWithContracts(\"Provider, without signer.\")\n            setSigner(_signer)\n            setMessages(old => [...old, \"Useing signer\"])\n            const address = await _signer.getAddress()\n\n            if (!subscribed || !address) return finishWithContracts(\"Provider and signer, without address.\")\n            setCurrentAddress(address)\n\n            return finishWithContracts(\"Completed Symfoni context initialization.\")\n        };\n        doAsync();\n        return () => { subscribed = false }\n    }, [initializeCounter])\n\n    const getLuminaAdmin = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = LuminaAdminDeployment.receipt.contractAddress\n        const instance = _signer ? LuminaAdmin__factory.connect(contractAddress, _signer) : LuminaAdmin__factory.connect(contractAddress, _provider)\n        const contract: SymfoniLuminaAdmin = {\n            instance: instance,\n            factory: _signer ? new LuminaAdmin__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getLuminaCampaignLaunch = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = LuminaCampaignLaunchDeployment.receipt.contractAddress\n        const instance = _signer ? LuminaCampaignLaunch__factory.connect(contractAddress, _signer) : LuminaCampaignLaunch__factory.connect(contractAddress, _provider)\n        const contract: SymfoniLuminaCampaignLaunch = {\n            instance: instance,\n            factory: _signer ? new LuminaCampaignLaunch__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getLuminaMarketing = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = LuminaMarketingDeployment.receipt.contractAddress\n        const instance = _signer ? LuminaMarketing__factory.connect(contractAddress, _signer) : LuminaMarketing__factory.connect(contractAddress, _provider)\n        const contract: SymfoniLuminaMarketing = {\n            instance: instance,\n            factory: _signer ? new LuminaMarketing__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getLuminaRecords = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = LuminaRecordsDeployment.receipt.contractAddress\n        const instance = _signer ? LuminaRecords__factory.connect(contractAddress, _signer) : LuminaRecords__factory.connect(contractAddress, _provider)\n        const contract: SymfoniLuminaRecords = {\n            instance: instance,\n            factory: _signer ? new LuminaRecords__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getLuminaToken = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = LuminaTokenDeployment.receipt.contractAddress\n        const instance = _signer ? LuminaToken__factory.connect(contractAddress, _signer) : LuminaToken__factory.connect(contractAddress, _provider)\n        const contract: SymfoniLuminaToken = {\n            instance: instance,\n            factory: _signer ? new LuminaToken__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getLuminaTrustee = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = LuminaTrusteeDeployment.receipt.contractAddress\n        const instance = _signer ? LuminaTrustee__factory.connect(contractAddress, _signer) : LuminaTrustee__factory.connect(contractAddress, _provider)\n        const contract: SymfoniLuminaTrustee = {\n            instance: instance,\n            factory: _signer ? new LuminaTrustee__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getProgressContractLocker = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = ProgressContractLockerDeployment.receipt.contractAddress\n        const instance = _signer ? ProgressContractLocker__factory.connect(contractAddress, _signer) : ProgressContractLocker__factory.connect(contractAddress, _provider)\n        const contract: SymfoniProgressContractLocker = {\n            instance: instance,\n            factory: _signer ? new ProgressContractLocker__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getUtilsTest = (_provider: providers.Provider, _signer?: Signer) => {\n        let instance = _signer ? UtilsTest__factory.connect(ethers.constants.AddressZero, _signer) : UtilsTest__factory.connect(ethers.constants.AddressZero, _provider)\n        const contract: SymfoniUtilsTest = {\n            instance: instance,\n            factory: _signer ? new UtilsTest__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getERC20 = (_provider: providers.Provider, _signer?: Signer) => {\n        let instance = _signer ? ERC20__factory.connect(ethers.constants.AddressZero, _signer) : ERC20__factory.connect(ethers.constants.AddressZero, _provider)\n        const contract: SymfoniERC20 = {\n            instance: instance,\n            factory: _signer ? new ERC20__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n\n    const handleInitProvider = (provider?: string) => {\n        if (provider) {\n            setProviderPriority(old => old.sort((a, b) => {\n                return a === provider ? -1 : b === provider ? 1 : 0;\n            }))\n        }\n        setInitializeCounter(initializeCounter + 1)\n    }\n    return (\n        <SymfoniContext.Provider value={{ init: (provider) => handleInitProvider(provider), providers: providerPriority, currentHardhatProvider, loading, messages }}>\n            <ProviderContext.Provider value={[provider, setProvider]}>\n                <SignerContext.Provider value={[signer, setSigner]}>\n                    <CurrentAddressContext.Provider value={[currentAddress, setCurrentAddress]}>\n                        <LuminaAdminContext.Provider value={LuminaAdmin}>\n                            <LuminaCampaignLaunchContext.Provider value={LuminaCampaignLaunch}>\n                                <LuminaMarketingContext.Provider value={LuminaMarketing}>\n                                    <LuminaRecordsContext.Provider value={LuminaRecords}>\n                                        <LuminaTokenContext.Provider value={LuminaToken}>\n                                            <LuminaTrusteeContext.Provider value={LuminaTrustee}>\n                                                <ProgressContractLockerContext.Provider value={ProgressContractLocker}>\n                                                    <UtilsTestContext.Provider value={UtilsTest}>\n                                                        <ERC20Context.Provider value={ERC20}>\n                                                            {showLoading && loading ?\n                                                                props.loadingComponent\n                                                                    ? props.loadingComponent\n                                                                    : <div>\n                                                                        {messages.map((msg, i) => (\n                                                                            <p key={i}>{msg}</p>\n                                                                        ))}\n                                                                    </div>\n                                                                : props.children\n                                                            }\n                                                        </ERC20Context.Provider >\n                                                    </UtilsTestContext.Provider >\n                                                </ProgressContractLockerContext.Provider >\n                                            </LuminaTrusteeContext.Provider >\n                                        </LuminaTokenContext.Provider >\n                                    </LuminaRecordsContext.Provider >\n                                </LuminaMarketingContext.Provider >\n                            </LuminaCampaignLaunchContext.Provider >\n                        </LuminaAdminContext.Provider >\n                    </CurrentAddressContext.Provider>\n                </SignerContext.Provider>\n            </ProviderContext.Provider>\n        </SymfoniContext.Provider>\n    )\n\n};\n","import { BigNumber } from \"@ethersproject/bignumber\"\nimport { keccak256 } from \"@ethersproject/solidity\"\nimport { random } from \"sjcl\"\n\n\nexport default function solve(\n    blockNumber: BigNumber,\n    challengeHash: string,\n    address: string,\n    solvedDifficulty: number,\n    status: (trials:number, timeMs: number, solution?: BigNumber, solvedDifficulty?: number)=>void,\n) {\n    const one = BigNumber.from(1)\n\n    // Generate some good random number here\n    if(!random.isReady()) {\n        throw new Error(\"RNG is not ready\")\n    }\n    const rnd = random.randomWords(8)\n    let rnds = \"0x\"\n    for(let i = 0; i < 8; i++) {\n        const r = rnd[i] >>> 0\n        rnds += r.toString(16)\n    }\n    let nonce = BigNumber.from(rnds)\n    let difficultyN = solvedDifficulty + 1\n    // The solution must be <= target to pass\n    let targetN = one.shl(256-difficultyN).sub(one)\n\n    let stop = false\n    let cnt = 0\n    let timeMs = 0;\n\n    function batch() {\n        if(stop) {\n            return\n        }\n        const startTimeMs = Date.now()\n        for(let i = 0; i < 1000; i++) {\n            cnt++\n            const digest = keccak256([ \"uint256\", \"uint256\", \"uint256\", \"uint256\" ], [ nonce, BigNumber.from(challengeHash), BigNumber.from(address), BigNumber.from(address) ])\n            const digestNum = BigNumber.from(digest)\n            if(digestNum.lte(targetN)) {\n                solvedDifficulty = difficultyN\n                while(digestNum.lte(targetN)) {\n                    solvedDifficulty = difficultyN\n                    difficultyN++;\n                    targetN = one.shl(256-difficultyN).sub(one)\n                }\n                status(cnt, timeMs, nonce, solvedDifficulty)\n                if(stop) {\n                    // Found the required solution!\n                    return\n                }\n            }\n            nonce = nonce.add(one)\n            if((cnt % 1000) === 0) {\n                status(cnt, timeMs)\n            }\n        }\n        if(!stop) {\n            setTimeout(batch, 0)\n        }\n        const endTimeMs = Date.now()\n        timeMs += endTimeMs - startTimeMs\n    }\n\n    if(!stop) {\n        setTimeout(batch, 0)\n    }\n\n    return () => stop = true\n}\n","// import React from 'react'\nimport { BigNumber } from \"@ethersproject/bignumber\"\n\nexport function formatBalance(balance: BigNumber, decimals: number) {\n    const b1 = balance.div(BigNumber.from(10).pow(decimals))\n    const b2 = balance.div(BigNumber.from(10).pow(decimals-3)).mod(1000)\n    const r = b1.toNumber().toLocaleString()+(b2.isZero() ? \"\" : \".\"+b2.toString().padStart(3, \"0\"))\n    return r\n}\n\nexport const ZERO = BigNumber.from(0)\nexport const ONE = BigNumber.from(1)\nexport const TWO = BigNumber.from(2)\nexport const TEN = BigNumber.from(10)\n\n// finds the highest significant bit of the argument\n// the result is encoded as if bits were numbered from 1\n// e.g. findHsb of 0 returns 0\n//      findHsb of 1 returns 1\n//      findHsb of 2 returns 2\n//      findHsb of 4 returns 3\n//      etc.\nexport function findHsb(n: BigNumber): number {\n    let from = 0;\n    let to = 256\n\n    while(from < to) {\n        const middle = (from + to) >> 1\n        const mask = ONE.shl(middle).sub(ONE)\n\n        if(n.lte(mask)) {\n            to = middle\n        } else {\n            from = middle+1\n        }\n    }\n\n    return from\n}\n\n// finds the lowest significant bit of the argument\n// the result is encoded as if bits were numbered from 1\n// e.g. findLsb of 0 returns 0\n//      findLsb of 1 returns 1\n//      findLsb of 2 returns 2\n//      findLsb of 4 returns 3\n//      etc.\nexport function findLsb(n: BigNumber): number {\n    if(n.isZero()) {\n        return 0\n    }\n    let from = 1\n    let to = 256\n\n    while(from < to) {\n        const middle = (from + to) >> 1\n        const mask = ONE.shl(middle).sub(ONE)\n\n        if(n.and(mask).isZero()) {\n            from = middle+1\n        } else {\n            to = middle\n        }\n    }\n\n    return from;\n}\n","import { BigNumber } from \"@ethersproject/bignumber\"\nimport { findLsb, ONE, TEN } from \"../utils/bigNumber\"\n\nexport function getRewardUnits(challengeHash: string): [number, number] {\n    let n: [number, number]\n    if(challengeHash.startsWith(\"0x22222\")) {\n        n = [500, 2000]\n    } else if(challengeHash.startsWith(\"0x2222\")) {\n        n = [200, 500]\n    } else if(challengeHash.startsWith(\"0x222\")) {\n        n = [100, 100]\n    } else if(challengeHash.startsWith(\"0x22\")) {\n        n = [50, 20]\n    } else if(challengeHash.startsWith(\"0x2\")) {\n        n = [20, 5]\n    } else {\n        n = [10, 1]\n    }\n    return n\n}\n\nexport function getWalletDifficultyDiscount(challengeHash: string, address: string, balance: BigNumber, decimals: number): number {\n    const h1 = BigNumber.from(challengeHash)\n    const h2 = BigNumber.from(address)\n    let o = h1.xor(h2)\n    let n = findLsb(o)\n    if(n === 0) {\n        n = 256\n    }\n    n--\n\n    const b1 = balance.div(TEN.pow(decimals))\n    if(b1.gte(ONE)) {\n        if(n >= 20) {\n            n = 30\n        } else if(n >= 10) {\n            n = 20 + (n - 10)\n        } else {\n            n = 2 * n\n        }\n    } else {\n        if(n > 10) {\n            n = 10\n        }\n    }\n\n    return n\n}\n\nexport function getBalanceDifficultyDiscount(balance: BigNumber, decimals: number): number {\n    const b1 = balance.div(TEN.pow(decimals))\n    const b2 = balance.mod(TEN.pow(decimals)).div(TEN.pow(decimals-3))\n    let discount\n    if(b1.gte(ONE)) {\n        if(b1.gte(BigNumber.from(1000))) {\n            discount = 2 * 10 + 10\n        } else if(b1.gte(BigNumber.from(500))) {\n            discount = 2 * 9 + 10\n        } else if(b1.gte(BigNumber.from(200))) {\n            discount = 2 * 8 + 10\n        } else if(b1.gte(BigNumber.from(100))) {\n            discount = 2 * 7 + 10\n        } else if(b1.gte(BigNumber.from(50))) {\n            discount = 2 * 6 + 10\n        } else if(b1.gte(BigNumber.from(20))) {\n            discount = 2 * 5 + 10\n        } else if(b1.gte(TEN)) {\n            discount = 2 * 4 + 10\n        } else if(b1.gte(BigNumber.from(5))) {\n            discount = 2 * 3 + 10\n        } else if(b1.gte(BigNumber.from(3))) {\n            discount = 2 * 2 + 10\n        } else if(b1.gte(BigNumber.from(2))) {\n            discount = 2 * 1 + 10\n        } else {\n            discount = 2 * 0 + 10\n        }\n    } else {\n        if(b2.gte(BigNumber.from(500))) {\n            discount = 9\n        } else if(b2.gte(BigNumber.from(200))) {\n            discount = 8\n        } else if(b2.gte(BigNumber.from(100))) {\n            discount = 7\n        } else if(b2.gte(BigNumber.from(50))) {\n            discount = 6\n        } else if(b2.gte(BigNumber.from(20))) {\n            discount = 5\n        } else if(b2.gte(TEN)) {\n            discount = 4\n        } else if(b2.gte(BigNumber.from(5))) {\n            discount = 3\n        } else if(b2.gte(BigNumber.from(2))) {\n            discount = 2\n        } else if(b2.gte(ONE)) {\n            discount = 1\n        } else {\n            discount = 0\n        }\n    }\n    return discount\n}\n\nexport function getDifficultyLabel(difficulty: number): string {\n    let s = \"\"\n\n    if(difficulty <= 20) {\n        s = \"very easy\"\n    } else if(difficulty <= 30) {\n        s = \"easy\"\n    } else if(difficulty <= 40) {\n        s = \"medium\"\n    } else if(difficulty <= 50) {\n        s = \"hard\"\n    } else if(difficulty <= 60) {\n        s = \"very hard\"\n    } else if(difficulty <= 70) {\n        s = \"extremely hard\"\n    } else if(difficulty <= 80) {\n        s = \"almost impossible\"\n    } else if(difficulty <= 90) {\n        s = \"impossible\"\n    } else {\n        s = \"a miracle\"\n    } \n\n    return s;\n}\n\nexport function getReasonLabel(reason: number) {\n    let s = \"\"\n\n    if(typeof(reason) === \"string\") {\n        return reason\n    }\n    switch(reason) {\n        case 0:\n            s = \"Request satisfies all criteria to claim the tokens (at this moment)\"\n            break\n        case 1:\n            s = \"blockNumber does not exist or has no live challenge assigned right now\"\n            break\n        case 2:\n            s = \"Invalid or weak solution\"\n            break\n        case 3:\n            s = \"This challenge has already been claimed by this address\"\n            break\n        case 4:\n            s = \"All available rewards have been claimed already\"\n            break\n        case 5:\n            s = \"Insufficient balance on recipient's address, external miners can only make claims on addresses with at least 0.001 LUMI\"\n            break\n        case 100:\n            s = \"Invalid claim string\"\n            break\n        case 101:\n            s = \"The contract is paused\"\n            break\n        default:\n            s = \"Unknown Reason #\" + reason\n            break\n    }\n\n    return s\n}\n","//\n// Parameters\n//\n\n// Token Symbol\nexport const TOKEN_SYMBOL = \"LUMI\"\n\n// Limiting number of challenges displayed in a table\nexport const CHALLENGES_LIMIT = 25;\n\n// The lucky number determines the premium challenges\nexport const LUCKY_NUMBER = 2;\n\nexport const CHALLENGE_NULL = 255;\nexport const MAX_CHALLENGE_CNT = 100;\nexport const MIN_CHALLENGE_DIFFICULTY = (demo: boolean) => demo ? 10 : 20;\nexport const MAX_CHALLENGE_DIFFICULTY = (demo: boolean) => demo ? 208 : 218;\nexport const CHALLENGE_DIFFICULTY_STEP = 2;\n\nexport const TOKEN_DECIMALS = 18;\n\nexport const REWARDS_CNT_LIMIT = (demo: boolean) => demo ? 2 : 500;\n","import React from 'react'\n\nimport css from './Category.module.css'\n\nconst Cat2Color = (cat: string) => {\n  let color\n  switch(cat) {\n    case \"very easy\":\n        color = \"white\" // white\n        break\n    case \"easy\":\n      color = \"#ffff9c\" // yellow\n      break\n    case \"medium\":\n      color = \"#ffcf9c\" // orange\n      break\n    case \"hard\":\n      color = \"pink\" // \"#ff1010\"\n      break\n      case \"very hard\":\n        color = \"#ff9c9c\" // red\n        break\n      case \"extremely hard\":\n        color = \"#E1BEE7\" // purple\n        break\n    default:\n      color = \"#D1C4E9\" // deep purple\n      break\n  }\n  return color\n}\n\nconst Category = (props: any) => (\n  <span title={props.category} style={{...props.style, backgroundColor: Cat2Color(props.cat)}} className={css.cat}>\n    &nbsp;\n    {props.children}\n    &nbsp;\n  </span>\n)\n\nexport default Category\n","import React, { useState, useEffect } from 'react'\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport solve from \"./Solve\"\nimport { ZERO } from \"../utils/bigNumber\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport { getRewardUnits, getWalletDifficultyDiscount, getBalanceDifficultyDiscount, getDifficultyLabel } from \"./Rules\"\nimport { MIN_CHALLENGE_DIFFICULTY, MAX_CHALLENGE_DIFFICULTY, CHALLENGE_DIFFICULTY_STEP, TOKEN_DECIMALS, REWARDS_CNT_LIMIT } from \"./Parameters\"\n\nimport Category from \"./Category\"\n\nexport type RegisteredBalancesType = {balances: BigNumber[], blockNumbers: BigNumber[]}\nexport type ChallengesType = {totalCnt: number, indexes: number[], blockNumbers: BigNumber[], rewardUnits: number[], challengeHashes: string[], nexts: number[], claimsCnt: number[], claimed: boolean[]}\nexport type ChallengesMapType = {\n    blockNumberHex: string,\n    challengeHash: string,\n    generalDifficulty: number,\n    addressDiscount: number,\n    balance: BigNumber,\n    balanceDiscount: number,\n    adjustedDifficulty: number,\n    claimsCnt: number,\n    claimed: boolean,\n}\nexport type RunStatusType = {\n    group: string;\n    blockNumberHex: string;\n    challengeHash: string;\n    trials: number,\n    targetDifficulty: number,\n    solutionTrials: number,\n    solution?: BigNumber,\n    solvedDifficulty: number,\n    solved: boolean,\n    timeMs: number,\n    stopFn?: () => void,\n}\nexport type VerifyClaimType = { rewardUnits: number, reason: number, premium: boolean, rewardsCnt: number }\n\nexport interface ChallengesProps {\n    challenges: ChallengesType;\n    group: string;\n    address: string;\n    registeredBalances: RegisteredBalancesType;\n    demo: boolean;\n    verifyClaim: (blockNumber: BigNumber, miner: string, recipient: string, solution: BigNumber) => Promise<VerifyClaimType>,\n    claimReward: (blockNumber: BigNumber, miner: string, recipient: string, solution: BigNumber) => void,\n}\n\nfunction stopAll(runStatus: {[key: string]: RunStatusType}) {\n    Object.keys(runStatus).forEach(bnStr => {\n        const rs = runStatus[bnStr]\n\n        if(rs.stopFn !== undefined) {\n            rs.stopFn()\n            rs.stopFn = undefined\n        }\n    })\n}\n\nexport const challengesRunStatus: {[address: string]: {[key: string]: RunStatusType}} = {}\nexport const Challenges: React.FC<ChallengesProps> = ({challenges, group, address, registeredBalances, demo, verifyClaim, claimReward}) => {\n    let runStatus = challengesRunStatus[address]\n    if(!runStatus) {\n        runStatus = {}\n        challengesRunStatus[address] = runStatus\n    }\n    const challengesMap = toChallengesMap(challenges, registeredBalances)\n\n    const [runStatusSnap, setRunStatusSnap] = useState({...runStatus})\n    const [currentAddress, setCurrentAddress] = useState(\"\")\n    const initChallenges: ChallengesType = {totalCnt: 0, indexes: [], blockNumbers: [], rewardUnits: [], challengeHashes: [], nexts: [], claimsCnt: [], claimed: []}\n    const [currentChallenges, setCurrentChallenges] = useState(initChallenges)\n\n    let mounted = true\n\n    const refresh = () => {\n\n        const _refresh = async () => {\n\n            if(mounted) {\n                if(currentAddress !== address) {\n                    stopAll(challengesRunStatus[currentAddress])\n\n                    setCurrentAddress(address)\n                    const nrn: {[key: string]: RunStatusType} = {}\n                    Object.keys(runStatus).forEach(bnStr => {\n                        const rs = runStatus[bnStr]\n                        const nrs = {...rs}\n                        nrn[bnStr] = nrs                            \n                    })\n                    setRunStatusSnap(nrn)\n                } else if(currentChallenges !== challenges) {\n                    // Reconcile challenges\n                    // First, stop and remove the run status for challenges that have been removed\n                    // Second, update difficulty in the run status\n                    Object.keys(runStatus).forEach(bnStr =>{\n                        const rs = runStatus[bnStr]\n                        if(rs.group === group) {\n                            const cmt = challengesMap[bnStr]\n                            if(cmt) {\n                                if(rs.targetDifficulty !== cmt.adjustedDifficulty) {\n                                    // Update the difficulty\n                                    rs.targetDifficulty = cmt.adjustedDifficulty\n                                    if(rs.solvedDifficulty >= rs.targetDifficulty) {\n                                        // Got it!\n                                        rs.solved = true\n                                        if(rs.stopFn) {\n                                            rs.stopFn()\n                                            rs.stopFn = undefined\n                                        }\n                                    }\n                                }\n                            } else {\n                                // Stop the job\n                                if(rs.stopFn) {\n                                    rs.stopFn()\n                                    rs.stopFn = undefined\n                                }\n                                delete runStatus[bnStr]\n                            }\n                        }\n                    })\n \n                    setCurrentChallenges(challenges)\n                    const nrn: {[key: string]: RunStatusType} = {}\n                    Object.keys(runStatus).forEach(bnStr => {\n                        const rs = runStatus[bnStr]\n                        const nrs = {...rs}\n                        nrn[bnStr] = nrs                            \n                    })\n                    setRunStatusSnap(nrn)\n                }\n            }\n        }\n\n        const _cleanup = () => {\n            mounted = false\n        }\n\n        _refresh()\n\n        return _cleanup\n    }\n\n    useEffect(refresh)\n\n    function findBalance(registeredBalances: RegisteredBalancesType, blockNumber: BigNumber) {\n        const cnt = registeredBalances.blockNumbers.length\n        for(let i = 0; i < cnt; i++) {\n            const bn = registeredBalances.blockNumbers[i]\n            const bal = registeredBalances.balances[i]\n            if(blockNumber.gte(bn)) {\n                return bal\n            }\n        }\n        return ZERO\n    }\n\n    function toChallengesMap(challenges: ChallengesType, registeredBalances: RegisteredBalancesType) {\n\n        const challengesMap: {[bnStr: string]: ChallengesMapType} = {}\n        challenges.blockNumbers.forEach((bn, i) =>{\n            const bnStr = bn.toHexString()\n            const challengeHash = challenges.challengeHashes[i]\n            if(challengesMap[bnStr]) {\n                throw new Error(\"Duplicate block number in challenges: \"+bnStr)\n            }\n\n            const balance = findBalance(registeredBalances, bn)\n            const generalDifficulty = MAX_CHALLENGE_DIFFICULTY(demo) - CHALLENGE_DIFFICULTY_STEP * (challenges.totalCnt - i - 1)\n            const addressDiscount = getWalletDifficultyDiscount(challengeHash, address, balance, TOKEN_DECIMALS)\n            const balanceDiscount = getBalanceDifficultyDiscount(balance, TOKEN_DECIMALS)\n            let adjustedDifficulty = generalDifficulty - addressDiscount - balanceDiscount\n            if(adjustedDifficulty < MIN_CHALLENGE_DIFFICULTY(demo)) {\n                adjustedDifficulty = MIN_CHALLENGE_DIFFICULTY(demo)\n            }\n\n            const claimsCnt = challenges.claimsCnt[i]\n            const claimed = challenges.claimed[i]\n            const ch = {\n                blockNumberHex: bnStr,\n                challengeHash,\n                generalDifficulty,\n                addressDiscount,\n                balance,\n                balanceDiscount,\n                adjustedDifficulty,\n                claimsCnt,\n                claimed,\n            }\n            challengesMap[bnStr] = ch\n        })\n    \n        return challengesMap\n    }\n    \n    const handleStartMining = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, blockNumber: BigNumber, challengeHash: string, address: string, difficulty: number) => {\n        e.preventDefault()\n\n        const bnStr = blockNumber.toHexString()\n        let rs = runStatus[bnStr]\n\n        if(!rs) {\n            rs = {\n                group,\n                blockNumberHex: bnStr,\n                challengeHash,\n                trials: 0,\n                targetDifficulty: difficulty,\n                solutionTrials: 0,\n                solvedDifficulty: 0,\n                solved: false,\n                timeMs: 0,\n                stopFn: undefined,\n            }\n            runStatus[bnStr] = rs\n        }\n\n        if(rs.stopFn) {\n            throw new Error(\"The solver is already running on block \"+bnStr)\n        }\n\n        const trials0 = rs.trials\n        const timeMs0 = rs.timeMs\n        const status = (trials: number, timeMs: number, solution?: BigNumber, solvedDifficulty?: number) => {\n            const rs = runStatus[bnStr]\n            rs.trials = trials0 + trials\n            rs.timeMs = timeMs0 + timeMs\n\n            if(solution) {\n                if(solvedDifficulty !== undefined && solvedDifficulty > rs.solvedDifficulty) {\n                    rs.solutionTrials = rs.trials\n                    rs.solution = solution\n                    rs.solvedDifficulty = solvedDifficulty\n                    if(rs.solvedDifficulty >= rs.targetDifficulty) {\n                        // Got it!\n                        rs.solved = true\n                        if(rs.stopFn) {\n                            rs.stopFn()\n                            rs.stopFn = undefined\n                        }\n                    }\n                }\n            }\n\n            const nrn = {...runStatus}\n            const nrs = {...rs}\n            nrn[bnStr] = nrs\n            setRunStatusSnap(nrn)\n        }\n\n        rs.stopFn = solve(blockNumber, challengeHash, address, rs.solvedDifficulty, status)\n\n        const nrn = {...runStatus}\n        nrn[bnStr] = {...rs}\n        setRunStatusSnap(nrn)\n    }\n\n    const handleStopMining = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, blockNumber: BigNumber) => {\n        e.preventDefault()\n\n        const bnStr = blockNumber.toHexString()\n        const rs = runStatus[bnStr]\n        if(!rs) {\n            throw new Error(\"The solver does not exist \"+bnStr)\n        }\n        if(rs.stopFn) {\n            rs.stopFn()\n            rs.stopFn = undefined\n        }\n\n        const nrn = {...runStatus}\n        const nrs = {...rs}\n        nrn[bnStr] = nrs\n        setRunStatusSnap(nrn)\n    }\n    \n    const handleClaimReward = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, blockNumber: BigNumber) => {\n        e.preventDefault()\n\n        const bnStr = blockNumber.toHexString()\n        const rs = runStatus[bnStr]\n        if(!rs) {\n            throw new Error(\"The solver does not exist \"+bnStr)\n        }\n\n        if(rs.solution) {\n            await claimReward(blockNumber, address, address, rs.solution);\n        }\n\n        const nrn = {...runStatus}\n        const nrs = {...rs}\n        nrn[bnStr] = nrs\n        setRunStatusSnap(nrn)\n    }\n    \n    return <table>\n        <thead>\n            <tr>\n                <th>\n                    N\n                </th>\n                <th>\n                    Block<br/>Number\n                </th>\n                <th>\n                    Challenge Hash\n                </th>\n                {/* <th>\n                    Registered<br/>Balance\n                </th>\n                <th style={{textAlign: \"left\"}}>\n                    General<br/>Difficulty\n                </th>\n                <th>\n                    Wallet<br/>Discount\n                </th>\n                <th>\n                    Balance<br/>Discount\n                </th> */}\n                <th>\n                    YOUR<br/>Discount\n                </th>\n                <th style={{textAlign: \"left\"}}>\n                    YOUR<br/>Difficulty\n                </th>\n                <th>\n                    Reward<br/>Tokens\n                </th>\n                <th>\n                    Claims\n                </th>\n                <th>\n                    Status\n                </th>\n                <th>\n                    Mining<br/>Progress\n                </th>\n                <th>\n                    Trials\n                </th>\n                <th>\n                    Time\n                </th>\n                <th>\n                    Mine/Verify/Claim\n                </th>\n                <th>\n                    GoMiner<br/>Command\n                </th>\n                <th>\n                    N\n                </th>\n            </tr>\n        </thead>\n        <tbody>\n            {challenges.blockNumbers.map((bn, i) => {\n                const challengeHash = challenges.challengeHashes[i]\n                const hash = challengeHash.substr(0, 8)+\"-\"+challengeHash.substr(challengeHash.length - 10, 10)\n\n                const bnStr = bn.toHexString()\n                const cmt = challengesMap[bnStr]\n                // const { generalDifficulty, addressDiscount, balance, balanceDiscount } = cmt\n                const { addressDiscount, balanceDiscount } = cmt\n                const { adjustedDifficulty, claimsCnt, claimed } = cmt\n\n                const rs = runStatusSnap[bnStr]\n                const claimable = !claimed && rs && rs.solvedDifficulty >= adjustedDifficulty\n                // const verifiable = !claimed && rs && rs.solvedDifficulty > 0\n                let [ rewardsCnt, rewardUnits ] = getRewardUnits(challengeHash)\n                const rewardUnit = challenges.rewardUnits[i]\n                rewardsCnt = REWARDS_CNT_LIMIT(demo)\n\n                const statusTitle = claimed ? \"Claimed\" : rs && (rs.solved ? \"Solved (now you need to claim)\" : rs.stopFn ? \"Mining\" : rs.trials > 0 ? \"Stopped\" : \"\")\n                const statusIcon = claimed ? \"check\" : (rs || \"\") && (rs.solved ? \"check\" : rs.stopFn ? \"running\" : rs.trials > 0 ? \"stop\" : \"\")\n                const statusColor = claimed ? \"green\" : (rs || \"\") && (rs.solved ? \"red\" : rs.stopFn ? \"red\" : rs.trials > 0 ? \"red\" : \"\")\n                const progressTitle = (rs || \"\") && (rs.solved ? \"\"+rs.solvedDifficulty : rs.stopFn || rs.trials > 0 ? \"\"+rs.solvedDifficulty+\" / \"+adjustedDifficulty : \"\") \n                const progress = (rs || \"\") && (rs.solved ? 100 : rs.stopFn || rs.trials > 0? Math.floor(rs.solvedDifficulty * 100 / adjustedDifficulty) : \"\")\n\n                const gominer = \"./gominer -a \"+address+\" -b \"+bn.toString()+\" -c \"+challengeHash+\" -d \"+adjustedDifficulty.toString()+\" -t 2\"\n\n                return <tr key={i}>\n                    <td>{i+1}</td>\n                    <th>{bn.toString()}</th>\n                    <td><code>{hash}</code></td>\n                    {/* <td>{formatBalance(balance, TOKEN_DECIMALS)}</td>\n                    <td style={{textAlign: \"left\"}}>{generalDifficulty} - {getDifficultyLabel(generalDifficulty)}</td>\n                    {addressDiscount > 0 ? <td>{addressDiscount}</td> : <td/>}\n                    {balanceDiscount > 0 ? <td>{balanceDiscount}</td> : <td/>} */}\n                    {addressDiscount > 0 || balanceDiscount > 0 ? <td>{addressDiscount+balanceDiscount}</td> : <td/>}\n                    <td style={{textAlign: \"left\"}}><Category cat={getDifficultyLabel(adjustedDifficulty)}>{adjustedDifficulty} - {getDifficultyLabel(adjustedDifficulty)}</Category></td>\n                    <td>{rewardUnits*rewardUnit/1000}</td>\n                    <td>{claimsCnt}/{rewardsCnt}</td>\n                    <td>{statusIcon && <FontAwesomeIcon title={statusTitle} color={statusColor} icon={statusIcon}/>}</td>\n                    <td>{progress === \"\" ? \"\" : <span title={progressTitle}><ProgressBar width=\"60px\" height=\"18px\" labelSize=\"10px\" labelColor=\"black\" bgColor=\"#BBDEFB\" labelAlignment=\"center\" animateOnRender={false} transitionTimingFunction=\"linear\" transitionDuration=\"500ms\" completed={progress}/></span>}</td>\n                    <td>{rs && (rs.solved ? rs.solutionTrials.toLocaleString() : rs.trials > 0 ? rs.trials.toLocaleString() : \"\")}</td>\n                    <td>{rs && (rs.timeMs > 0 ? \"\"+Math.floor(rs.timeMs / 1000).toLocaleString()+\" s\" : \"\")}</td>\n                    <td>\n                        <button title=\"Start Mining\" disabled={!!(claimed || (rs && (rs.solved || rs.stopFn)))} onClick={(e) => handleStartMining(e, bn, challengeHash, address, adjustedDifficulty)}><FontAwesomeIcon icon=\"play\"/></button>\n                        <button title=\"Stop Mining\" disabled={!(rs && rs.stopFn)} onClick={(e) => handleStopMining(e, bn)}><FontAwesomeIcon icon=\"pause\"/></button>\n                        {/* <button disabled={!verifiable} onClick={(e) => handleVerifyClaim(e, bn)}>&#x2714;</button> */}\n                        <button title=\"Claim Your Reward\" style={{color: claimable ? \"red\" : \"\"}} disabled={!claimable} onClick={(e) => handleClaimReward(e, bn)}><FontAwesomeIcon icon=\"trophy\"/></button>\n                    </td>\n                    <td>\n                        <CopyToClipboard text={gominer}>\n                            <button title=\"Copy GoMiner Command\" disabled={claimed}><FontAwesomeIcon icon={[\"far\", \"copy\"]}/></button>\n                        </CopyToClipboard>\n                    </td>\n                    <td>{i+1}</td>\n                </tr>\n            })}\n        </tbody>\n    </table>\n}\n","/* https://htmlcolorcodescom/color-chart/material-design-color-chart/   \n    \nRed #FFCDD2\nPink    #F8BBD0\nPurple  #E1BEE7\nDeep Purple #D1C4E9\nIndigo  #C5CAE9\nBlue    #BBDEFB\nLight Blue  #B3E5FC\nCyan    #B2EBF2\nTeal    #B2DFDB\nGreen   #C8E6C9\nLight Green #DCEDC8\nLime    #F0F4C3\nYellow  #FFF9C4\nAmber   #FFECB3\nOrange  #FFE0B2\nDeep Orange #FFCCBC\nBrown   #D7CCC8\nGrey    #F5F5F5\nBlue Grey   #CFD8DC */\n\nexport default {\nwhite: {\n    backgroundColor: \"white\",\n},\n\nred: {\n    backgroundColor: \"#FFCDD2\",\n},\n\npink: {\n    backgroundColor: \"#F8BBD0\",\n},\n\npurple: {\n    backgroundColor: \"#E1BEE7\",\n},\n\ndeepPurple: {\n    backgroundColor: \"#D1C4E9\",\n},\n\nindigo: {\n    backgroundColor: \"#C5CAE9\",\n},\n\nblue: {\n    backgroundColor: \"#BBDEFB\",\n},\n\nlightBlue: {\n    backgroundColor: \"#B3E5FC\",\n},\n\nblack: {\n    backgroundColor: \"#000000\",\n    color: \"white\",\n},\n\ncyan: {\n    backgroundColor: \"#B2EBF2\",\n},\n\nteal: {\n    backgroundColor: \"#B2DFDB\",\n},\n\ngreen: {\n    backgroundColor: \"#C8E6C9\",\n},\n\nlightGreen: {\n    backgroundColor: \"#DCEDC8\",\n},\n\nyellow: {\n    backgroundColor: \"#FFF9C4\",\n},\n\namber: {\n    backgroundColor: \"#FFECB3\",\n},\n\norange: {\n    backgroundColor: \"#FFE0B2\",\n},\n\nbrown: {\n    backgroundColor: \"#D7CCC8\",\n},\n\ndarkGrey: {\n    backgroundColor: \"#D8D8D8\",\n},\n\ngrey: {\n    backgroundColor: \"#E8E8E8\",\n},\n\nlightgrey: {\n    backgroundColor: \"#F5F5F5\",\n},\n\nblueGrey: {\n    backgroundColor: \"#CFD8DC\",\n},\n}\n","import React, { useState } from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport css from \"./Address.module.css\"\n\nexport interface AddressProps {\n    children: string;\n    chainId: number;\n}\n\nconst Address: React.FC<AddressProps> = ({children: address, chainId}) => {\n    const [hover1, setHover1] = useState(false);\n    const [down1, setDown1] = useState(false);\n    const [hover2, setHover2] = useState(false);\n    const [down2, setDown2] = useState(false);\n    const { button, buttonHover, buttonDown } = css\n    const className1 = down1 ? buttonDown : hover1 ? buttonHover : button\n    const className2 = down2 ? buttonDown : hover2 ? buttonHover : button\n    const url = chainId === 80001 ? \"http://mumbai.polygonscan.com/address\" : \"http://polygonscan.com/address\"\n\n    if(!address) {\n        return null\n    }\n    return <span>\n        <span className={css.address}><code>{address}</code></span>\n        &nbsp;\n        {address && <CopyToClipboard text={address}>\n            <span\n                onPointerOver={()=> setHover1(true)}\n                onPointerOut={() => setHover1(false)}\n                onPointerDown={()=> setDown1(true)}\n                onPointerUp={() => setDown1(false)}\n            >\n                <button className={className1}><FontAwesomeIcon title={\"Copy Address: \"+address} icon={[\"far\", \"copy\"]}/></button>\n            </span>\n            </CopyToClipboard>\n        }\n        <span\n            onPointerOver={()=> setHover2(true)}\n            onPointerOut={() => setHover2(false)}\n            onPointerDown={()=> setDown2(true)}\n            onPointerUp={() => setDown2(false)}\n        >\n            {<a title={url+\"/\"+address} href={url+\"/\"+address} target=\"_blank\" rel=\"noopener noreferrer\"><button className={className2}><FontAwesomeIcon icon=\"external-link-alt\"/></button></a>}\n        </span>\n    </span>\n}\n\nexport default Address\n","import React, { Component } from 'react'\n\nimport Select from 'react-select'\n\nconst commisionOptions = [\n  { value: 0, label: \"0%\"},\n  { value: 10, label: \"10%\"},\n  { value: 20, label: \"20%\"},\n  { value: 30, label: \"30%\"},\n  { value: 40, label: \"40%\"},\n  { value: 50, label: \"50%\"},\n  { value: 60, label: \"60%\"},\n  { value: 70, label: \"70%\"},\n  { value: 80, label: \"80%\"},\n  { value: 90, label: \"90%\"},\n]\n\nconst commisionOptionsMap = {}\n\ncommisionOptions.forEach(o => commisionOptionsMap[o.value.toString()] = o)\n\nconst customStyles = {\n  control: (provided, state) => ({\n    ...provided,\n    background: '#fff',\n    borderColor: '#9e9e9e',\n    minHeight: '20px',\n    height: '20px',\n    boxShadow: state.isFocused ? null : null,\n  }),\n\n  valueContainer: (provided, state) => ({\n    ...provided,\n    height: '20px',\n    padding: '0 6px'\n  }),\n\n  input: (provided, state) => ({\n    ...provided,\n    margin: '0px',\n  }),\n\n  indicatorSeparator: state => ({\n    display: 'none',\n  }),\n\n  indicatorsContainer: (provided, state) => ({\n    ...provided,\n    height: '20px',\n  }),\n}\n\nexport default class CommisionSetting extends Component {\n\n  handleChange = selectedOption => {\n    this.props.setCommision(selectedOption.value)\n  }\n\n  render() {\n    const { commision } = this.props\n    const selectedOption = commisionOptionsMap[commision.toString()] || null\n\n    return <Select\n      styles={customStyles}\n      placeholder={\"\"+commision+\"%\"}\n      width={25}\n      value={selectedOption}\n      onChange={this.handleChange}\n      options={commisionOptions}\n    />\n  }\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport { LuminaTokenContext as TokenContext } from \"../hardhat/SymfoniContext\"\nimport { LuminaRecordsContext as RecordsContext } from \"../hardhat/SymfoniContext\"\nimport { LuminaTrusteeContext as TrusteeContext } from \"../hardhat/SymfoniContext\"\nimport { LuminaAdminContext as AdminContext } from \"../hardhat/SymfoniContext\"\nimport { ProgressContractLockerContext as LockerContext } from \"../hardhat/SymfoniContext\"\nimport { LuminaToken as TokenTypechain } from \"../hardhat/typechain/LuminaToken\"\nimport { LuminaRecords as RecordsTypechain } from \"../hardhat/typechain/LuminaRecords\"\nimport { LuminaTrustee as TrusteeTypechain } from \"../hardhat/typechain/LuminaTrustee\"\nimport { LuminaAdmin as AdminTypechain } from \"../hardhat/typechain/LuminaAdmin\"\nimport { ProgressContractLocker as LockerTypechain } from \"../hardhat/typechain/ProgressContractLocker\"\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport { Web3Provider } from \"@ethersproject/providers\"\nimport { ContractTransaction } from \"@ethersproject/contracts\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { ChallengesType, Challenges, RegisteredBalancesType } from \"./Challenges\"\nimport { formatBalance, ZERO } from \"../utils/bigNumber\"\nimport Colors from \"../utils/colors\"\n\nimport { TOKEN_SYMBOL, CHALLENGES_LIMIT, TOKEN_DECIMALS } from \"./Parameters\"\nimport { getReasonLabel } from \"./Rules\"\nimport Address from \"./Address\"\nimport CommisionSetting from \"./CommisionSetting\"\n\ninterface Props { }\n\nconst symbol = TOKEN_SYMBOL\nconst tokenDecimals = TOKEN_DECIMALS\n\nexport const LuminaToken: React.FC<Props> = () => {\n    const [err, setErr] = useState(\"\")\n    const [blockNumber, setBlockNumber] = useState(0)\n    const [address, setAddress] = useState(\"\")\n    const [totalSupply, setTotalSupply] = useState(ZERO)\n    const [balance, setBalance] = useState(ZERO)\n    const [ownerAddress, setOwnerAddress] = useState(\"\")\n    const [paused, setPaused] = useState(false)\n    const [challengesAllowance, setChallengesAllowance] = useState(0)\n    const [useEffectCnt, setUseEffectCnt] = useState(0)\n    const [txCnt, setTxCnt] = useState(0)\n    const initRegisteredBalances: RegisteredBalancesType = {balances: [], blockNumbers: []}\n    const [registeredBalances, setRegisteredBalances] = useState(initRegisteredBalances)\n    const initChallenges: ChallengesType = {totalCnt: 0, indexes: [], blockNumbers: [], rewardUnits: [], challengeHashes: [], nexts: [], claimsCnt: [], claimed: []}\n    const [basicChallenges, setBasicChallenges] = useState(initChallenges)\n    const [premiumChallenges, setPremiumChallenges] = useState(initChallenges)\n    const [totalLockedSupply, setTotalLockedBalance] = useState(ZERO)\n    const [lockedBalance, setLockedBalance] = useState(ZERO)\n    const [lockedAvailableBalance, setLockedAvailableBalance] = useState(ZERO)\n    const [claimedTokens, setClaimedTokens] = useState(ZERO)\n    const [availableTokens, setAvailableTokens] = useState(ZERO)\n    const [network, setNetwork] = useState({chainId: 0, name: 'unknown'})\n    const [timerCnt, setTimerCnt] = useState(0)\n    const [demo, setDemo] = useState(false)\n    const [goMiner, setGoMiner] = useState(\"\")\n    const [goMinerErr, setGoMinerErr] = useState(\"\")\n    const [commision, setCommision] = useState(0)\n\n    const token = useContext(TokenContext).instance\n    const records = useContext(RecordsContext).instance\n    const trustee = useContext(TrusteeContext).instance\n    const admin = useContext(AdminContext).instance\n    const locker = useContext(LockerContext).instance\n\n    const provider = window.ethereum ? new Web3Provider(window.ethereum) : null\n    const signer = provider && provider.getSigner()\n\n    let eerr = \"\"\n    if(!window.ethereum) {\n        eerr = \"Please install the MetaMask plugin\"\n    }\n\n    async function getNetwork() {\n        return provider && provider.detectNetwork()\n    }\n    let mounted = true\n    const refresh = () => {\n\n        const _refresh = async () => {\n            const _network = await getNetwork() || network\n            if(network.chainId !== _network.chainId) {\n                setNetwork({chainId: _network.chainId, name: _network.name})\n            }\n\n            if (!token) {\n                return null\n            }\n            if(!records) {\n                return null\n            }\n            if(!trustee) {\n                return null\n            }\n            if(!admin) {\n                return null\n            }\n            if(!locker) {\n                return null\n            }\n\n            const t = token\n\n            try {\n            const _paused = await trustee.paused()\n\n            const _ownerAddress = await trustee.owner()\n\n            const _registeredBalances = await records.getBalances()\n\n            const _totalSupply = await t.totalSupply()\n\n            const _challengesAllowance = await admin.getChallengesAllowance()\n\n            let _address\n            try {\n                _address = signer ? (await signer.getAddress()).toString() : \"\"\n            } catch(ex) {\n                _address = \"\"\n            }\n\n            const _commision = _address ? await records.getCommision(_address) : 0\n\n            const _balance = _address ? await t.balanceOf(_address) : ZERO\n\n            const _blockNumber = provider ? await provider.getBlockNumber() : 0\n\n            const _claimedTokens = await trustee.getClaimedTokens()\n\n            const _availableTokens = await t.balanceOf(trustee.address)\n\n            if(mounted) {\n                if(useEffectCnt === 0) {\n                    const _demo = await trustee.DEMO()\n                    setDemo(_demo)\n                }\n                if(\n                    paused !== _paused ||\n                    ownerAddress !== _ownerAddress ||\n                    // registeredBalances !== _registeredBalances ||\n                    address !== _address ||\n                    commision !== _commision ||\n                    !totalSupply.eq(_totalSupply) ||\n                    _challengesAllowance !== challengesAllowance ||\n                    !balance.eq(_balance) ||\n                    blockNumber !== _blockNumber ||\n                    !claimedTokens.eq(_claimedTokens) ||\n                    !availableTokens.eq(_availableTokens)\n                ) {\n                    setPaused(_paused)\n                    setOwnerAddress(_ownerAddress)\n                    setRegisteredBalances(_registeredBalances)\n                    setAddress(_address)\n                    setCommision(_commision)\n                    setTotalSupply(_totalSupply)\n                    setChallengesAllowance(_challengesAllowance)\n                    setBalance(_balance)\n                    setBlockNumber(_blockNumber)\n                    setClaimedTokens(_claimedTokens)\n                    setAvailableTokens(_availableTokens)\n                    setUseEffectCnt(useEffectCnt + 1)\n                    await readAllChallenges()\n                }\n\n                const l = locker\n                if(!l) {\n                    return\n                }\n\n                const _lockedBalance = _address ? await l.balanceOf(_address) : ZERO\n                const _lockedAvailableBalance = _address ? await l.availableBalanceOf(_address) : ZERO\n                const _totalLockedSupply = _address ? await l.totalLockedBalance() : ZERO\n\n                if(mounted) {\n                    if(\n                        lockedBalance !== _lockedBalance ||\n                        lockedAvailableBalance !== _lockedAvailableBalance ||\n                        totalLockedSupply !== _totalLockedSupply\n                    ) {\n                        setLockedBalance(_lockedBalance);\n                        setLockedAvailableBalance(_lockedAvailableBalance);\n                        setTotalLockedBalance(_totalLockedSupply);\n                    }\n                }\n            }\n            } catch(e) {\n                const ex: any = e\n                const err = ex.toString()\n                let msg = ex.data && ex.data.message ? ex.data.message : ex.message ? ex.message : ex.toString()\n                if(err.startsWith(\"Error: call revert exception \")) {\n                    msg = \"No smart contract, please make sure MetaMask is pointing to the MATIC network\"\n                    msg += \" \" + err\n                } else if(err.startsWith(\"Error: \")) {\n                    msg = err.substring(7)\n                }\n                setErr(msg)\n            }\n        }\n\n        const tm = setTimeout(()=>{\n            if(mounted) {\n                setTimerCnt(timerCnt+1)\n            }\n        }, 5000)\n\n        const _cleanup = () => {\n            mounted = false\n            clearTimeout(tm)\n        }\n\n        _refresh()\n\n        return _cleanup\n    }\n\n    const runTokenTx = async (\n        txf: (t: TokenTypechain) => Promise<ContractTransaction>,\n        f?: (t: TokenTypechain) => void\n    ) => {\n        setErr(\"\")\n        try {\n            const t = token\n            if (!t) {\n                throw Error(\"Token instance not ready\")\n            }\n            const tx = await txf(t)\n            const cr = await tx.wait()\n            if(cr.confirmations <= 0) {\n                throw new Error(\"No confirmations in contract receipt\")\n            }\n            if(f) {\n                f(t)\n            }\n            setTxCnt(txCnt + 1)\n        } catch(e) {\n            const ex: any = e\n            let msg = ex.data && ex.data.message ? ex.data.message : ex.message ? ex.message : ex.toString()\n            // setErr(msg)\n            const err0 = \"VM Exception while processing transaction: revert \"\n            if(msg && msg.startsWith(err0)) {\n                msg = msg.substring(err0.length)\n            }\n            window.alert(msg)\n            return false\n        }\n        return true\n    }\n\n    const runRecordsTx = async (\n        txf: (t: RecordsTypechain) => Promise<ContractTransaction>,\n        f?: (t: RecordsTypechain) => void\n    ) => {\n        setErr(\"\")\n        try {\n            const t = records\n            if (!t) {\n                throw Error(\"Records instance not ready\")\n            }\n            const tx = await txf(t)\n            const cr = await tx.wait()\n            if(cr.confirmations <= 0) {\n                throw new Error(\"No confirmations in contract receipt\")\n            }\n            if(f) {\n                f(t)\n            }\n            setTxCnt(txCnt + 1)\n        } catch(e) {\n            const ex: any = e\n            let msg = ex.data && ex.data.message ? ex.data.message : ex.message ? ex.message : ex.toString()\n            // setErr(msg)\n            const err0 = \"VM Exception while processing transaction: revert \"\n            if(msg && msg.startsWith(err0)) {\n                msg = msg.substring(err0.length)\n            }\n            window.alert(msg)\n            return false\n        }\n        return true\n    }\n\n    const runTrusteeTx = async (\n        txf: (t: TrusteeTypechain) => Promise<ContractTransaction>,\n        f?: (t: TrusteeTypechain) => void\n    ) => {\n        setErr(\"\")\n        try {\n            const t = trustee\n            if (!t) {\n                throw Error(\"Trustee instance not ready\")\n            }\n            const tx = await txf(t)\n            const cr = await tx.wait()\n            if(cr.confirmations <= 0) {\n                throw new Error(\"No confirmations in contract receipt\")\n            }\n            if(f) {\n                f(t)\n            }\n            setTxCnt(txCnt + 1)\n        } catch(e) {\n            const ex: any = e\n            let msg = ex.data && ex.data.message ? ex.data.message : ex.message ? ex.message : ex.toString()\n            // setErr(msg)\n            const err0 = \"VM Exception while processing transaction: revert \"\n            if(msg && msg.startsWith(err0)) {\n                msg = msg.substring(err0.length)\n            }\n            window.alert(msg)\n            return false\n        }\n        return true\n    }\n\n    const runAdminTx = async (\n        txf: (t: AdminTypechain) => Promise<ContractTransaction>,\n        f?: (t: AdminTypechain) => void\n    ) => {\n        setErr(\"\")\n        try {\n            const t = admin\n            if (!t) {\n                throw Error(\"Admin instance not ready\")\n            }\n            const tx = await txf(t)\n            const cr = await tx.wait()\n            if(cr.confirmations <= 0) {\n                throw new Error(\"No confirmations in contract receipt\")\n            }\n            if(f) {\n                f(t)\n            }\n            setTxCnt(txCnt + 1)\n        } catch(e) {\n            const ex: any = e\n            let msg = ex.data && ex.data.message ? ex.data.message : ex.message ? ex.message : ex.toString()\n            // setErr(msg)\n            const err0 = \"VM Exception while processing transaction: revert \"\n            if(msg && msg.startsWith(err0)) {\n                msg = msg.substring(err0.length)\n            }\n            window.alert(msg)\n            return false\n        }\n        return true\n    }\n\n    const runLockerTx = async (\n        txf: (l: LockerTypechain) => Promise<ContractTransaction>,\n        f?: (l: LockerTypechain) => void\n    ) => {\n        setErr(\"\")\n        try {\n            const l = locker\n            if (!l) {\n                throw Error(\"Locker instance not ready\")\n            }\n            const tx = await txf(l)\n            const cr = await tx.wait()\n            if(cr.confirmations <= 0) {\n                throw new Error(\"No confirmations in contract receipt\")\n            }\n            if(f) {\n                f(l)\n            }\n            setTxCnt(txCnt + 1)\n        } catch(e) {\n            const ex: any = e\n            let msg = ex.data && ex.data.message ? ex.data.message : ex.message ? ex.message : ex.toString()\n            // setErr(msg)\n            const err0 = \"VM Exception while processing transaction: revert \"\n            if(msg && msg.startsWith(err0)) {\n                msg = msg.substring(err0.length)\n            }\n            window.alert(msg)\n            return false\n        }\n        return true\n    }\n\n    const handlePause = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        runTrusteeTx(t => t.pause())\n    }\n\n    const handleUnpause = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        runTrusteeTx(t => t.unpause())\n    }\n\n    const readBasicChallenges = async () => {\n        if (!admin) return\n\n        const basicCha = await admin.readChallenges(false, CHALLENGES_LIMIT)\n        const {totalCnt, indexes, blockNumbers, rewardUnits, challengeHashes, nexts, claimsCnt, claimed} = basicCha\n        const ch: string[] = challengeHashes.map(n => n.toHexString())\n        setBasicChallenges({totalCnt, indexes, blockNumbers, rewardUnits, challengeHashes: ch, nexts, claimsCnt, claimed})\n    }\n\n    const readPremiumChallenges = async () => {\n        if (!admin) return\n\n        const premiumCha = await admin.readChallenges(true, CHALLENGES_LIMIT)\n        const {totalCnt, indexes, blockNumbers, rewardUnits, challengeHashes, nexts, claimsCnt, claimed} = premiumCha\n        const ch: string[] = challengeHashes.map(n => n.toHexString())\n        setPremiumChallenges({totalCnt, indexes, blockNumbers, rewardUnits, challengeHashes: ch, nexts, claimsCnt, claimed})\n    }\n\n    const readAllChallenges = async () => {\n        readBasicChallenges()\n        readPremiumChallenges()\n    }\n\n    const handleReadChallenges = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n\n        readAllChallenges()\n    }\n\n    const handleAddChallenges = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n\n        await runAdminTx(t => t.addChallenges(challengesAllowance))\n        readAllChallenges()\n    }\n\n    const handleLockBalance = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        const lockerAddress: any = locker && locker.address\n        await runTokenTx(t => t.approve(lockerAddress, balance))\n        await runLockerTx(l => l.deposit(balance))\n    }\n\n    const handleWithdrawBalance = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        await runLockerTx(l => l.withdraw(lockedAvailableBalance))\n    }\n\n    const handleRegisterBalance = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        await runTokenTx(t => t.registerBalance())\n    }\n\n    const handleClearClaim = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        setGoMiner(\"\")\n        setGoMinerErr(\"\")\n    }\n\n    const parseClaim = (goMiner: string) => {\n        let valid\n        try {\n            const claim: any = JSON.parse(goMiner)\n            const { blockNumber, minerAddress: miner, address: recipient, solution } = claim\n\n            const regex = /0x[a-fA-F0-9]+/\n\n            if(\n                typeof(blockNumber) === \"number\" &&\n                typeof(miner) === \"string\" &&\n                typeof(recipient) === \"string\" &&\n                typeof(solution) === \"string\" &&\n                blockNumber >= 0 &&\n                miner.length === 42 &&\n                recipient.length === 42 &&\n                solution.length === 66 &&\n                miner.startsWith(\"0x\") &&\n                recipient.startsWith(\"0x\") &&\n                solution.startsWith(\"0x\") &&\n                regex.test(miner) && \n                regex.test(recipient) && \n                regex.test(solution)\n            ) {\n                valid = true\n                setGoMinerErr(\"\")\n            } else {\n                valid = false\n                setGoMinerErr(\"Invalid GoMiner Solution String\")\n            }\n            return { valid, \n                blockNumber: BigNumber.from(blockNumber),\n                miner,\n                recipient,\n                solution: BigNumber.from(solution),\n            }\n        } catch(ex) {\n            if(ex instanceof Error) {\n                setGoMinerErr(ex.message)\n            }\n            valid = false   \n        }\n\n        return { valid, blockNumber: BigNumber.from(0), miner: \"\", recipient: \"\", solution: BigNumber.from(0) }\n    }\n\n    const handleVerifyClaim = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n\n        const { valid, blockNumber, miner, recipient, solution } = parseClaim(goMiner)\n        if(valid) {\n            const { rewardUnits, reason } = await verifyClaim(blockNumber, miner, recipient, solution)\n            verifyAlert(blockNumber, reason, rewardUnits)\n        } else {\n            window.alert(\"Invalid GoMiner Solution String\")\n        }\n    }\n\n    const handleClaim = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n\n        const { valid, blockNumber, miner, recipient, solution } = parseClaim(goMiner)\n        if(valid) {\n            const success = await claimReward(blockNumber, miner, recipient, solution)\n            if(success) {\n                setGoMiner(\"\")\n                readAllChallenges()\n            }\n        } else {\n            window.alert(\"Invalid GoMiner Solution String\")\n        }\n    }\n\n    const handleGoMinerChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n        e.preventDefault()\n        setGoMiner(e.target.value.trim())\n    }\n\n    const verifyClaim = async (blockNumber: BigNumber, miner: string, recipient: string, solution: BigNumber) => {\n        if (!trustee) {\n            throw new Error(\"Couldn't call trustee contract\")\n        }\n        if(paused) {\n            return { rewardUnits: 0, reason: 101, premium: false, rewardsCnt: 0 }\n        }\n        try {\n            const { rewardUnits, reason, premium, rewardsCnt } = await trustee.verifyClaim(blockNumber, miner, recipient, solution)\n\n            return { rewardUnits, reason, premium, rewardsCnt }\n        } catch(ex) {\n            return { rewardUnits: 0, reason: 100, premium: false, rewardsCnt: 0 }\n        }\n    }\n\n    const verifyAlert = (blockNumber: BigNumber, reason: number, rewardUnits: number) => {\n        if(reason === 0) {\n            window.alert(\"Claim Verification on block #\"+blockNumber.toString()+\"\\nStatus: SUCCESS\\nReward Amount: \"+rewardUnits / 1000+\" LUMI\")\n        } else {\n            window.alert(\"Claim Verification on block #\"+blockNumber.toString()+\"\\nStatus: FAILED\\nReason: \" + getReasonLabel(reason))\n        }\n    }\n\n    const claimAlert = (blockNumber: BigNumber, reason: number, rewardUnits: number) => {\n        if(reason === 0) {\n        } else {\n            window.alert(\"Claim on block #\"+blockNumber.toString()+\"\\nStatus: FAILED\\nReason: \" + getReasonLabel(reason))\n        }\n    }\n\n    const claimReward = async (blockNumber: BigNumber, miner: string, recipient: string, solution: BigNumber) => {\n        const { rewardUnits, reason, premium } = await verifyClaim(blockNumber, miner, recipient, solution)\n\n        if(reason === 0) {\n            const success = await runTrusteeTx(t => t.claimReward(blockNumber, miner, recipient, solution))\n            if(success) {\n                if(premium) {\n                    readPremiumChallenges()\n                } else {\n                    readBasicChallenges()\n                }\n            }\n            return true\n        }\n        claimAlert(blockNumber, reason, rewardUnits)\n        return false\n    }\n\n    async function handleSetCommision(commision: number) {\n        if (!records) {\n            throw new Error(\"Couldn't call records contract\")\n        }\n        setCommision(commision)\n        const success = await runRecordsTx(t => t.setCommision(commision))\n        if(success) {\n            setCommision(commision)\n        } else {\n            window.alert(\"Could not change commision\")\n        }\n    }\n\n    const owner = address === ownerAddress\n\n    useEffect(refresh, [timerCnt])\n\n    const BigLogo = () => <img width={384} alt=\"\" src=\"lumina-logo.png\"/>\n    const SmallLogo = () => <img width={24} alt=\"\" src=\"logo256.png\"/>\n    \n    const chainId = network.chainId\n    const networkName = chainId === 31337 ? \"HARDHAT\" : chainId === 80001 ? \"MUMBAI\": network.name.toUpperCase()\n\n    return <div>\n        <BigLogo/>\n        {err||eerr ? <h2 style={Colors.red}>ERROR: {err||eerr}</h2> : null}\n        {paused ? <h2 style={Colors.red}>The Trustee Smart Contract Is PAUSED<br/>Please Wait Until the Contract Owner Resumes Its Operations</h2> : null}\n        <p/>\n        <h2 style={{color: chainId === 137 ? \"black\" : \"red\"}}><span style={{fontWeight: \"bold\"}}>Network:</span> {networkName} ({chainId})</h2>\n        {demo ? <h2 style={{color: \"red\"}}>DEMO MODE</h2> : null}\n        <p title=\"The address of the Lumina coin ERC20 contract\"><span style={{fontWeight: \"bold\"}}>Contract:</span> <Address chainId={chainId}>{token ? token.address : \"\"}</Address></p>\n        <p><span style={{fontWeight: \"bold\"}}>Total Supply:</span> {formatBalance(totalSupply, tokenDecimals)} {symbol}</p>\n        <p><span style={{fontWeight: \"bold\"}}>Locked:</span> {formatBalance(totalLockedSupply, tokenDecimals)} {symbol}</p>\n        <p><span style={{fontWeight: \"bold\"}}>Mined:</span> {formatBalance(claimedTokens, tokenDecimals)} {symbol}</p>\n        <p><span style={{fontWeight: \"bold\"}}>Available:</span> {formatBalance(availableTokens, tokenDecimals)} {symbol}</p>\n\n        <SmallLogo/>\n        <h2>YOUR Wallet</h2>\n        <p title=\"The adddress of your wallet, currently connected to Metamask\"><span style={{fontWeight: \"bold\"}}>Address:</span> <Address chainId={chainId}>{address}</Address></p>\n        <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <tbody>\n            <tr>\n                <th style={{textAlign: \"right\"}}>Balance:</th>\n                <td style={{textAlign: \"left\"}}>\n                    {formatBalance(balance, tokenDecimals)} {symbol}\n                    &nbsp;{balance.gte(BigNumber.from(10).pow(tokenDecimals+5)) ? <button disabled={paused} onClick={(e) => handleLockBalance(e)}>Lock Balance</button> : null}\n                    &nbsp;{balance.gt(ZERO)?<button title=\"Register Balance\" disabled={paused} onClick={(e) => handleRegisterBalance(e)}><FontAwesomeIcon icon=\"share-square\"/></button>:null}\n                </td>\n            </tr>\n            {registeredBalances.blockNumbers.length > 0 ? <tr>\n                <th style={{textAlign: \"right\"}}>Registered:</th>\n                <td style={{textAlign: \"left\"}}>{formatBalance(registeredBalances.balances[0], tokenDecimals)} {symbol}</td>\n            </tr> : null}\n            {address ? <tr title={\"Portion of reward you are willing to share with any miner,\\nwho would claim mine a reward for the benefit of your wallet.\\n\\nAllowed values: 0% or within range [10%-90%].\\n\\nThe default value is 22% but you can change it at any time.\"}>\n                <th style={{textAlign: \"right\"}}>Commision:</th>\n                <td style={{textAlign: \"left\"}}><CommisionSetting commision={commision} setCommision={handleSetCommision}/></td>\n            </tr> : null}\n            {lockedBalance.gt(0) ? <tr>\n                <th style={{textAlign: \"right\"}}>Locked:</th>\n                <td style={{textAlign: \"left\"}}>{formatBalance(lockedBalance, tokenDecimals)} {symbol}</td>\n            </tr> : null}\n            {lockedAvailableBalance.gt(0) ? <tr>\n                <th style={{textAlign: \"right\"}}>Withdrawable:</th>\n                <td style={{textAlign: \"left\"}}>\n                    {formatBalance(lockedAvailableBalance, tokenDecimals)} {symbol}\n                    &nbsp;<button disabled={paused} onClick={(e) => handleWithdrawBalance(e)}>Withdraw</button>\n                </td>\n            </tr> : null}\n            </tbody>\n        </table>\n        <p/>\n        <SmallLogo/>\n        {demo ? <h2 style={{color: \"red\"}}>DEMO MODE</h2> : null}\n        <h2>Premium Challenges ({premiumChallenges.blockNumbers.length})</h2>\n        <div>\n            <button title=\"Refresh\" disabled={paused} onClick={(e) => handleReadChallenges(e)}><FontAwesomeIcon icon=\"sync-alt\"/></button>\n            <button title=\"Add More Challenges\" disabled={paused || challengesAllowance <= 0} onClick={(e) => handleAddChallenges(e)}><FontAwesomeIcon icon=\"plus\"/>{challengesAllowance}</button>\n        </div>\n        <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <tbody>\n            <tr>\n                <td>\n                    <Challenges challenges={premiumChallenges} group=\"premium\" address={address} registeredBalances={registeredBalances} demo={demo} verifyClaim={verifyClaim} claimReward={claimReward}/>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n        <p/>\n        <SmallLogo/>\n        {demo ? <h2 style={{color: \"red\"}}>DEMO MODE</h2> : null}\n        <h2>Regular Challenges ({basicChallenges.blockNumbers.length})</h2>\n        <div>\n            <button title=\"Refresh\" disabled={paused} onClick={(e) => handleReadChallenges(e)}><FontAwesomeIcon icon=\"sync-alt\"/></button>\n            <button title=\"Add More Challenges\" disabled={paused || challengesAllowance <= 0} onClick={(e) => handleAddChallenges(e)}><FontAwesomeIcon icon=\"plus\"/>{challengesAllowance}</button>\n        </div>\n        <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <tbody>\n            <tr>\n                <td>\n                    <Challenges challenges={basicChallenges} group=\"basic\" address={address} registeredBalances={registeredBalances} demo={demo} verifyClaim={verifyClaim} claimReward={claimReward}/>\n                </td>\n                </tr>\n            <tr>\n                <td><p/></td>\n            </tr>\n            </tbody>\n        </table>\n        <p/>\n        <SmallLogo/>\n        <p/>\n        <h2>Lumina Coin GoMiner</h2>\n        <p>Download GoMiner\n            &nbsp;\n            <a href=\"/downloads/gominer-linux-amd64\" download=\"gominer\">\n                Linux\n            </a>\n            &nbsp;&bull;&nbsp;\n            <a href=\"/downloads/gominer-linux-amd64\" download=\"gominer\">\n                Linux arm64\n            </a>\n            &nbsp;&bull;&nbsp;\n            <a href=\"/downloads/gominer.exe\" download=\"gominer.exe\">\n                Windows\n            </a>\n            &nbsp;&bull;&nbsp;\n            <a href=\"/downloads/gominer-macos-amd64.exe\" download=\"gominer\">\n                Mac OS\n            </a>\n            &nbsp;&bull;&nbsp;\n            <a href=\"/downloads/gominer-macos-arm64.exe\" download=\"gominer\">\n                Mac OS M1\n            </a>\n        </p>\n        <form>\n            <input type=\"text\" size={60} value={goMiner} placeholder=\"paste GoMiner solution here ...\" onChange={e => handleGoMinerChange(e)}/>\n            <button title=\"Clear\" disabled={!goMiner} onClick={(e) => handleClearClaim(e)}><FontAwesomeIcon icon=\"recycle\"/></button>\n            <button title=\"Verify\" disabled={!goMiner} onClick={(e) => handleVerifyClaim(e)}><FontAwesomeIcon icon=\"check\"/></button>\n            <button title=\"Claim\" style={{color: goMiner ? \"red\" : \"\"}} disabled={!goMiner} onClick={(e) => handleClaim(e)}><FontAwesomeIcon icon=\"trophy\"/></button>\n        </form>\n        {goMinerErr ? <h2 style={Colors.red}>ERROR: {goMinerErr}</h2> : null}\n\n        {registeredBalances.blockNumbers.length > 0 ? <>\n        <p/>\n        <SmallLogo/>\n        <h2>Registered Balances</h2>\n        <p/>\n        <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <thead>\n                <tr>\n                    <th>Balance</th>\n                    <th>Since Block</th>\n                </tr>\n            </thead>\n            <tbody>\n                {registeredBalances.balances\n                .slice(0, registeredBalances.blockNumbers.length)\n                .map((balance, i) => {\n                    const blockNumber = registeredBalances.blockNumbers[i]\n                    return <tr key={i}>\n                        <td>{formatBalance(balance, tokenDecimals)} {symbol}</td>\n                        <td>{blockNumber.toString()}</td>\n                    </tr>\n                })}\n            </tbody>\n        </table>\n        </> : balance.gte(BigNumber.from(10).pow(tokenDecimals-3)) ? <p>Please register your current balance to be eligible for additional benefits</p> : null}\n\n        <p/>\n        <SmallLogo/>\n        <h2>Contract Info</h2>\n        <p><span style={{fontWeight: \"bold\"}}>Token Contract Address:</span> <Address chainId={chainId}>{token ? token.address : \"\"}</Address></p>\n        <p><span style={{fontWeight: \"bold\"}}>Records Contract Address:</span> <Address chainId={chainId}>{records ? records.address : \"\"}</Address></p>\n        <p><span style={{fontWeight: \"bold\"}}>Trustee Contract Owner:</span> <Address chainId={chainId}>{ownerAddress}</Address></p>\n        <p><span style={{fontWeight: \"bold\"}}>Trustee Contract Address:</span> <Address chainId={chainId}>{trustee ? trustee.address : \"\"}</Address></p>\n        <p><span style={{fontWeight: \"bold\"}}>Admin Contract Address:</span> <Address chainId={chainId}>{admin ? admin.address : \"\"}</Address></p>\n        <p><span style={{fontWeight: \"bold\"}}>Locker Contract Address:</span> <Address chainId={chainId}>{locker ? locker.address : \"\"}</Address></p>\n        <p/>\n        {owner ? <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <thead>\n            <tr>\n                <th>Paused: {paused ? \"YES\" : \"NO\"}</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n                <td>\n                    <button disabled={paused} onClick={(e) => handlePause(e)}>Pause</button>\n                    <button disabled={!paused} onClick={(e) => handleUnpause(e)}>Unpause</button>\n                </td>\n            </tr>\n            </tbody>\n        </table> : null }\n        <SmallLogo/>\n        <h2>Debug</h2>\n        <p>Block Number: {blockNumber}</p>\n        <p>Refresh Cnt: {useEffectCnt}</p>\n   </div>\n}","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faWifi } from '@fortawesome/free-solid-svg-icons'\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons'\nimport { faHeartbeat } from '@fortawesome/free-solid-svg-icons'\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons'\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\nimport { faTerminal } from '@fortawesome/free-solid-svg-icons'\nimport { faChartLine } from '@fortawesome/free-solid-svg-icons'\nimport { faTachometerAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faInfo } from '@fortawesome/free-solid-svg-icons'\nimport { faMicrochip } from '@fortawesome/free-solid-svg-icons'\nimport { faTrophy } from '@fortawesome/free-solid-svg-icons'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport { faMinus } from '@fortawesome/free-solid-svg-icons'\nimport { faHandPaper } from '@fortawesome/free-solid-svg-icons'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\nimport { faBackspace } from '@fortawesome/free-solid-svg-icons'\nimport { faCalculator } from '@fortawesome/free-solid-svg-icons'\nimport { faPercent } from '@fortawesome/free-solid-svg-icons'\nimport { faSmile } from '@fortawesome/free-solid-svg-icons'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\nimport { faUserMinus } from '@fortawesome/free-solid-svg-icons'\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons'\nimport { faRandom } from '@fortawesome/free-solid-svg-icons'\nimport { faDiceD20 } from '@fortawesome/free-solid-svg-icons'\n\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faToggleOn } from '@fortawesome/free-solid-svg-icons'\nimport { faToggleOff } from '@fortawesome/free-solid-svg-icons'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faFilter } from '@fortawesome/free-solid-svg-icons'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { faSearchMinus } from '@fortawesome/free-solid-svg-icons'\nimport { faSearchPlus } from '@fortawesome/free-solid-svg-icons'\nimport { faArrowsAltH } from '@fortawesome/free-solid-svg-icons'\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\nimport { faPause } from '@fortawesome/free-solid-svg-icons'\nimport { faStop } from '@fortawesome/free-solid-svg-icons'\nimport { faShareSquare } from '@fortawesome/free-solid-svg-icons'\nimport { faEllipsisH } from '@fortawesome/free-solid-svg-icons'\nimport { faRunning } from '@fortawesome/free-solid-svg-icons'\nimport { faTh } from '@fortawesome/free-solid-svg-icons'\nimport { faGripVertical } from '@fortawesome/free-solid-svg-icons'\nimport { faGripHorizontal } from '@fortawesome/free-solid-svg-icons'\nimport { faBug } from '@fortawesome/free-solid-svg-icons'\nimport { faHistory } from '@fortawesome/free-solid-svg-icons'\nimport { faCodeBranch } from '@fortawesome/free-solid-svg-icons'\nimport { faGenderless } from '@fortawesome/free-solid-svg-icons'\nimport { faTable } from '@fortawesome/free-solid-svg-icons'\nimport { faListUl } from '@fortawesome/free-solid-svg-icons'\nimport { faBookMedical } from '@fortawesome/free-solid-svg-icons'\nimport { faPalette } from '@fortawesome/free-solid-svg-icons'\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\nimport { faGolfBall } from '@fortawesome/free-solid-svg-icons'\nimport { faBowlingBall } from '@fortawesome/free-solid-svg-icons'\nimport { faTrashRestore } from '@fortawesome/free-solid-svg-icons'\nimport { faCoins } from '@fortawesome/free-solid-svg-icons'\nimport { faCopy } from '@fortawesome/free-regular-svg-icons'\nimport { faRecycle } from '@fortawesome/free-solid-svg-icons'\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faWifi)\nlibrary.add(faHeart)\nlibrary.add(farHeart)\nlibrary.add(faHeartbeat)\nlibrary.add(faExclamationTriangle)\nlibrary.add(faThumbsUp)\nlibrary.add(faHome)\nlibrary.add(faTerminal)\nlibrary.add(faChartLine)\nlibrary.add(faTachometerAlt)\nlibrary.add(faInfo)\nlibrary.add(faMicrochip)\nlibrary.add(faTrophy)\nlibrary.add(faPlus)\nlibrary.add(faMinus)\nlibrary.add(faHandPaper)\nlibrary.add(faCheck)\nlibrary.add(faBackspace)\nlibrary.add(faCalculator)\nlibrary.add(faPercent)\nlibrary.add(faSmile)\nlibrary.add(faUser)\nlibrary.add(faUserMinus)\nlibrary.add(faUserPlus)\nlibrary.add(faRandom)\nlibrary.add(faDiceD20)\n\nlibrary.add(faSyncAlt)\nlibrary.add(faToggleOn)\nlibrary.add(faToggleOff)\nlibrary.add(faTrashAlt)\nlibrary.add(faFilter)\nlibrary.add(faSearch)\nlibrary.add(faSearchMinus)\nlibrary.add(faSearchPlus)\nlibrary.add(faArrowsAltH)\nlibrary.add(faPlay)\nlibrary.add(faPause)\nlibrary.add(faStop)\nlibrary.add(faShareSquare)\nlibrary.add(faEllipsisH)\nlibrary.add(faRunning)\nlibrary.add(faTh)\nlibrary.add(faGripVertical)\nlibrary.add(faGripHorizontal)\nlibrary.add(faBug)\nlibrary.add(faHistory)\nlibrary.add(faCodeBranch)\nlibrary.add(faGenderless)\nlibrary.add(faTable)\nlibrary.add(faListUl)\nlibrary.add(faBookMedical)\nlibrary.add(faPalette)\nlibrary.add(faCog)\nlibrary.add(faGolfBall)\nlibrary.add(faBowlingBall)\nlibrary.add(faTrashRestore)\nlibrary.add(faCoins)\nlibrary.add(faCopy)\nlibrary.add(faRecycle)\nlibrary.add(faExternalLinkAlt)\n","import React from 'react';\nimport './App.css';\nimport { Symfoni } from \"./hardhat/SymfoniContext\";\nimport { LuminaToken } from \"./components/LuminaToken\";\n\nimport './components/Icons'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Symfoni autoInit={true} showLoading={false} >\n          <LuminaToken/>\n        </Symfoni>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// import { Provider as AlertProvider } from 'react-alert'\n// const AlertTemplate: any = require('react-alert-template-basic')\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <AlertProvider template={AlertTemplate}> */}\n      <App />\n    {/* </AlertProvider> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"address\":\"Address_address__16qzz\",\"button\":\"Address_button__sf4GB\",\"buttonHover\":\"Address_buttonHover__2V1wV\",\"buttonDown\":\"Address_buttonDown__3jw_6\"};"],"sourceRoot":""}