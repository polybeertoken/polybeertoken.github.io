{"version":3,"sources":["hardhat/typechain/factories/Balances__factory.ts","hardhat/typechain/factories/Challenges__factory.ts","hardhat/typechain/factories/UtilsTest__factory.ts","hardhat/typechain/factories/RareToken__factory.ts","hardhat/typechain/factories/ERC20__factory.ts","hardhat/SymfoniContext.tsx","components/Solve.tsx","utils/bigNumber.tsx","components/Challenges.tsx","components/RareToken.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Balances__factory","signer","_abi","_bytecode","overrides","address","signerOrProvider","Contract","ContractFactory","inputs","name","outputs","internalType","type","stateMutability","Challenges__factory","UtilsTest__factory","RareToken__factory","symbol","initSupply","anonymous","indexed","ERC20__factory","name_","symbol_","emptyContract","instance","undefined","factory","ProviderContext","React","createContext","CurrentAddressContext","SignerContext","defaultSymfoniContext","currentHardhatProvider","init","Error","loading","messages","providers","SymfoniContext","BalancesContext","ChallengesContext","UtilsTestContext","RareTokenContext","ERC20Context","Symfoni","showLoading","autoInit","props","useState","initializeCounter","setInitializeCounter","setCurrentHardhatProvider","setLoading","setMessages","setSigner","provider","setProvider","currentAddress","setCurrentAddress","fallbackProvider","providerPriority","setProviderPriority","Balances","setBalances","Challenges","setChallenges","UtilsTest","setUtilsTest","RareToken","setRareToken","ERC20","setERC20","useEffect","length","console","debug","pop","getProvider","a","hardhatProviderName","_providerPriority","localStorage","getItem","sort","b","reduce","maybeProvider","providerIdentification","foundProvider","Promise","resolve","toLowerCase","getWeb3ModalProvider","web3provider","ethers","Web3Provider","JsonRpcProvider","url","getSigner","_provider","Wallet","fromMnemonic","connect","providerOptions","web3Modal","Web3Modal","cacheProvider","subscribed","finish","text","old","finishWithContracts","getBalances","_signer","getChallenges","getUtilsTest","getRareToken","getERC20","providerObject","getAddress","doAsync","constants","AddressZero","contractAddress","RareTokenDeployment","receipt","Provider","value","handleInitProvider","loadingComponent","map","msg","i","key","children","solve","blockNumber","blockHash","solvedDifficulty","status","one","BigNumber","from","random","isReady","rnd","randomWords","rnds","toString","nonce","difficultyN","targetN","shl","sub","blob","xor","stop","cnt","timeMs","setTimeout","batch","startTimeMs","Date","now","digest","keccak256","digestNum","lte","add","endTimeMs","formatBalance","balance","decimals","b1","div","pow","b2","mod","toLocaleString","isZero","padStart","ZERO","ONE","TEN","getDifficultyLabel","difficulty","getReasonLabel","reason","s","getWalletDifficultyDiscount","h1","h2","n","to","middle","mask","and","findLsb","gte","stopAll","runStatus","Object","keys","forEach","bnStr","rs","stopFn","challengesRunStatus","challenges","group","registeredBalances","verifyClaim","claimReward","challengesMap","blockNumbers","bn","toHexString","blockHashes","bal","balances","findBalance","generalDifficulty","addressDiscount","balanceDiscount","getBalanceDifficultyDiscount","adjustedDifficulty","claimsCnt","claimed","blockNumberHex","toChallengesMap","runStatusSnap","setRunStatusSnap","indexes","nexts","currentChallenges","setCurrentChallenges","mounted","nrn","nrs","cmt","targetDifficulty","solved","_refresh","handleStartMining","e","preventDefault","trials","solutionTrials","trials0","timeMs0","solution","handleStopMining","handleVerifyClaim","reward","rewardStr","window","alert","handleClaimReward","style","textAlign","hash","substr","claimable","rewardTokens","startsWith","getRewardTokens","gominer","Math","floor","disabled","onClick","color","token","useContext","TokenContext","err","setErr","setBlockNumber","setAddress","totalSupply","setTotalSupply","setBalance","ownerAddress","setOwnerAddress","lockDelay","setLockDelay","locked","lockedUntil","lockStatus","setLockStatus","paused","setPaused","walletAddress","startingBlockNumber","nextChallengeBlockNumber","minedChallenges","blocksPerChallenge","setStatus","useEffectCnt","setUseEffectCnt","txCnt","setTxCnt","setRegisteredBalances","initChallenges","basicChallenges","setBasicChallenges","premiumChallenges","setPremiumChallenges","goMiner","setGoMiner","ethereum","refresh","timer","t","_paused","getStatus","_status","owner","_ownerAddress","_locked","_lockedUntil","readRegisteredBalances","_registeredBalances","_address","_totalSupply","balanceOf","_balance","getBlockNumber","_blockNumber","refreshed","eq","readChallenges","_timeRefresh","runLockTx","txf","runTokenTx","f","tx","wait","confirmations","data","message","err0","substring","handleLock","g","lock","handleUnlock","unlock","handleTimeLock","delay","mul","timeLock","handlePause","pause","handleUnpause","unpause","readBasicChallenges","basicCha","readPremiumChallenges","premiumCha","handleAddChallenges","addChallenges","mineableChallenges","handleRegisterBalance","registerBalance","handleClearClaim","split","trim","handleClaim","handleGoMinerChange","target","premium","rewardsCnt","lockedUntilMs","toNumber","backgroundColor","alt","src","fontWeight","marginLeft","marginRight","filter","handleReadChallenges","href","download","onSubmit","size","onChange","day","getDate","slice","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","formatDate","parseInt","App","className","Boolean","location","hostname","match","AlertTemplate","require","ReactDOM","render","StrictMode","template","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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,UACdF,KAAM,GACNG,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEJ,OAAQ,GACRC,KAAM,QACNC,QAAS,GACTG,gBAAiB,aACjBD,KAAM,YAER,CACEJ,OAAQ,GACRC,KAAM,SACNC,QAAS,CACP,CACEC,aAAc,OACdF,KAAM,GACNG,KAAM,SAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEJ,OAAQ,GACRC,KAAM,sBACNC,QAAS,CACP,CACEC,aAAc,QACdF,KAAM,MACNG,KAAM,SAER,CACED,aAAc,UACdF,KAAM,UACNG,KAAM,WAER,CACED,aAAc,WACdF,KAAM,eACNG,KAAM,YAER,CACED,aAAc,YACdF,KAAM,cACNG,KAAM,aAER,CACED,aAAc,UACdF,KAAM,QACNG,KAAM,WAER,CACED,aAAc,WACdF,KAAM,YACNG,KAAM,YAER,CACED,aAAc,SACdF,KAAM,UACNG,KAAM,WAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEJ,OAAQ,GACRC,KAAM,wBACNC,QAAS,CACP,CACEC,aAAc,QACdF,KAAM,MACNG,KAAM,SAER,CACED,aAAc,UACdF,KAAM,UACNG,KAAM,WAER,CACED,aAAc,WACdF,KAAM,eACNG,KAAM,YAER,CACED,aAAc,YACdF,KAAM,cACNG,KAAM,aAER,CACED,aAAc,UACdF,KAAM,QACNG,KAAM,WAER,CACED,aAAc,WACdF,KAAM,YACNG,KAAM,YAER,CACED,aAAc,SACdF,KAAM,UACNG,KAAM,WAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEJ,OAAQ,GACRC,KAAM,yBACNC,QAAS,CACP,CACEC,aAAc,QACdF,KAAM,WACNG,KAAM,SAER,CACED,aAAc,QACdF,KAAM,MACNG,KAAM,SAER,CACED,aAAc,YACdF,KAAM,WACNG,KAAM,aAER,CACED,aAAc,WACdF,KAAM,eACNG,KAAM,aAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEJ,OAAQ,GACRC,KAAM,kBACNC,QAAS,GACTG,gBAAiB,aACjBD,KAAM,YAER,CACEJ,OAAQ,GACRC,KAAM,oBACNC,QAAS,GACTG,gBA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","file":"static/js/main.21a63a4a.chunk.js","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { Balances } from \"../Balances\";\n\nexport class Balances__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(overrides?: Overrides): Promise<Balances> {\n    return super.deploy(overrides || {}) as Promise<Balances>;\n  }\n  getDeployTransaction(overrides?: Overrides): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): Balances {\n    return super.attach(address) as Balances;\n  }\n  connect(signer: Signer): Balances__factory {\n    return super.connect(signer) as Balances__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Balances {\n    return new Contract(address, _abi, signerOrProvider) as Balances;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"BALANCE_RECORDS_CNT\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x6080604052348015600f57600080fd5b5060848061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633f5c9a2b14602d575b600080fd5b60336049565b6040805160ff9092168252519081900360200190f35b60048156fea2646970667358221220631350fccb2468a1d4ceb4ed08f6c1151d317fd0a23cba94322dee876ba16acf64736f6c63430007030033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { Challenges } from \"../Challenges\";\n\nexport class Challenges__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(overrides?: Overrides): Promise<Challenges> {\n    return super.deploy(overrides || {}) as Promise<Challenges>;\n  }\n  getDeployTransaction(overrides?: Overrides): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): Challenges {\n    return super.attach(address) as Challenges;\n  }\n  connect(signer: Signer): Challenges__factory {\n    return super.connect(signer) as Challenges__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Challenges {\n    return new Contract(address, _abi, signerOrProvider) as Challenges;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_DIFFICULTY_STEP\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_NULL\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_CNT\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MIN_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b5060e28061001f6000396000f3fe6080604052348015600f57600080fd5b5060043610605a5760003560e01c80630bf4330914605f578063479e92c814607b578063504b36621460815780637fb01232146087578063a215776714608d578063c28bd11c146087575b600080fd5b60656093565b6040805160ff9092168252519081900360200190f35b60656098565b6065609d565b606560a2565b606560a7565b60da81565b601481565b606481565b600281565b60ff8156fea2646970667358221220bb38098fd06732860517c9dc4dda87d2fdc67e6d81e53f2a7fd6d575182352cb64736f6c63430007030033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { UtilsTest } from \"../UtilsTest\";\n\nexport class UtilsTest__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(overrides?: Overrides): Promise<UtilsTest> {\n    return super.deploy(overrides || {}) as Promise<UtilsTest>;\n  }\n  getDeployTransaction(overrides?: Overrides): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): UtilsTest {\n    return super.attach(address) as UtilsTest;\n  }\n  connect(signer: Signer): UtilsTest__factory {\n    return super.connect(signer) as UtilsTest__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): UtilsTest {\n    return new Contract(address, _abi, signerOrProvider) as UtilsTest;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"n\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"findHsb\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"n\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"findLsb\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b50610183806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80636413c2781461003b578063eb19394a1461006f575b600080fd5b6100586004803603602081101561005157600080fd5b503561008c565b6040805161ffff9092168252519081900360200190f35b6100586004803603602081101561008557600080fd5b503561009f565b6000610097826100aa565b90505b919050565b600061009782610106565b6000816100b95750600061009a565b60016101005b8061ffff168261ffff1610156100ff57617fff82820160011c16600019600282900a018581166100f4578160010193506100f8565b8192505b50506100bf565b5092915050565b6000806101005b8061ffff168261ffff1610156100ff57617fff82820160011c16600019600282900a0180861161013f57819250610146565b8160010193505b505061010d56fea2646970667358221220e68a601cd91e8dc00ef0fce683e98c352800957c849d6da35e4e8980ccbfea4864736f6c63430007030033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer, BigNumberish } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { RareToken } from \"../RareToken\";\n\nexport class RareToken__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    name: string,\n    symbol: string,\n    initSupply: BigNumberish,\n    overrides?: Overrides\n  ): Promise<RareToken> {\n    return super.deploy(\n      name,\n      symbol,\n      initSupply,\n      overrides || {}\n    ) as Promise<RareToken>;\n  }\n  getDeployTransaction(\n    name: string,\n    symbol: string,\n    initSupply: BigNumberish,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(\n      name,\n      symbol,\n      initSupply,\n      overrides || {}\n    );\n  }\n  attach(address: string): RareToken {\n    return super.attach(address) as RareToken;\n  }\n  connect(signer: Signer): RareToken__factory {\n    return super.connect(signer) as RareToken__factory;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): RareToken {\n    return new Contract(address, _abi, signerOrProvider) as RareToken;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"name\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"symbol\",\n        type: \"string\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"initSupply\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"challenge\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"premium\",\n        type: \"bool\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"rewardsCnt\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"tokens\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"AddChallenge\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"miner\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"solution\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"claimNo\",\n        type: \"uint16\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"generalDifficulty\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"adjustedDifficulty\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint16\",\n        name: \"solvedDifficulty\",\n        type: \"uint16\",\n      },\n    ],\n    name: \"Claim\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [],\n    name: \"Lock\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Paused\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"lockedUntil\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"TimeLock\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [],\n    name: \"Unlock\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Unpaused\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BALANCE_RECORDS_CNT\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BLOCKS_PER_CHALLENGE\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_DIFFICULTY_STEP\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"CHALLENGE_NULL\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"LUCKY_NUMBER\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAXIMUM_DELAY\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_CNT\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MINIMUM_DELAY\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MIN_CHALLENGE_DIFFICULTY\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint8\",\n        name: \"limit\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"addChallenges\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"solution\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"claimReward\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"reward\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"reason\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"premium\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"claimNo\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getStatus\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"address\",\n        name: \"walletAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"startingBlockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"nextChallengeBlockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"minedChallenges\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"blocksPerChallenge\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"lock\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"lockStatus\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"locked\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"lockedUntil\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"minedChallenges\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"nextChallengeBlockNumber\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"pause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"readBasicChallenges\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"cnt\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint8[]\",\n        name: \"indexes\",\n        type: \"uint8[]\",\n      },\n      {\n        internalType: \"uint64[]\",\n        name: \"blockNumbers\",\n        type: \"uint64[]\",\n      },\n      {\n        internalType: \"bytes32[]\",\n        name: \"blockHashes\",\n        type: \"bytes32[]\",\n      },\n      {\n        internalType: \"uint8[]\",\n        name: \"nexts\",\n        type: \"uint8[]\",\n      },\n      {\n        internalType: \"uint16[]\",\n        name: \"claimsCnt\",\n        type: \"uint16[]\",\n      },\n      {\n        internalType: \"bool[]\",\n        name: \"claimed\",\n        type: \"bool[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"readPremiumChallenges\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"cnt\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint8[]\",\n        name: \"indexes\",\n        type: \"uint8[]\",\n      },\n      {\n        internalType: \"uint64[]\",\n        name: \"blockNumbers\",\n        type: \"uint64[]\",\n      },\n      {\n        internalType: \"bytes32[]\",\n        name: \"blockHashes\",\n        type: \"bytes32[]\",\n      },\n      {\n        internalType: \"uint8[]\",\n        name: \"nexts\",\n        type: \"uint8[]\",\n      },\n      {\n        internalType: \"uint16[]\",\n        name: \"claimsCnt\",\n        type: \"uint16[]\",\n      },\n      {\n        internalType: \"bool[]\",\n        name: \"claimed\",\n        type: \"bool[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"readRegisteredBalances\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"decimals\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"cnt\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"balances\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"uint64[]\",\n        name: \"blockNumbers\",\n        type: \"uint64[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"registerBalance\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"startingBlockNumber\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"delay_\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"timeLock\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"unlock\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"unpause\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"solution\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"verifyClaim\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"reward\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"reason\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"premium\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"rewardsCnt\",\n        type: \"uint16\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"generalDifficulty\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"adjustedDifficulty\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint16\",\n        name: \"solvedDifficulty\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"blockNumber\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"solution\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"verifySolution\",\n    outputs: [\n      {\n        internalType: \"uint16\",\n        name: \"solvedDifficulty\",\n        type: \"uint16\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b5060405162004b5a38038062004b5a833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060405260209081015185519093508592508491620001bd9160039185019062000775565b508051620001d390600490602084019062000775565b50506005805461ff001960ff19909116601217169055506000620001f662000308565b6005805462010000600160b01b031916620100006001600160a01b03841690810291909117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506005805460ff60b01b1916905560006006556200026a6200030c565b62000287336200027962000448565b60ff16600a0a830262000451565b62000293600962000560565b50620002a060d262000560565b5060c8436001600160401b031611620002bb576000620002c0565b60c843035b60088054600160401b600160801b03196001600160401b03199091166001600160401b0393841617908116921668010000000000000000029190911790555062000811915050565b3390565b6200031662000308565b6001600160a01b03166200032962000640565b6001600160a01b03161462000385576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600554600160b01b900460ff1615620003e5576040805162461bcd60e51b815260206004820152601f60248201527f74686520636f6e7472616374206973206c6f636b6564206d616e75616c6c7900604482015290519081900360640190fd5b600654620003f262000655565b1015620004315760405162461bcd60e51b815260040180806020018281038252602181526020018062004b396021913960400191505060405180910390fd5b620004466200065960201b62001e8a1760201c565b565b60055460ff1690565b6001600160a01b038216620004ad576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b620004bb6000838362000700565b620004d7816002546200070560201b62001f2c1790919060201c565b6002556001600160a01b038216600090815260208181526040909120546200050a91839062001f2c62000705821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000805b606460ff82161015620006195760008360ff8316606481106200058357fe5b60006002919091029190910190815560018082018054600162ffff0160401b0319166aff00000000000000000000179055909150606490830160ff1610620005cd5760ff620005d2565b816001015b6001918201805460ff60581b19166b01000000000000000000000060ff938416021760ff60401b191668010000000000000000928516929092029190911790550162000564565b5060c8909101805463ff0000001962ffffff1990911662ff0000171663ff00000017905590565b6005546201000090046001600160a01b031690565b4290565b6200066362000767565b15620006a9576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6005805461ff0019166101001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258620006e362000308565b604080516001600160a01b039092168252519081900360200190a1565b505050565b60008282018381101562000760576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600554610100900460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620007b857805160ff1916838001178555620007e8565b82800160010185558215620007e8579182015b82811115620007e8578251825591602001919060010190620007cb565b50620007f6929150620007fa565b5090565b5b80821115620007f65760008155600101620007fb565b61431880620008216000396000f3fe608060405234801561001057600080fd5b50600436106102295760003560e01c806370872aa511610131578063a9059cbb116100b3578063a9059cbb146107ff578063b1b43ae51461082b578063c216b59314610833578063c28bd11c14610787578063c2cf1cdc1461083b578063c3b1678114610843578063dd62ed3e146108f8578063f2fde38b14610926578063f83d08ba1461094c578063f883fcaa14610954578063fdc560101461095c57610229565b806370872aa51461074957806370a0823114610751578063715018a6146107775780637d645fab1461077f5780637fb01232146107875780638456cb591461078f5780638da5cb5b1461079757806395d89b41146107bb578063a2157767146107c3578063a457c2d7146107cb578063a69df4b5146107f757610229565b8063345af977116101ba578063345af977146105a457806339509351146105c45780633e89340f146105f05780633f4ba83a146106135780633f5c9a2b1461061d578063479e92c8146106255780634afbb5011461062d5780634e69d560146106a0578063504b3662146106f657806351606126146106fe5780635c975abb1461074157610229565b806306fdde031461022e578063095ea7b3146102ab5780630aa343ed146102eb5780630bf433091461030f57806318160ddd1461032d5780632299e24414610347578063230b95b21461039f57806323b872dd1461055e578063262217b514610594578063313ce5671461059c575b600080fd5b610236610979565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610270578181015183820152602001610258565b50505050905090810190601f16801561029d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102d7600480360360408110156102c157600080fd5b506001600160a01b038135169060200135610a0f565b604080519115158252519081900360200190f35b6102f3610a2c565b604080516001600160401b039092168252519081900360200190f35b610317610a42565b6040805160ff9092168252519081900360200190f35b610335610a47565b60408051918252519081900360200190f35b6103736004803603604081101561035d57600080fd5b506001600160401b038135169060200135610a4d565b6040805194855260ff90931660208501529015158383015261ffff166060830152519081900360800190f35b6103a7610df2565b604051808860ff16815260200180602001806020018060200180602001806020018060200187810387528d818151815260200191508051906020019060200280838360005b838110156104045781810151838201526020016103ec565b5050505090500187810386528c818151815260200191508051906020019060200280838360005b8381101561044357818101518382015260200161042b565b5050505090500187810385528b818151815260200191508051906020019060200280838360005b8381101561048257818101518382015260200161046a565b5050505090500187810384528a818151815260200191508051906020019060200280838360005b838110156104c15781810151838201526020016104a9565b50505050905001878103835289818151815260200191508051906020019060200280838360005b838110156105005781810151838201526020016104e8565b50505050905001878103825288818151815260200191508051906020019060200280838360005b8381101561053f578181015183820152602001610527565b505050509050019d505050505050505050505050505060405180910390f35b6102d76004803603606081101561057457600080fd5b506001600160a01b03813581169160208101359091169060400135610e23565b6103a7610eaa565b610317610ec5565b610317600480360360208110156105ba57600080fd5b503560ff16610ece565b6102d7600480360360408110156105da57600080fd5b506001600160a01b0381351690602001356111bd565b6105f861120b565b60408051921515835260208301919091528051918290030190f35b61061b61123e565b005b61031761133f565b610317611344565b6106596004803603604081101561064357600080fd5b506001600160401b038135169060200135611349565b6040805197885260ff96871660208901529415158786015261ffff9384166060880152918516608087015290931660a08501529190911660c0830152519081900360e00190f35b6106a86114fa565b604080516001600160401b0397881681526001600160a01b039096166020870152938616858501529185166060850152909316608083015260ff90921660a082015290519081900360c00190f35b61031761164d565b61072a6004803603604081101561071457600080fd5b506001600160401b038135169060200135611652565b6040805161ffff9092168252519081900360200190f35b6102d7611711565b6102f361171f565b6103356004803603602081101561076757600080fd5b50356001600160a01b031661172e565b61061b611749565b6103356117e6565b6103176117ee565b61061b6117f3565b61079f6118f2565b604080516001600160a01b039092168252519081900360200190f35b610236611907565b610317611968565b6102d7600480360360408110156107e157600080fd5b506001600160a01b03813516906020013561196d565b61061b6119d5565b6102d76004803603604081101561081557600080fd5b506001600160a01b038135169060200135611a6f565b610335611a83565b6102f3611a89565b61061b611a9f565b61084b611b05565b604051808560ff1681526020018460ff1681526020018060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156108a1578181015183820152602001610889565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156108e05781810151838201526020016108c8565b50505050905001965050505050505060405180910390f35b6103356004803603604081101561090e57600080fd5b506001600160a01b0381358116916020013516611b2c565b61061b6004803603602081101561093c57600080fd5b50356001600160a01b0316611b57565b61061b611c68565b610317611d08565b61061b6004803603602081101561097257600080fd5b5035611d0d565b60038054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a055780601f106109da57610100808354040283529160200191610a05565b820191906000526020600020905b8154815290600101906020018083116109e857829003601f168201915b5050505050905090565b6000610a23610a1c611f8b565b8484611f8f565b50600192915050565b600854600160801b90046001600160401b031681565b60da81565b60025490565b600080600080610a5b611711565b15610aa0576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b600080600080610ab08a8a611349565b959d50939b50919950965094509250905060ff871615610b17576040805162461bcd60e51b815260206004820152601d60248201527f54686520636c61696d20766572696669636174696f6e206661696c6564000000604482015290519081900360640190fd5b610b21338961207b565b6001600160401b038a16600081815261019b60209081526040918290205482518d815261ffff91821692810183905260ff8089168286015287166060820152908516608082015291519097503392917ff38dd55b32c67d4e700987be62f86eecacf76b2511598178ca84f82d8133e909919081900360a00190a36101f48561ffff1610610bee576040805162461bcd60e51b8152602060048201526016602482015275636c61696d20636f756e7420697320746f6f2062696760501b604482015290519081900360640190fd5b8361ffff168561ffff1610610c43576040805162461bcd60e51b8152602060048201526016602482015275636c61696d20636f756e7420697320746f6f2062696760501b604482015290519081900360640190fd5b6001600160401b038a16600090815261019b60209081526040808320805461ffff191660018a810161ffff81169290921790925561019c84528285203386529093529220805460ff191690921790915588610cdd576040805162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081c995dd85c9908185b5bdd5b9d605a1b604482015290519081900360640190fd5b610ce5610ec5565b60ff16600a0a6107d002891115610d43576040805162461bcd60e51b815260206004820152601d60248201527f496e76616c69642072657761726420616d6f756e7420746f6f20626967000000604482015290519081900360640190fd5b8461ffff168161ffff1610610de457600087610d60576009610d63565b60d25b9050600080610d72838f61216b565b909250905060ff8083161415610dcb576040805162461bcd60e51b8152602060048201526019602482015278436f7272757074206368616c6c656e6765207265636f72647360381b604482015290519081900360640190fd5b610dd5838361236a565b610ddf6001610ece565b505050505b505050505092959194509250565b6000606080606080606080610e0d60d261019b61019c612618565b959d949c50929a50909850965094509092509050565b6000610e308484846129e9565b610ea084610e3c611f8b565b610e9b8560405180606001604052806028815260200161406f602891396001600160a01b038a16600090815260016020526040812090610e7a611f8b565b6001600160a01b031681526020810191909152604001600020549190612a58565b611f8f565b5060019392505050565b6000606080606080606080610e0d600961019b61019c612618565b60055460ff1690565b6000610ed8611711565b15610f1d576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b60d154606460ff909116108015610f3c575061019a54606460ff909116105b610f48575060006111b8565b436000610f53612aef565b90508360ff81166001600160401b0383161015610f6d5750805b600080610f78612bcf565b90508385036001600160401b0316816001600160401b03161015610f9b57508284035b600091505b8260ff168260ff16108015610fc65750846001600160401b0316816001600160401b0316105b8015610fd9575060d154606460ff909116105b8015610fed575061019a54606460ff909116105b15611159576001600160401b0360ff8316820116408061104f576040805162461bcd60e51b815260206004820152601860248201527726b4b9b9b4b73390313637b1b5b430b9b410373ab6b132b960411b604482015290519081900360640190fd5b60008061105b83612c4a565b9092509050600860048460001a901c60ff1614156110e157604080518481526001602082015261ffff808516828401528316606082015290516001600160401b038a16917f0e4e12fe55cd44d33ec230069e34eabdfb41271115e51fde406deaef771cce18919081900360800190a26110db60d28660ff16860185612cea565b5061114b565b604080518481526000602082015261ffff808516828401528316606082015290516001600160401b038a16917f0e4e12fe55cd44d33ec230069e34eabdfb41271115e51fde406deaef771cce18919081900360800190a261114960098660ff16860185612cea565b505b505060019092019150610fa0565b5060088054600160801b6001600160401b03600160401b808404821660ff8716908101831690910267ffffffffffffffff60401b19909416939093178281048216909301160267ffffffffffffffff60801b1990911617905593505050505b919050565b6000610a236111ca611f8b565b84610e9b85600160006111db611f8b565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490611f2c565b600080611216612f22565b60065411611225576000611229565b6006545b600554600160b01b900460ff16939092509050565b611246611f8b565b6001600160a01b03166112576118f2565b6001600160a01b0316146112a0576040805162461bcd60e51b81526020600482018190526024820152600080516020614097833981519152604482015290519081900360640190fd5b600554600160b01b900460ff16156112ed576040805162461bcd60e51b815260206004820152601f6024820152600080516020614188833981519152604482015290519081900360640190fd5b6006546112f8612f22565b10156113355760405162461bcd60e51b81526004018080602001828103825260218152602001806142c26021913960400191505060405180910390fd5b61133d612f26565b565b600481565b601481565b600080600080600080600061135c611711565b156113a1576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6113a9613d7f565b6113b28a612faa565b6060830151919850955090915061140b576040805162461bcd60e51b8152602060048201526018602482015277125b9d985b1a590818da185b1b195b99d9481c9958dbdc9960421b604482015290519081900360640190fd5b61141a8a858360000151613103565b92506114268a8a611652565b91508260ff168261ffff16106114e4576001600160401b038a16600090815261019c6020908152604080832033845290915290205460ff16156114705760009750600396506114df565b600061147f8260000151612c4a565b6001600160401b038d16600090815261019b6020526040902054919750915061ffff9081169087168110156114d35760006114b8610ec5565b90508060ff16600a0a8361ffff16029a5060009950506114dc565b60009950600498505b50505b6114ed565b60009750600296505b5092959891949750929550565b600080600080600080439550339450306001600160a01b03166370872aa56040518163ffffffff1660e01b815260040160206040518083038186803b15801561154257600080fd5b505afa158015611556573d6000803e3d6000fd5b505050506040513d602081101561156c57600080fd5b50516040805163c216b59360e01b81529051919550309163c216b59391600480820192602092909190829003018186803b1580156115a957600080fd5b505afa1580156115bd573d6000803e3d6000fd5b505050506040513d60208110156115d357600080fd5b505160408051630aa343ed60e01b815290519194503091630aa343ed91600480820192602092909190829003018186803b15801561161057600080fd5b505afa158015611624573d6000803e3d6000fd5b505050506040513d602081101561163a57600080fd5b5051959694959394929392600292509050565b606481565b600061165c611711565b156116a1576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6116a9613d7f565b6000806116b586612faa565b8251602080850151604080516001600160401b039092169093183318818301528083018b90528251808203840181526060909101909252815191012092955090935091506117028161321c565b61010003979650505050505050565b600554610100900460ff1690565b6008546001600160401b031681565b6001600160a01b031660009081526020819052604090205490565b600554600160b01b900460ff1615611796576040805162461bcd60e51b815260206004820152601f6024820152600080516020614188833981519152604482015290519081900360640190fd5b6006546117a1612f22565b10156117de5760405162461bcd60e51b81526004018080602001828103825260218152602001806142c26021913960400191505060405180910390fd5b61133d61326a565b6301e1338081565b600281565b6117fb611f8b565b6001600160a01b031661180c6118f2565b6001600160a01b031614611855576040805162461bcd60e51b81526020600482018190526024820152600080516020614097833981519152604482015290519081900360640190fd5b600554600160b01b900460ff16156118a2576040805162461bcd60e51b815260206004820152601f6024820152600080516020614188833981519152604482015290519081900360640190fd5b6006546118ad612f22565b10156118ea5760405162461bcd60e51b81526004018080602001828103825260218152602001806142c26021913960400191505060405180910390fd5b61133d611e8a565b6005546201000090046001600160a01b031690565b60048054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a055780601f106109da57610100808354040283529160200191610a05565b60ff81565b6000610a2361197a611f8b565b84610e9b8560405180606001604052806025815260200161424760259139600160006119a4611f8b565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190612a58565b6119dd611f8b565b6001600160a01b03166119ee6118f2565b6001600160a01b031614611a37576040805162461bcd60e51b81526020600482018190526024820152600080516020614097833981519152604482015290519081900360640190fd5b6005805460ff60b01b191690556040517f70e3fffea7bbb557facdee48ed7f7af5179030adef9ad0c876df039a718f359e90600090a1565b6000610a23611a7c611f8b565b84846129e9565b610e1081565b600854600160401b90046001600160401b031681565b611aa7611711565b15611aec576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6000611af73361172e565b9050611b028161331e565b50565b600080606080611b13610ec5565b9350611b1e84613412565b935093509350935090919293565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b611b5f611f8b565b6001600160a01b0316611b706118f2565b6001600160a01b031614611bb9576040805162461bcd60e51b81526020600482018190526024820152600080516020614097833981519152604482015290519081900360640190fd5b6001600160a01b038116611bfe5760405162461bcd60e51b8152600401808060200182810382526026815260200180613ea16026913960400191505060405180910390fd5b6005546040516001600160a01b038084169262010000900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b611c70611f8b565b6001600160a01b0316611c816118f2565b6001600160a01b031614611cca576040805162461bcd60e51b81526020600482018190526024820152600080516020614097833981519152604482015290519081900360640190fd5b6005805460ff60b01b1916600160b01b1790556040517f46620e39f4e119bf05f13544f8ef38338fc06c17f6b731c7f95bee356572db9690600090a1565b600881565b611d15611f8b565b6001600160a01b0316611d266118f2565b6001600160a01b031614611d6f576040805162461bcd60e51b81526020600482018190526024820152600080516020614097833981519152604482015290519081900360640190fd5b610e10811015611db05760405162461bcd60e51b81526004018080602001828103825260268152602001806141626026913960400191505060405180910390fd5b6301e13380811115611df35760405162461bcd60e51b815260040180806020018281038252602a815260200180613fa8602a913960400191505060405180910390fd5b6000611e0782611e01612f22565b90611f2c565b9050610e1060065401811015611e4e5760405162461bcd60e51b81526004018080602001828103825260418152602001806140dc6041913960600191505060405180910390fd5b60068190556040805182815290517f53d55585ca44db1c32907f92b5a0ce2c7243d519c4fd1ad89039318dc87880ff9181900360200190a15050565b611e92611711565b15611ed7576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6005805461ff0019166101001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611f0f611f8b565b604080516001600160a01b039092168252519081900360200190a1565b600082820183811015611f84576040805162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b038316611fd45760405162461bcd60e51b815260040180806020018281038252602481526020018061413e6024913960400191505060405180910390fd5b6001600160a01b0382166120195760405162461bcd60e51b8152600401808060200182810382526022815260200180613ec76022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0382166120d6576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6120e260008383612a53565b6002546120ef9082611f2c565b6002556001600160a01b0382166000908152602081905260409020546121159082611f2c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60c8820154600090819060ff1660648111156121b85760405162461bcd60e51b81526004018080602001828103825260428152602001806141a86042913960600191505060405180910390fd5b60c885015462010000900460ff16925060009150815b8160ff168160ff16101561231f576121e4613d7f565b6121ee87866135d1565b6040805160c081018252825481526001909201546001600160401b038082166020850181905260ff600160401b8404811694860194909452600160481b8304841615156060860152600160501b830484166080860152600160581b90920490921660a08401529192508716141561231157806040015160ff168560ff16146122a75760405162461bcd60e51b815260040180806020018281038252602981526020018061426c6029913960400191505060405180910390fd5b6002600019838503010260da03935060ff84166014118015906122ce575060da60ff851611155b6123095760405162461bcd60e51b815260040180806020018281038252603b8152602001806141ea603b913960400191505060405180910390fd5b505050612363565b60a0015193506001016121ce565b5060ff838116146123615760405162461bcd60e51b815260040180806020018281038252602981526020018061426c6029913960400191505060405180910390fd5b505b9250929050565b61237382613681565b156123af5760405162461bcd60e51b8152600401808060200182810382526022815260200180613f606022913960400191505060405180910390fd5b60006123bb83836135d1565b6001810154909150600160481b900460ff166124085760405162461bcd60e51b815260040180806020018281038252602181526020018061411d6021913960400191505060405180910390fd5b6001810154600160501b900460ff9081161461246357600061243b8483600101600a9054906101000a900460ff166135d1565b6001838101549101805460ff60581b1916600160581b9283900460ff16909202919091179055505b6001810154600160581b900460ff908116146124be5760006124968483600101600b9054906101000a900460ff166135d1565b6001838101549101805460ff60501b1916600160501b9283900460ff16909202919091179055505b60c883015460ff838116620100009092041614156124fe57600181015460c88401805462ff00001916600160581b90920460ff1662010000029190911790555b60c883015460ff838116630100000090920416141561254157600181015460c88401805463ff0000001916600160501b90920460ff166301000000029190911790555b60c8830154610100900460ff16606481108061255f575060ff818116145b6125b0576040805162461bcd60e51b815260206004820152601d60248201527f4368616c6c656e6765733a20636f72727570742066726565496e646578000000604482015290519081900360640190fd5b600082556001909101805460ff60501b6affff00ffffffffffffffff199091161760ff60581b1916600160581b60ff9384160217905560c892909201805460ff1961ff0019909116610100938516939093029290921791821691831660001901909216179055565b60c883015460ff1660608080808080866001600160401b038111801561263d57600080fd5b50604051908082528060200260200182016040528015612667578160200160208202803683370190505b5095508660ff166001600160401b038111801561268357600080fd5b506040519080825280602002602001820160405280156126ad578160200160208202803683370190505b5094508660ff166001600160401b03811180156126c957600080fd5b506040519080825280602002602001820160405280156126f3578160200160208202803683370190505b5093508660ff166001600160401b038111801561270f57600080fd5b50604051908082528060200260200182016040528015612739578160200160208202803683370190505b5092508660ff166001600160401b038111801561275557600080fd5b5060405190808252806020026020018201604052801561277f578160200160208202803683370190505b5091508660ff166001600160401b038111801561279b57600080fd5b506040519080825280602002602001820160405280156127c5578160200160208202803683370190505b5060c88b015490915062010000900460ff1660005b8860ff168160ff161015612999576127f0613d7f565b6127fa8d846135d1565b6040805160c081018252825481526001909201546001600160401b038116602084015260ff600160401b82048116928401839052600160481b8204811615156060850152600160501b820481166080850152600160581b909104811660a08401528b5192935090918b91851690811061286f57fe5b602002602001019060ff16908160ff16815250508060200151888360ff168151811061289757fe5b60200260200101906001600160401b031690816001600160401b0316815250508060000151878360ff16815181106128cb57fe5b6020026020010181815250508060a00151868360ff16815181106128eb57fe5b60ff928316602091820292909201810191909152828101516001600160401b03166000908152908e90526040902054865161ffff90911691879190851690811061293157fe5b61ffff909216602092830291909101820152818101516001600160401b031660009081528c825260408082203383529092522054845160ff91821691869190851690811061297b57fe5b9115156020928302919091019091015260a0015191506001016127da565b5060ff818116146129db5760405162461bcd60e51b815260040180806020018281038252602b815260200180614044602b913960400191505060405180910390fd5b509397509397509397909450565b6129f1611711565b15612a36576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b612a4183838361368c565b612a5383612a4e8561172e565b6137e7565b505050565b60008184841115612ae75760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612aac578181015183820152602001612a94565b50505050905090810190601f168015612ad95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60085460009043906001600160401b039081169082161015612b4f576040805162461bcd60e51b815260206004820152601460248201527321b7b9393ab83a10313637b1b590373ab6b132b960611b604482015290519081900360640190fd5b60085460026001600160401b03808316840360010181169190910491600160801b900481169082161015612bb45760405162461bcd60e51b81526004018080602001828103825260228152602001806142256022913960400191505060405180910390fd5b600854600160801b90046001600160401b0316900392915050565b60004360646001600160401b038216118015612c0357506008546001600160401b0360631983018116600160401b90920416105b15612c32576008805467ffffffffffffffff60401b1916600160401b60631984016001600160401b0316021790555b5050600854600160401b90046001600160401b031690565b600080826208888860ec82901c1415612c6d576101f46107d09250925050612ce5565b61888860f082901c1415612c8a5760c86101f49250925050612ce5565b61088860f482901c1415612ca5576064809250925050612ce5565b608860f882901c1415612cc057603260149250925050612ce5565b600860fc82901c1415612cdb57601460059250925050612ce5565b600a600192509250505b915091565b6000612cf584613826565b15612d315760405162461bcd60e51b81526004018080602001828103825260218152602001806140236021913960400191505060405180910390fd5b60c8840154610100900460ff1660648110612d93576040805162461bcd60e51b815260206004820152601d60248201527f4368616c6c656e6765733a20636f72727570742066726565496e646578000000604482015290519081900360640190fd5b6000612d9f86836135d1565b6001810154909150600160481b900460ff1615612ded5760405162461bcd60e51b815260040180806020018281038252602e815260200180613ff5602e913960400191505060405180910390fd5b60018101805460c88801805461ff001916610100600160581b90930460ff908116939093021781558684558254600160481b67ffffffffffffffff199091166001600160401b038a161760ff60481b191617808455815460ff60581b60ff60501b199092166301000000918290048516600160501b021760ff60581b1916919091179093555491909104811614612eb6576000612e9b878860c80160039054906101000a900460ff166135d1565b600101805460ff60581b1916600160581b60ff861602179055505b60c88601805460ff80851663010000000263ff0000001990921691909117918290556201000090910481161415612f005760c88601805462ff000019166201000060ff8516021790555b505060c8909301805460ff8082166001011660ff199091161790555090919050565b4290565b612f2e611711565b612f76576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6005805461ff00191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611f0f611f8b565b612fb2613d7f565b60008080612fc160098661216b565b9250905060ff8082161415612fe457612fdb60d28661216b565b60019450925090505b60ff81811614156130265760405162461bcd60e51b8152600401808060200182810382526049815260200180613ee96049913960600191505060405180910390fd5b61303e83613035576009613038565b60d25b826135d1565b6040805160c081018252825481526001909201546001600160401b038082166020850181905260ff600160401b8404811694860194909452600160481b8304841615156060860152600160501b830484166080860152600160581b90920490921660a08401529195508616146130fb576040805162461bcd60e51b815260206004820181905260248201527f436f727275707420626c6f636b4e756d62657220696e206368616c6c656e6765604482015290519081900360640190fd5b509193909250565b60008061310f85613836565b9050600061311b610ec5565b9050600061312b853385856139db565b905060006131398484613a89565b905060ff8716601411801590613153575060da60ff881611155b61318e5760405162461bcd60e51b815260040180806020018281038252602d815260200180614295602d913960400191505060405180910390fd5b81810160ff80821690891610156131a65760006131aa565b8088035b9550601460ff871610156131bd57601495505b60ff86166014118015906131d5575060da60ff871611155b6132105760405162461bcd60e51b815260040180806020018281038252602e815260200180613f32602e913960400191505060405180910390fd5b50505050509392505050565b6000806101005b8061ffff168261ffff16101561326357617fff82820160011c16600019600282900a018086116132555781925061325c565b8160010193505b5050613223565b5092915050565b613272611f8b565b6001600160a01b03166132836118f2565b6001600160a01b0316146132cc576040805162461bcd60e51b81526020600482018190526024820152600080516020614097833981519152604482015290519081900360640190fd5b6005546040516000916201000090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36005805462010000600160b01b0319169055565b336000908152600760205260409020600881015443919060ff1615801590613347575080548311155b15613353575050611b02565b60035b60ff8116156133c3578160ff6000198301166004811061337257fe5b600202018260ff83166004811061338557fe5b8254600291909102919091019081556001918201549101805467ffffffffffffffff19166001600160401b0390921691909117905560001901613356565b5082815560018101805467ffffffffffffffff19166001600160401b0384161790556008810154600460ff9091161015612a5357600801805460ff8082166001011660ff199091161790555050565b600080606080613420613db4565b33600090815260076020526040808220815160c0810183529290918391908201908390600490835b828210156134895760408051808201909152600283028501805482526001908101546001600160401b03166020808401919091529183529092019101613448565b505050908252506008919091015460ff90811660209283015290820151889750955090915084166001600160401b03811180156134c557600080fd5b506040519080825280602002602001820160405280156134ef578160200160208202803683370190505b5092508360ff166001600160401b038111801561350b57600080fd5b50604051908082528060200260200182016040528015613535578160200160208202803683370190505b50915060005b816020015160ff168160ff1610156135c857815160ff82166004811061355d57fe5b602002015160000151848260ff168151811061357557fe5b6020908102919091010152815160ff82166004811061359057fe5b602002015160200151838260ff16815181106135a857fe5b6001600160401b039092166020928302919091019091015260010161353b565b50509193509193565b6000606460ff8316106136155760405162461bcd60e51b8152600401808060200182810382526031815260200180613e706031913960400191505060405180910390fd5b60008360ff84166064811061362657fe5b6002020190508260ff168160010160089054906101000a900460ff1660ff1614611f845760405162461bcd60e51b8152600401808060200182810382526023815260200180613fd26023913960400191505060405180910390fd5b60c8015460ff161590565b6001600160a01b0383166136d15760405162461bcd60e51b81526004018080602001828103825260258152602001806140b76025913960400191505060405180910390fd5b6001600160a01b0382166137165760405162461bcd60e51b8152600401808060200182810382526023815260200180613e196023913960400191505060405180910390fd5b613721838383612a53565b61375e81604051806060016040528060268152602001613f82602691396001600160a01b0386166000908152602081905260409020549190612a58565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461378d9082611f2c565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6001600160a01b0382166000908152600760205260409020600881015460ff16613819576138148261331e565b612a53565b8054821015612a53575550565b60c80154606460ff909116101590565b6000613840613db4565b33600090815260076020526040808220815160c0810183529290918391908201908390600490835b828210156138a95760408051808201909152600283028501805482526001908101546001600160401b03166020808401919091529183529092019101613868565b505050908252506008919091015460ff16602090910152905060005b816020015160ff168160ff16101561398157815160ff8216600481106138e757fe5b6020020151602001516001600160401b0316846001600160401b03161061397957815160ff82166004811061391857fe5b602002015151925082613972576040805162461bcd60e51b815260206004820152601d60248201527f5f62616c616e636546696e643a20636f72727570742062616c616e6365000000604482015290519081900360640190fd5b50506111b8565b6001016138c5565b5081156139d5576040805162461bcd60e51b815260206004820152601d60248201527f5f62616c616e636546696e643a20636f72727570742062616c616e6365000000604482015290519081900360640190fd5b50919050565b6000846001600160a01b038516808218836139f582613c64565b905061ffff8116613a095750610100613a0e565b600019015b600a6000613a218960ff8a16840a613cb9565b9050600060018210613a625760148461ffff1610613a415750601e613a5d565b600a8461ffff1610613a575750600a8301613a5d565b50600283025b613a7a565b600a8461ffff161115613a775750600a613a7a565b50825b9b9a5050505050505050505050565b600080613a9c8460ff8516600a0a613cb9565b905060038360ff161015613ae15760405162461bcd60e51b8152600401808060200182810382526034815260200180613e3c6034913960400191505060405180910390fd5b6000613b0f6003850360ff16600a0a613b098660ff16600a0a88613d1d90919063ffffffff16565b90613cb9565b9050600060018310613bc6576103e88310613b2c5750601e613bc1565b6101f48310613b3d5750601c613bc1565b60c88310613b4d5750601a613bc1565b60648310613b5d57506018613bc1565b60328310613b6d57506016613bc1565b60148310613b7d57506014613bc1565b600a8310613b8d57506012613bc1565b60058310613b9d57506010613bc1565b60038310613bad5750600e613bc1565b60028310613bbd5750600c613bc1565b50600a5b613c5b565b6101f48210613bd757506009613c5b565b60c88210613be757506008613c5b565b60648210613bf757506007613c5b565b60328210613c0757506006613c5b565b60148210613c1757506005613c5b565b600a8210613c2757506004613c5b565b60058210613c3757506003613c5b565b60028210613c4757506002613c5b565b60018210613c5757506001613c5b565b5060005b95945050505050565b600081613c73575060006111b8565b60016101005b8061ffff168261ffff16101561326357617fff82820160011c16600019600282900a01858116613cae57816001019350613cb2565b8192505b5050613c79565b6000808211613d0c576040805162461bcd60e51b815260206004820152601a602482015279536166654d6174683a206469766973696f6e206279207a65726f60301b604482015290519081900360640190fd5b818381613d1557fe5b049392505050565b6000808211613d6e576040805162461bcd60e51b8152602060048201526018602482015277536166654d6174683a206d6f64756c6f206279207a65726f60401b604482015290519081900360640190fd5b818381613d7757fe5b069392505050565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b6040518060400160405280613dc7613dd4565b8152600060209091015290565b60405180608001604052806004905b613deb613e01565b815260200190600190039081613de35790505090565b60408051808201909152600080825260208201529056fe45524332303a207472616e7366657220746f20746865207a65726f2061646472657373556e657870656374656420746f6b656e20636f6e66696775726174696f6e3a20646563696d616c73206c657373207468616e20334368616c6c656e6765732e5f6368616c6c656e676547657428293a20696e646578206973206f7574206f662072616e67654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573734368616c6c656e67652077697468207468697320626c6f636b4e756d62657220646f65736e2774206578697374206f7220686173206265656e20636c61696d656420616c7265616479766572696679436c61696d28293a2061646a7573746564446966666963756c7479206f7574206f662072616e67654368616c6c656e6765733a204368616c6c656e67652073657420697320656d70747945524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63656c6f636b3a2044656c6179206d757374206e6f7420657863656564206d6178696d756d2064656c61792e4368616c6c656e6765733a20636f7272757074206368616c6c656e676520696e6465784368616c6c656e6765733a20636f7272757074206368616c6c656e6765206974656d20696e20667265654c6973744368616c6c656e6765733a204368616c6c656e6765207365742069732066756c6c4368616c6c656e6765732e5f6368616c6c656e6765476574416c6c28293a20636f7272757074206c69737445524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a207472616e736665722066726f6d20746865207a65726f20616464726573736c6f636b3a2044656c6179206d75737420657874656e64207468652063757272656e742074696d65206c6f636b206174206c65617374206279203120686f75722e4368616c6c656e6765733a2072656d6f76696e6720696e76616c6964206974656d45524332303a20617070726f76652066726f6d20746865207a65726f20616464726573736c6f636b3a2044656c6179206d75737420657863656564206d696e696d756d2064656c61792e74686520636f6e7472616374206973206c6f636b6564206d616e75616c6c79004368616c6c656e6765733a20496e76616c696420636f6e66696775726174696f6e3a20636e74203c3d204d41585f4348414c4c454e47455f434e54206661696c65644368616c6c656e6765732e5f6368616c6c656e676546696e6428293a2067656e6572616c446966666963756c7479206f7574206f662072616e6765436f7272757074206e756d626572206f66206d696e6564206368616c6c656e67657345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f4368616c6c656e6765732e5f6368616c6c656e676546696e6428293a20636f7272757074206c697374766572696679436c61696d28293a2067656e6572616c446966666963756c7479206f7574206f662072616e6765636f6e7472616374206973206c6f636b656420627920612074696d65206c6f636ba26469706673582212204d6fa633ec02011aceeaffc4da207bd90b7a1001f31e040f5589c39189667c8c64736f6c63430007030033636f6e7472616374206973206c6f636b656420627920612074696d65206c6f636b\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { ERC20 } from \"../ERC20\";\n\nexport class ERC20__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    name_: string,\n    symbol_: string,\n    overrides?: Overrides\n  ): Promise<ERC20> {\n    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC20>;\n  }\n  getDeployTransaction(\n    name_: string,\n    symbol_: string,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(name_, symbol_, overrides || {});\n  }\n  attach(address: string): ERC20 {\n    return super.attach(address) as ERC20;\n  }\n  connect(signer: Signer): ERC20__factory {\n    return super.connect(signer) as ERC20__factory;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {\n    return new Contract(address, _abi, signerOrProvider) as ERC20;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"string\",\n        name: \"name_\",\n        type: \"string\",\n      },\n      {\n        internalType: \"string\",\n        name: \"symbol_\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x608060405234801561001057600080fd5b5060405162000c5038038062000c508339818101604052604081101561003557600080fd5b810190808051604051939291908464010000000082111561005557600080fd5b90830190602082018581111561006a57600080fd5b825164010000000081118282018810171561008457600080fd5b82525081516020918201929091019080838360005b838110156100b1578181015183820152602001610099565b50505050905090810190601f1680156100de5780820380516001836020036101000a031916815260200191505b506040526020018051604051939291908464010000000082111561010157600080fd5b90830190602082018581111561011657600080fd5b825164010000000081118282018810171561013057600080fd5b82525081516020918201929091019080838360005b8381101561015d578181015183820152602001610145565b50505050905090810190601f16801561018a5780820380516001836020036101000a031916815260200191505b50604052505082516101a4915060039060208501906101cd565b5080516101b89060049060208401906101cd565b50506005805460ff1916601217905550610260565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061020e57805160ff191683800117855561023b565b8280016001018555821561023b579182015b8281111561023b578251825591602001919060010190610220565b5061024792915061024b565b5090565b5b80821115610247576000815560010161024c565b6109e080620002706000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c806306fdde031461009e578063095ea7b31461011b57806318160ddd1461015b57806323b872dd14610175578063313ce567146101ab57806339509351146101c957806370a08231146101f557806395d89b411461021b578063a457c2d714610223578063a9059cbb1461024f578063dd62ed3e1461027b575b600080fd5b6100a66102a9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100e05781810151838201526020016100c8565b50505050905090810190601f16801561010d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101476004803603604081101561013157600080fd5b506001600160a01b03813516906020013561033f565b604080519115158252519081900360200190f35b61016361035c565b60408051918252519081900360200190f35b6101476004803603606081101561018b57600080fd5b506001600160a01b03813581169160208101359091169060400135610362565b6101b36103e9565b6040805160ff9092168252519081900360200190f35b610147600480360360408110156101df57600080fd5b506001600160a01b0381351690602001356103f2565b6101636004803603602081101561020b57600080fd5b50356001600160a01b0316610440565b6100a661045b565b6101476004803603604081101561023957600080fd5b506001600160a01b0381351690602001356104bc565b6101476004803603604081101561026557600080fd5b506001600160a01b038135169060200135610524565b6101636004803603604081101561029157600080fd5b506001600160a01b0381358116916020013516610538565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103355780601f1061030a57610100808354040283529160200191610335565b820191906000526020600020905b81548152906001019060200180831161031857829003601f168201915b5050505050905090565b600061035361034c610563565b8484610567565b50600192915050565b60025490565b600061036f848484610653565b6103df8461037b610563565b6103da85604051806060016040528060288152602001610915602891396001600160a01b038a166000908152600160205260408120906103b9610563565b6001600160a01b0316815260208101919091526040016000205491906107ae565b610567565b5060019392505050565b60055460ff1690565b60006103536103ff610563565b846103da8560016000610410610563565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610845565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103355780601f1061030a57610100808354040283529160200191610335565b60006103536104c9610563565b846103da8560405180606001604052806025815260200161098660259139600160006104f3610563565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107ae565b6000610353610531610563565b8484610653565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105ac5760405162461bcd60e51b81526004018080602001828103825260248152602001806109626024913960400191505060405180910390fd5b6001600160a01b0382166105f15760405162461bcd60e51b81526004018080602001828103825260228152602001806108cd6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106985760405162461bcd60e51b815260040180806020018281038252602581526020018061093d6025913960400191505060405180910390fd5b6001600160a01b0382166106dd5760405162461bcd60e51b81526004018080602001828103825260238152602001806108aa6023913960400191505060405180910390fd5b6106e88383836108a4565b610725816040518060600160405280602681526020016108ef602691396001600160a01b03861660009081526020819052604090205491906107ae565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107549082610845565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561083d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108025781810151838201526020016107ea565b50505050905090810190601f16801561082f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008282018381101561089d576040805162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220f9572b18e4e63e4796591343d3eb956c7f920d98ee1154455942084fe73c268964736f6c63430007030033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { providers, Signer, ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport Web3Modal, { IProviderOptions } from \"web3modal\";\nimport { Balances } from \"./typechain/Balances\";\nimport { Balances__factory } from \"./typechain/factories/Balances__factory\";\nimport { Challenges } from \"./typechain/Challenges\";\nimport { Challenges__factory } from \"./typechain/factories/Challenges__factory\";\nimport { UtilsTest } from \"./typechain/UtilsTest\";\nimport { UtilsTest__factory } from \"./typechain/factories/UtilsTest__factory\";\nimport RareTokenDeployment from \"./deployments/localhost/RareToken.json\";\nimport { RareToken } from \"./typechain/RareToken\";\nimport { RareToken__factory } from \"./typechain/factories/RareToken__factory\";\nimport { ERC20 } from \"./typechain/ERC20\";\nimport { ERC20__factory } from \"./typechain/factories/ERC20__factory\";\n\nconst emptyContract = {\n    instance: undefined,\n    factory: undefined\n};\nconst defaultProvider: providers.Provider | undefined = undefined;\nexport const ProviderContext = React.createContext<[providers.Provider | undefined, React.Dispatch<React.SetStateAction<providers.Provider | undefined>>]>([defaultProvider, () => { }]);\nconst defaultCurrentAddress: string = \"\";\nexport const CurrentAddressContext = React.createContext<[string, React.Dispatch<React.SetStateAction<string>>]>([defaultCurrentAddress, () => { }]);\nconst defaultSigner: Signer | undefined = undefined;\nexport const SignerContext = React.createContext<[Signer | undefined, React.Dispatch<React.SetStateAction<Signer | undefined>>]>([defaultSigner, () => { }]);\nconst defaultSymfoniContext: SymfoniContextInterface = {\n    currentHardhatProvider: \"\",\n    init: () => { throw Error(\"Symfoni context not initialized\") },\n    loading: false,\n    messages: [],\n    providers: []\n};\nexport const SymfoniContext = React.createContext<SymfoniContextInterface>(defaultSymfoniContext);\nexport const BalancesContext = React.createContext<SymfoniBalances>(emptyContract);\nexport const ChallengesContext = React.createContext<SymfoniChallenges>(emptyContract);\nexport const UtilsTestContext = React.createContext<SymfoniUtilsTest>(emptyContract);\nexport const RareTokenContext = React.createContext<SymfoniRareToken>(emptyContract);\nexport const ERC20Context = React.createContext<SymfoniERC20>(emptyContract);\n\nexport interface SymfoniContextInterface {\n    init: (provider?: string) => void;\n    loading: boolean;\n    messages: string[];\n    currentHardhatProvider: string;\n    providers: string[];\n}\n\nexport interface SymfoniProps {\n    autoInit?: boolean;\n    showLoading?: boolean;\n    loadingComponent?: React.ReactNode;\n}\n\nexport interface SymfoniBalances {\n    instance?: Balances;\n    factory?: Balances__factory;\n}\n\nexport interface SymfoniChallenges {\n    instance?: Challenges;\n    factory?: Challenges__factory;\n}\n\nexport interface SymfoniUtilsTest {\n    instance?: UtilsTest;\n    factory?: UtilsTest__factory;\n}\n\nexport interface SymfoniRareToken {\n    instance?: RareToken;\n    factory?: RareToken__factory;\n}\n\nexport interface SymfoniERC20 {\n    instance?: ERC20;\n    factory?: ERC20__factory;\n}\n\nexport const Symfoni: React.FC<SymfoniProps> = ({\n    showLoading = true,\n    autoInit = true,\n    ...props\n}) => {\n    const [initializeCounter, setInitializeCounter] = useState(0);\n    const [currentHardhatProvider, setCurrentHardhatProvider] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [messages, setMessages] = useState<string[]>([]);\n    const [signer, setSigner] = useState<Signer | undefined>(defaultSigner);\n    const [provider, setProvider] = useState<providers.Provider | undefined>(defaultProvider);\n    const [currentAddress, setCurrentAddress] = useState<string>(defaultCurrentAddress);\n    const [fallbackProvider] = useState<string | undefined>(undefined);\n    const [providerPriority, setProviderPriority] = useState<string[]>([\"web3modal\", \"hardhat\"]);\n    const [Balances, setBalances] = useState<SymfoniBalances>(emptyContract);\n    const [Challenges, setChallenges] = useState<SymfoniChallenges>(emptyContract);\n    const [UtilsTest, setUtilsTest] = useState<SymfoniUtilsTest>(emptyContract);\n    const [RareToken, setRareToken] = useState<SymfoniRareToken>(emptyContract);\n    const [ERC20, setERC20] = useState<SymfoniERC20>(emptyContract);\n    useEffect(() => {\n        if (messages.length > 0)\n            console.debug(messages.pop())\n    }, [messages])\n\n    const getProvider = async (): Promise<{ provider: providers.Provider, hardhatProviderName: string } | undefined> => {\n        let hardhatProviderName = \"Not set\";\n        let _providerPriority = [...providerPriority];\n        // Fallback provider\n        if (fallbackProvider && autoInit && initializeCounter === 0) {\n            if (localStorage.getItem(\"WEB3_CONNECT_CACHED_PROVIDER\") === null) {\n                _providerPriority = _providerPriority.sort((a, b) => {\n                    return a === fallbackProvider ? -1 : b === fallbackProvider ? 1 : 0;\n                })\n            }\n        }\n        const provider = await _providerPriority.reduce(async (maybeProvider: Promise<providers.Provider | undefined>, providerIdentification) => {\n            let foundProvider = await maybeProvider\n            if (foundProvider) {\n                return Promise.resolve(foundProvider)\n            }\n            else {\n                switch (providerIdentification.toLowerCase()) {\n                    case \"web3modal\":\n                        try {\n                            const provider = await getWeb3ModalProvider()\n                            const web3provider = new ethers.providers.Web3Provider(provider);\n                            hardhatProviderName = \"web3modal\";\n                            return Promise.resolve(web3provider)\n                        } catch (error) {\n                            return Promise.resolve(undefined)\n                        }\n                    case \"hardhat\":\n                        try {\n                            const provider = new ethers.providers.JsonRpcProvider({\n                                url: \"http://127.0.0.1:8545\",\n                            });\n                            hardhatProviderName = \"hardhat\";\n                            return Promise.resolve(provider)\n                        } catch (error) {\n                            return Promise.resolve(undefined)\n                        } default:\n                        return Promise.resolve(undefined)\n                }\n            }\n        }, Promise.resolve(undefined)) // end reduce\n        return provider ? { provider, hardhatProviderName } : undefined\n    };\n    const getSigner = async (_provider: providers.Provider, hardhatProviderName: string): Promise<Signer | undefined> => {\n        switch (hardhatProviderName) {\n            case \"web3modal\":\n                const web3provider = _provider as ethers.providers.Web3Provider\n                return await web3provider.getSigner()\n            case \"hardhat\":\n                return ethers.Wallet.fromMnemonic(\"machine misery hazard tenant burger caution peace fiction rocket woman good focus\").connect(_provider)\n            default:\n                return undefined\n        }\n    };\n    const getWeb3ModalProvider = async (): Promise<any> => {\n        const providerOptions: IProviderOptions = {\n\n        };\n        const web3Modal = new Web3Modal({\n            // network: \"mainnet\",\n            cacheProvider: false,\n            providerOptions, // required\n        });\n        return await web3Modal.connect();\n    };\n\n    useEffect(() => {\n        let subscribed = true\n        const doAsync = async () => {\n            const finish = (text: string) => {\n                setLoading(false)\n                setMessages(old => [...old, text])\n            }\n            const finishWithContracts = (text: string) => {\n                setBalances(getBalances(_provider, _signer))\n                setChallenges(getChallenges(_provider, _signer))\n                setUtilsTest(getUtilsTest(_provider, _signer))\n                setRareToken(getRareToken(_provider, _signer))\n                setERC20(getERC20(_provider, _signer))\n                finish(text)\n            }\n            if (!autoInit && initializeCounter === 0) return finish(\"Auto init turned off.\")\n            setLoading(true)\n            setMessages(old => [...old, \"Initiating Symfoni React\"])\n            const providerObject = await getProvider() // getProvider can actually return undefined, see issue https://github.com/microsoft/TypeScript/issues/11094\n\n            if (!subscribed || !providerObject) return finish(\"No provider or signer.\")\n            const _provider = providerObject.provider\n            setProvider(_provider)\n            setMessages(old => [...old, \"Useing \" + providerObject.hardhatProviderName])\n            setCurrentHardhatProvider(providerObject.hardhatProviderName)\n            const _signer = await getSigner(_provider, providerObject.hardhatProviderName);\n\n            if (!subscribed || !_signer) return finishWithContracts(\"Provider, without signer.\")\n            setSigner(_signer)\n            setMessages(old => [...old, \"Useing signer\"])\n            const address = await _signer.getAddress()\n\n            if (!subscribed || !address) return finishWithContracts(\"Provider and signer, without address.\")\n            setCurrentAddress(address)\n\n            return finishWithContracts(\"Completed Symfoni context initialization.\")\n        };\n        doAsync();\n        return () => { subscribed = false }\n    }, [initializeCounter])\n\n    const getBalances = (_provider: providers.Provider, _signer?: Signer) => {\n        let instance = _signer ? Balances__factory.connect(ethers.constants.AddressZero, _signer) : Balances__factory.connect(ethers.constants.AddressZero, _provider)\n        const contract: SymfoniBalances = {\n            instance: instance,\n            factory: _signer ? new Balances__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getChallenges = (_provider: providers.Provider, _signer?: Signer) => {\n        let instance = _signer ? Challenges__factory.connect(ethers.constants.AddressZero, _signer) : Challenges__factory.connect(ethers.constants.AddressZero, _provider)\n        const contract: SymfoniChallenges = {\n            instance: instance,\n            factory: _signer ? new Challenges__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getUtilsTest = (_provider: providers.Provider, _signer?: Signer) => {\n        let instance = _signer ? UtilsTest__factory.connect(ethers.constants.AddressZero, _signer) : UtilsTest__factory.connect(ethers.constants.AddressZero, _provider)\n        const contract: SymfoniUtilsTest = {\n            instance: instance,\n            factory: _signer ? new UtilsTest__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getRareToken = (_provider: providers.Provider, _signer?: Signer) => {\n\n        const contractAddress = RareTokenDeployment.receipt.contractAddress\n        const instance = _signer ? RareToken__factory.connect(contractAddress, _signer) : RareToken__factory.connect(contractAddress, _provider)\n        const contract: SymfoniRareToken = {\n            instance: instance,\n            factory: _signer ? new RareToken__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n    const getERC20 = (_provider: providers.Provider, _signer?: Signer) => {\n        let instance = _signer ? ERC20__factory.connect(ethers.constants.AddressZero, _signer) : ERC20__factory.connect(ethers.constants.AddressZero, _provider)\n        const contract: SymfoniERC20 = {\n            instance: instance,\n            factory: _signer ? new ERC20__factory(_signer) : undefined,\n        }\n        return contract\n    }\n        ;\n\n    const handleInitProvider = (provider?: string) => {\n        if (provider) {\n            setProviderPriority(old => old.sort((a, b) => {\n                return a === provider ? -1 : b === provider ? 1 : 0;\n            }))\n        }\n        setInitializeCounter(initializeCounter + 1)\n    }\n    return (\n        <SymfoniContext.Provider value={{ init: (provider) => handleInitProvider(provider), providers: providerPriority, currentHardhatProvider, loading, messages }}>\n            <ProviderContext.Provider value={[provider, setProvider]}>\n                <SignerContext.Provider value={[signer, setSigner]}>\n                    <CurrentAddressContext.Provider value={[currentAddress, setCurrentAddress]}>\n                        <BalancesContext.Provider value={Balances}>\n                            <ChallengesContext.Provider value={Challenges}>\n                                <UtilsTestContext.Provider value={UtilsTest}>\n                                    <RareTokenContext.Provider value={RareToken}>\n                                        <ERC20Context.Provider value={ERC20}>\n                                            {showLoading && loading ?\n                                                props.loadingComponent\n                                                    ? props.loadingComponent\n                                                    : <div>\n                                                        {messages.map((msg, i) => (\n                                                            <p key={i}>{msg}</p>\n                                                        ))}\n                                                    </div>\n                                                : props.children\n                                            }\n                                        </ERC20Context.Provider >\n                                    </RareTokenContext.Provider >\n                                </UtilsTestContext.Provider >\n                            </ChallengesContext.Provider >\n                        </BalancesContext.Provider >\n                    </CurrentAddressContext.Provider>\n                </SignerContext.Provider>\n            </ProviderContext.Provider>\n        </SymfoniContext.Provider>\n    )\n\n};\n","import { BigNumber } from \"@ethersproject/bignumber\"\nimport { keccak256 } from \"@ethersproject/solidity\"\nimport { random } from \"sjcl\"\n\n\nexport default function solve(\n    blockNumber: BigNumber,\n    blockHash: string,\n    address: string,\n    solvedDifficulty: number,\n    status: (trials:number, timeMs: number, solution?: BigNumber, solvedDifficulty?: number)=>void,\n) {\n    const one = BigNumber.from(1)\n\n    // Generate some good random number here\n    if(!random.isReady()) {\n        throw new Error(\"RNG is not ready\")\n    }\n    const rnd = random.randomWords(8)\n    let rnds = \"0x\"\n    for(let i = 0; i < 8; i++) {\n        const r = rnd[i] >>> 0\n        rnds += r.toString(16)\n    }\n    let nonce = BigNumber.from(rnds)\n    let difficultyN = solvedDifficulty + 1\n    // The solution must be <= target to pass\n    let targetN = one.shl(256-difficultyN).sub(one)\n\n    const blob = blockNumber.xor(BigNumber.from(blockHash)).xor(BigNumber.from(address))\n    let stop = false\n    let cnt = 0\n    let timeMs = 0;\n\n    function batch() {\n        if(stop) {\n            return\n        }\n        const startTimeMs = Date.now()\n        for(let i = 0; i < 1000; i++) {\n            cnt++\n            const digest = keccak256([ \"uint256\", \"uint256\" ], [ blob, nonce ])\n            const digestNum = BigNumber.from(digest)\n            if(digestNum.lte(targetN)) {\n                solvedDifficulty = difficultyN\n                while(digestNum.lte(targetN)) {\n                    solvedDifficulty = difficultyN\n                    difficultyN++;\n                    targetN = one.shl(256-difficultyN).sub(one)\n                }\n                status(cnt, timeMs, nonce, solvedDifficulty)\n                if(stop) {\n                    // Found the required solution!\n                    return\n                }\n            }\n            nonce = nonce.add(one)\n            if((cnt % 1000) === 0) {\n                status(cnt, timeMs)\n            }\n        }\n        if(!stop) {\n            setTimeout(batch, 0)\n        }\n        const endTimeMs = Date.now()\n        timeMs += endTimeMs - startTimeMs\n    }\n\n    if(!stop) {\n        setTimeout(batch, 0)\n    }\n\n    return () => stop = true\n}\n","// import React from 'react'\nimport { BigNumber } from \"@ethersproject/bignumber\"\n\nexport function formatBalance(balance: BigNumber, decimals: number) {\n    const b1 = balance.div(BigNumber.from(10).pow(decimals))\n    const b2 = balance.div(BigNumber.from(10).pow(decimals-3)).mod(1000)\n    const r = b1.toLocaleString()+(b2.isZero() ? \"\" : \".\"+b2.toString().padStart(3, \"0\"))\n    return r\n}\n\nexport const ZERO = BigNumber.from(0)\nexport const ONE = BigNumber.from(1)\nexport const TWO = BigNumber.from(2)\nexport const TEN = BigNumber.from(10)\n\n// finds the highest significant bit of the argument\n// the result is encoded as if bits were numbered from 1\n// e.g. findHsb of 0 returns 0\n//      findHsb of 1 returns 1\n//      findHsb of 2 returns 2\n//      findHsb of 4 returns 3\n//      etc.\nexport function findHsb(n: BigNumber): number {\n    let from = 0;\n    let to = 256\n\n    while(from < to) {\n        const middle = (from + to) >> 1\n        const mask = ONE.shl(middle).sub(ONE)\n\n        if(n.lte(mask)) {\n            to = middle\n        } else {\n            from = middle+1\n        }\n    }\n\n    return from\n}\n\n// finds the lowest significant bit of the argument\n// the result is encoded as if bits were numbered from 1\n// e.g. findLsb of 0 returns 0\n//      findLsb of 1 returns 1\n//      findLsb of 2 returns 2\n//      findLsb of 4 returns 3\n//      etc.\nexport function findLsb(n: BigNumber): number {\n    if(n.isZero()) {\n        return 0\n    }\n    let from = 1\n    let to = 256\n\n    while(from < to) {\n        const middle = (from + to) >> 1\n        const mask = ONE.shl(middle).sub(ONE)\n\n        if(n.and(mask).isZero()) {\n            from = middle+1\n        } else {\n            to = middle\n        }\n    }\n\n    return from;\n}\n","import React, { useState, useEffect } from 'react'\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport solve from \"./Solve\"\nimport { formatBalance, findLsb, ZERO, ONE, TEN } from \"../utils/bigNumber\"\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\n\nexport type RegisteredBalancesType = {decimals: number, cnt: number, balances: BigNumber[], blockNumbers: BigNumber[]}\nexport type ChallengesType = {cnt: number, indexes: number[], blockNumbers: BigNumber[], blockHashes: string[], nexts: number[], claimsCnt: number[], claimed: boolean[]}\nexport type ChallengesMapType = {\n    blockNumberHex: string,\n    blockHash: string,\n    generalDifficulty: number,\n    addressDiscount: number,\n    balance: BigNumber,\n    balanceDiscount: number,\n    adjustedDifficulty: number,\n    claimsCnt: number,\n    claimed: boolean,\n}\nexport type RunStatusType = {\n    group: string;\n    blockNumberHex: string;\n    blockHash: string;\n    trials: number,\n    targetDifficulty: number,\n    solutionTrials: number,\n    solution?: BigNumber,\n    solvedDifficulty: number,\n    solved: boolean,\n    timeMs: number,\n    stopFn?: () => void,\n}\nexport type VerifyClaimType = { reward: BigNumber, reason: number, premium: boolean, rewardsCnt: number, generalDifficulty: number, adjustedDifficulty: number, solvedDifficulty: number }\n\nexport interface ChallengesProps {\n    challenges: ChallengesType;\n    group: string;\n    address: string;\n    registeredBalances: RegisteredBalancesType;\n    verifyClaim: (blockNumber: BigNumber, solution: BigNumber) => Promise<VerifyClaimType>,\n    claimReward: (blockNumber: BigNumber, solution: BigNumber) => void,\n}\n\nexport const MAX_CHALLENGE_CNT = 100\nexport const MIN_CHALLENGE_DIFFICULTY = 20\nexport const MAX_CHALLENGE_DIFFICULTY = 218\nexport const CHALLENGE_DIFFICULTY_STEP = 2\n\n// export const MAX_CHALLENGE_CNT = 30\n// export const MIN_CHALLENGE_DIFFICULTY = 20\n// export const MAX_CHALLENGE_DIFFICULTY = 78\n// export const CHALLENGE_DIFFICULTY_STEP = 2\n\nfunction getDifficultyLabel(difficulty: number): string {\n    let s = \"\"\n\n    if(difficulty <= 20) {\n        s = \"very easy\"\n    } else if(difficulty <= 30) {\n        s = \"easy\"\n    } else if(difficulty <= 40) {\n        s = \"medium\"\n    } else if(difficulty <= 50) {\n        s = \"hard\"\n    } else if(difficulty <= 60) {\n        s = \"very hard\"\n    } else if(difficulty <= 70) {\n        s = \"extremely hard\"\n    } else if(difficulty <= 80) {\n        s = \"almost impossible\"\n    } else if(difficulty <= 90) {\n        s = \"impossible\"\n    } else {\n        s = \"a miracle\"\n    } \n\n    return s;\n}\n\nexport function getReasonLabel(reason: number) {\n    let s = \"\"\n\n    switch(reason) {\n        case 0:\n            s = \"Request satisfies all criteria, at this moment, to claim the tokens\"\n            break\n        case 1:\n            s = \"blockNumber does not exist or has no live challenge assigned right now\"\n            break\n        case 2:\n            s = \"Actual solvedDifficulty doesn't safisfy the requirements yet\"\n            break\n        case 3:\n            s = \"This challenge has already been claimed by this address\"\n            break\n        case 4:\n            s = \"All available rewards have been claimed already\"\n            break\n        default:\n            s = \"Unknown Reason #\" + reason\n            break\n    }\n\n    return s\n}\n\nfunction getRewardTokens(blockHash: string): [number, number] {\n    let n: [number, number]\n    if(blockHash.startsWith(\"0x88888\")) {\n        n = [500, 2000]\n    } else if(blockHash.startsWith(\"0x8888\")) {\n        n = [200, 500]\n    } else if(blockHash.startsWith(\"0x888\")) {\n        n = [100, 100]\n    } else if(blockHash.startsWith(\"0x88\")) {\n        n = [50, 20]\n    } else if(blockHash.startsWith(\"0x8\")) {\n        n = [20, 5]\n    } else {\n        n = [10, 1]\n    }\n    return n\n}\n\nfunction getWalletDifficultyDiscount(blockHash: string, address: string, balance: BigNumber, decimals: number): number {\n    const h1 = BigNumber.from(blockHash)\n    const h2 = BigNumber.from(address)\n    let o = h1.xor(h2)\n    let n = findLsb(o)\n    if(n === 0) {\n        n = 256\n    }\n    n--\n\n    const b1 = balance.div(TEN.pow(decimals))\n    if(b1.gte(ONE)) {\n        if(n >= 20) {\n            n = 30\n        } else if(n >= 10) {\n            n = 20 + (n - 10)\n        } else {\n            n = 2 * n\n        }\n    } else {\n        if(n > 10) {\n            n = 10\n        }\n    }\n\n    return n\n}\n\nfunction getBalanceDifficultyDiscount(balance: BigNumber, decimals: number): number {\n    const b1 = balance.div(TEN.pow(decimals))\n    const b2 = balance.mod(TEN.pow(decimals)).div(TEN.pow(decimals-3))\n    let discount\n    if(b1.gte(ONE)) {\n        if(b1.gte(BigNumber.from(1000))) {\n            discount = 2 * 10 + 10\n        } else if(b1.gte(BigNumber.from(500))) {\n            discount = 2 * 9 + 10\n        } else if(b1.gte(BigNumber.from(200))) {\n            discount = 2 * 8 + 10\n        } else if(b1.gte(BigNumber.from(100))) {\n            discount = 2 * 7 + 10\n        } else if(b1.gte(BigNumber.from(50))) {\n            discount = 2 * 6 + 10\n        } else if(b1.gte(BigNumber.from(20))) {\n            discount = 2 * 5 + 10\n        } else if(b1.gte(TEN)) {\n            discount = 2 * 4 + 10\n        } else if(b1.gte(BigNumber.from(5))) {\n            discount = 2 * 3 + 10\n        } else if(b1.gte(BigNumber.from(3))) {\n            discount = 2 * 2 + 10\n        } else if(b1.gte(BigNumber.from(2))) {\n            discount = 2 * 1 + 10\n        } else {\n            discount = 2 * 0 + 10\n        }\n    } else {\n        if(b2.gte(BigNumber.from(500))) {\n            discount = 9\n        } else if(b2.gte(BigNumber.from(200))) {\n            discount = 8\n        } else if(b2.gte(BigNumber.from(100))) {\n            discount = 7\n        } else if(b2.gte(BigNumber.from(50))) {\n            discount = 6\n        } else if(b2.gte(BigNumber.from(20))) {\n            discount = 5\n        } else if(b2.gte(TEN)) {\n            discount = 4\n        } else if(b2.gte(BigNumber.from(5))) {\n            discount = 3\n        } else if(b2.gte(BigNumber.from(2))) {\n            discount = 2\n        } else if(b2.gte(ONE)) {\n            discount = 1\n        } else {\n            discount = 0\n        }\n    }\n    return discount\n}\n\nfunction stopAll(runStatus: {[key: string]: RunStatusType}) {\n    Object.keys(runStatus).forEach(bnStr => {\n        const rs = runStatus[bnStr]\n\n        if(rs.stopFn !== undefined) {\n            rs.stopFn()\n            rs.stopFn = undefined\n        }\n    })\n}\n\nexport const challengesRunStatus: {[address: string]: {[key: string]: RunStatusType}} = {}\nexport const Challenges: React.FC<ChallengesProps> = ({challenges, group, address, registeredBalances, verifyClaim, claimReward}) => {\n    let runStatus = challengesRunStatus[address]\n    if(!runStatus) {\n        runStatus = {}\n        challengesRunStatus[address] = runStatus\n    }\n    const challengesMap = toChallengesMap(challenges, registeredBalances)\n\n    const [runStatusSnap, setRunStatusSnap] = useState({...runStatus})\n    const [currentAddress, setCurrentAddress] = useState(\"\")\n    const initChallenges: ChallengesType = {cnt: 0, indexes: [], blockNumbers: [], blockHashes: [], nexts: [], claimsCnt: [], claimed: []}\n    const [currentChallenges, setCurrentChallenges] = useState(initChallenges)\n\n    let mounted = true\n\n    const refresh = () => {\n\n        const _refresh = async () => {\n\n            if(mounted) {\n                if(currentAddress !== address) {\n                    stopAll(challengesRunStatus[currentAddress])\n\n                    setCurrentAddress(address)\n                    const nrn: {[key: string]: RunStatusType} = {}\n                    Object.keys(runStatus).forEach(bnStr => {\n                        const rs = runStatus[bnStr]\n                        const nrs = {...rs}\n                        nrn[bnStr] = nrs                            \n                    })\n                    setRunStatusSnap(nrn)\n                } else if(currentChallenges !== challenges) {\n                    // Reconcile challenges\n                    // First, stop and remove the run status for challenges that have been removed\n                    // Second, update difficulty in the run status\n                    Object.keys(runStatus).forEach(bnStr =>{\n                        const rs = runStatus[bnStr]\n                        if(rs.group === group) {\n                            const cmt = challengesMap[bnStr]\n                            if(cmt) {\n                                if(rs.targetDifficulty !== cmt.adjustedDifficulty) {\n                                    // Update the difficulty\n                                    rs.targetDifficulty = cmt.adjustedDifficulty\n                                    if(rs.solvedDifficulty >= rs.targetDifficulty) {\n                                        // Got it!\n                                        rs.solved = true\n                                        if(rs.stopFn) {\n                                            rs.stopFn()\n                                            rs.stopFn = undefined\n                                        }\n                                    }\n                                }\n                            } else {\n                                // Stop the job\n                                if(rs.stopFn) {\n                                    rs.stopFn()\n                                    rs.stopFn = undefined\n                                }\n                                delete runStatus[bnStr]\n                            }\n                        }\n                    })\n \n                    setCurrentChallenges(challenges)\n                    const nrn: {[key: string]: RunStatusType} = {}\n                    Object.keys(runStatus).forEach(bnStr => {\n                        const rs = runStatus[bnStr]\n                        const nrs = {...rs}\n                        nrn[bnStr] = nrs                            \n                    })\n                    setRunStatusSnap(nrn)\n                }\n            }\n        }\n\n        const _cleanup = () => {\n            mounted = false\n        }\n\n        _refresh()\n\n        return _cleanup\n    }\n\n    useEffect(refresh)\n\n    function findBalance(registeredBalances: RegisteredBalancesType, blockNumber: BigNumber) {\n        for(let i = 0; i < registeredBalances.cnt; i++) {\n            const bn = registeredBalances.blockNumbers[i]\n            const bal = registeredBalances.balances[i]\n            if(blockNumber.gte(bn)) {\n                return bal\n            }\n        }\n        return ZERO\n    }\n\n    function toChallengesMap(challenges: ChallengesType, registeredBalances: RegisteredBalancesType) {\n\n        const challengesMap: {[bnStr: string]: ChallengesMapType} = {}\n        challenges.blockNumbers.forEach((bn, i) =>{\n            const bnStr = bn.toHexString()\n            const blockHash = challenges.blockHashes[i]\n            if(challengesMap[bnStr]) {\n                throw new Error(\"Duplicate block number in challenges: \"+bnStr)\n            }\n\n            const balance = findBalance(registeredBalances, bn)\n            const generalDifficulty = MAX_CHALLENGE_DIFFICULTY - CHALLENGE_DIFFICULTY_STEP * (challenges.cnt - i - 1)\n            const addressDiscount = getWalletDifficultyDiscount(blockHash, address, balance, registeredBalances.decimals)\n            const balanceDiscount = getBalanceDifficultyDiscount(balance, registeredBalances.decimals)\n            let adjustedDifficulty = generalDifficulty - addressDiscount - balanceDiscount\n            if(adjustedDifficulty < MIN_CHALLENGE_DIFFICULTY) {\n                adjustedDifficulty = MIN_CHALLENGE_DIFFICULTY\n            }\n\n            const claimsCnt = challenges.claimsCnt[i]\n            const claimed = challenges.claimed[i]\n            challengesMap[bnStr] = {\n                blockNumberHex: bnStr,\n                blockHash,\n                generalDifficulty,\n                addressDiscount,\n                balance,\n                balanceDiscount,\n                adjustedDifficulty,\n                claimsCnt,\n                claimed,\n            }\n        })\n    \n        return challengesMap\n    }\n    \n    const handleStartMining = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, blockNumber: BigNumber, blockHash: string, address: string, difficulty: number) => {\n        e.preventDefault()\n\n        const bnStr = blockNumber.toHexString()\n        let rs = runStatus[bnStr]\n\n        if(!rs) {\n            rs = {\n                group,\n                blockNumberHex: bnStr,\n                blockHash,\n                trials: 0,\n                targetDifficulty: difficulty,\n                solutionTrials: 0,\n                solvedDifficulty: 0,\n                solved: false,\n                timeMs: 0,\n                stopFn: undefined,\n            }\n            runStatus[bnStr] = rs\n        }\n\n        if(rs.stopFn) {\n            throw new Error(\"The solver is already running on block \"+bnStr)\n        }\n\n        const trials0 = rs.trials\n        const timeMs0 = rs.timeMs\n        const status = (trials: number, timeMs: number, solution?: BigNumber, solvedDifficulty?: number) => {\n            const rs = runStatus[bnStr]\n            rs.trials = trials0 + trials\n            rs.timeMs = timeMs0 + timeMs\n\n            if(solution) {\n                if(solvedDifficulty !== undefined && solvedDifficulty > rs.solvedDifficulty) {\n                    rs.solutionTrials = rs.trials\n                    rs.solution = solution\n                    rs.solvedDifficulty = solvedDifficulty\n                    if(rs.solvedDifficulty >= rs.targetDifficulty) {\n                        // Got it!\n                        rs.solved = true\n                        if(rs.stopFn) {\n                            rs.stopFn()\n                            rs.stopFn = undefined\n                        }\n                    }\n                }\n            }\n\n            const nrn = {...runStatus}\n            const nrs = {...rs}\n            nrn[bnStr] = nrs\n            setRunStatusSnap(nrn)\n        }\n\n        rs.stopFn = solve(blockNumber, blockHash, address, rs.solvedDifficulty, status)\n\n        const nrn = {...runStatus}\n        nrn[bnStr] = {...rs}\n        setRunStatusSnap(nrn)\n    }\n\n    const handleStopMining = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, blockNumber: BigNumber) => {\n        e.preventDefault()\n\n        const bnStr = blockNumber.toHexString()\n        const rs = runStatus[bnStr]\n        if(!rs) {\n            throw new Error(\"The solver does not exist \"+bnStr)\n        }\n        if(rs.stopFn) {\n            rs.stopFn()\n            rs.stopFn = undefined\n        }\n\n        const nrn = {...runStatus}\n        const nrs = {...rs}\n        nrn[bnStr] = nrs\n        setRunStatusSnap(nrn)\n    }\n    \n    const handleVerifyClaim = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, blockNumber: BigNumber, decimals: number) => {\n        e.preventDefault()\n\n        const bnStr = blockNumber.toHexString()\n        const rs = runStatus[bnStr]\n        if(!rs) {\n            throw new Error(\"The solver does not exist \"+bnStr)\n        }\n\n        if(rs.solution) {\n            // const { reward, reason, generalDifficulty, adjustedDifficulty, solvedDifficulty } = await verifyClaim(blockNumber, rs.solution)\n            const { reason, reward, adjustedDifficulty, solvedDifficulty } = await verifyClaim(blockNumber, rs.solution)\n            if(reason === 0) {\n                const rewardStr = formatBalance(reward, registeredBalances.decimals)\n                // console.log(\"Claim Verification on block #\"+blockNumber.toString()+\" was Successful!\")\n                window.alert(\"Claim Verification on block #\"+blockNumber.toString()+\" was Successful, GO Ahead and Claim \"+rewardStr+\" \"+(rewardStr === \"1\" ? \"Token\" : \"Tokens\")+\" for Real!\")\n            } else {\n                // console.log(\"Claim Verification on block #\"+blockNumber.toString()+\" FAILED: \", getReasonLabel(reason))\n                window.alert(\"Claim Verification on block #\"+blockNumber.toString()+\" FAILED: \" + getReasonLabel(reason) + \", YOUR Target Difficulty: \"+adjustedDifficulty+\", SolvedDifficulty: \"+solvedDifficulty)\n            }\n            // console.log(\"Claim Verification Details: \", \"reward\", formatBalance(reward, decimals), \"reason\", reason, \"generalDifficulty\", generalDifficulty, \"adjustedDifficulty\", adjustedDifficulty, \"solvedDifficulty\", solvedDifficulty)\n        }\n\n        const nrn = {...runStatus}\n        const nrs = {...rs}\n        nrn[bnStr] = nrs\n        setRunStatusSnap(nrn)\n    }\n    \n    const handleClaimReward = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, blockNumber: BigNumber) => {\n        e.preventDefault()\n\n        const bnStr = blockNumber.toHexString()\n        const rs = runStatus[bnStr]\n        if(!rs) {\n            throw new Error(\"The solver does not exist \"+bnStr)\n        }\n\n        if(rs.solution) {\n            await claimReward(blockNumber, rs.solution);\n        }\n\n        const nrn = {...runStatus}\n        const nrs = {...rs}\n        nrn[bnStr] = nrs\n        setRunStatusSnap(nrn)\n    }\n   \n    return <table>\n        <thead>\n            <tr>\n                <th>\n                    N\n                </th>\n                <th>\n                    Block<br/>Number\n                </th>\n                <th>\n                    Block Hash\n                </th>\n                <th>\n                    Registered<br/>Balance\n                </th>\n                <th style={{textAlign: \"left\"}}>\n                    General<br/>Difficulty\n                </th>\n                <th>\n                    Wallet<br/>Discount\n                </th>\n                <th>\n                    Balance<br/>Discount\n                </th>\n                <th style={{textAlign: \"left\"}}>\n                    YOUR<br/>Difficulty\n                </th>\n                <th>\n                    Reward<br/>Tokens\n                </th>\n                <th>\n                    Claims\n                </th>\n                <th>\n                    Status\n                </th>\n                <th>\n                    Solved<br/>Difficulty\n                </th>\n                <th>\n                    Calculations\n                </th>\n                <th>\n                    Time\n                </th>\n                <th>\n                    Mine / Verify / Claim Tokens\n                </th>\n                <th>\n                    GoMiner<br/>Command\n                </th>\n                <th>\n                    N\n                </th>\n            </tr>\n        </thead>\n        <tbody>\n            {challenges.blockNumbers.map((bn, i) => {\n                const blockHash = challenges.blockHashes[i]\n                const hash = blockHash.substr(0, 8)+\"-\"+blockHash.substr(blockHash.length - 10, 10)\n\n                const bnStr = bn.toHexString()\n                const cmt = challengesMap[bnStr]\n                const { generalDifficulty, addressDiscount, balance, balanceDiscount, adjustedDifficulty, claimsCnt, claimed } = cmt\n\n                const rs = runStatusSnap[bnStr]\n                const claimable = !claimed && rs && rs.solvedDifficulty >= adjustedDifficulty\n                const rewardTokens = getRewardTokens(blockHash)\n\n                const gominer = \"./gominer -a \"+address+\" -b \"+bn.toString()+\" -c \"+blockHash+\" -d \"+adjustedDifficulty.toString()+\" -t 2\"\n\n                return <tr key={i}>\n                    <td>{i+1}</td>\n                    <td>{bn.toString()}</td>\n                    <td><code>{hash}</code></td>\n                    <td>{formatBalance(balance, registeredBalances.decimals)}</td>\n                    <td style={{textAlign: \"left\"}}>{generalDifficulty} - {getDifficultyLabel(generalDifficulty)}</td>\n                    {addressDiscount > 0 ? <td>{addressDiscount}</td> : <td/>}\n                    {balanceDiscount > 0 ? <td>{balanceDiscount}</td> : <td/>}\n                    {/* {adjustedDifficulty < generalDifficulty ? <td>{adjustedDifficulty} - {getDifficulty(adjustedDifficulty)}</td> : <td/>} */}\n                    <td style={{textAlign: \"left\"}}>{adjustedDifficulty} - {getDifficultyLabel(adjustedDifficulty)}</td>\n                    {/* <td>{rewardTokens[0]}x{rewardTokens[1]} {rewardTokens[1] === 1 ? \"\" : \"\"}</td> */}\n                    <td>{rewardTokens[1]}</td>\n                    <td>{claimsCnt}/{rewardTokens[0]}</td>\n                    <td>{claimed ? \"Claimed\" : rs && (rs.solved ? \"Solved\" : rs.stopFn ? \"Mining\" : rs.trials > 0 ? \"Stopped\" : \"\")}</td>\n                    <td>{rs && (rs.solved ? rs.solvedDifficulty : rs.stopFn ? \"\"+rs.solvedDifficulty+\" / \"+adjustedDifficulty : rs.trials > 0 ? \"\"+rs.solvedDifficulty+\" / \"+adjustedDifficulty : \"\")}</td>\n                    <td>{rs && (rs.solved ? rs.solutionTrials.toLocaleString() : rs.trials > 0 ? rs.trials.toLocaleString() : \"\")}</td>\n                    <td>{rs && (rs.timeMs > 0 ? \"\"+Math.floor(rs.timeMs / 1000).toLocaleString()+\" s\" : \"\")}</td>\n                    <td>\n                        <button disabled={!!(claimed || (rs && (rs.solved || rs.stopFn)))} onClick={(e) => handleStartMining(e, bn, blockHash, address, adjustedDifficulty)}>Start</button>\n                        <button disabled={!(rs && rs.stopFn)} onClick={(e) => handleStopMining(e, bn)}>Stop</button>\n                        <button disabled={!(!claimed && (rs && rs.solvedDifficulty > 0))} onClick={(e) => handleVerifyClaim(e, bn, registeredBalances.decimals)}>Verify</button>\n                        <button style={{color: claimable ? \"red\" : \"\"}} disabled={!claimable} onClick={(e) => handleClaimReward(e, bn)}>Claim</button>\n                    </td>\n                    <td>\n                        <CopyToClipboard text={gominer}>\n                            <button disabled={claimed}>Copy</button>\n                        </CopyToClipboard>\n                    </td>\n                    <td>{i+1}</td>\n                </tr>\n            })}\n        </tbody>\n    </table>\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport { RareTokenContext as TokenContext } from \"../hardhat/SymfoniContext\"\nimport { RareToken as TokenTypechain } from \"../hardhat/typechain/RareToken\"\nimport { BigNumber } from \"@ethersproject/bignumber\"\nimport { Web3Provider } from \"@ethersproject/providers\"\nimport { ContractTransaction } from \"@ethersproject/contracts\"\nimport { ChallengesType, Challenges, RegisteredBalancesType, getReasonLabel, MAX_CHALLENGE_CNT } from \"./Challenges\"\nimport { formatBalance, ZERO } from \"../utils/bigNumber\"\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\n\ninterface Props { }\n\nexport const RareToken: React.FC<Props> = () => {\n\n    const token = useContext(TokenContext)\n    const [err, setErr] = useState(\"\")\n    const [blockNumber, setBlockNumber] = useState(0)\n    const [address, setAddress] = useState(\"\")\n    const [totalSupply, setTotalSupply] = useState(ZERO)\n    const [balance, setBalance] = useState(ZERO)\n    const [ownerAddress, setOwnerAddress] = useState(\"\")\n    const [lockDelay, setLockDelay] = useState(2)\n    const [lockStatus, setLockStatus] = useState({locked: false, lockedUntil: ZERO})\n    const [paused, setPaused] = useState(false)\n    const [status, setStatus] = useState({blockNumber: ZERO, walletAddress: \"\", startingBlockNumber: ZERO, nextChallengeBlockNumber: ZERO, minedChallenges: ZERO, blocksPerChallenge: 0})\n    const [useEffectCnt, setUseEffectCnt] = useState(0)\n    const [txCnt, setTxCnt] = useState(0)\n    const initRegisteredBalances: RegisteredBalancesType = {decimals: 18, cnt: 0, balances: [], blockNumbers: []}\n    const [registeredBalances, setRegisteredBalances] = useState(initRegisteredBalances)\n    const initChallenges: ChallengesType = {cnt: 0, indexes: [], blockNumbers: [], blockHashes: [], nexts: [], claimsCnt: [], claimed: []}\n    const [basicChallenges, setBasicChallenges] = useState(initChallenges)\n    const [premiumChallenges, setPremiumChallenges] = useState(initChallenges)\n    const [goMiner, setGoMiner] = useState(\"\")\n\n    const provider = new Web3Provider(window.ethereum)\n    const signer = provider.getSigner()\n\n    let mounted = true\n    const refresh = () => {\n\n        const _refresh = async (timer: boolean) => {\n            const t = token.instance\n            if (!t) return\n\n            const _paused = await t.paused()\n\n            const _status = await t.getStatus()\n\n            const _ownerAddress = await t.owner()\n\n            const { 0: _locked, 1: _lockedUntil } = await t.lockStatus()\n\n            const _registeredBalances = await t.readRegisteredBalances()\n            const _address = (await signer.getAddress()).toString()\n\n            const _totalSupply = await t.totalSupply()\n\n            const _balance = await t.balanceOf(_address)\n\n            const _blockNumber = await provider.getBlockNumber()\n\n            let refreshed = false\n            if(mounted) {\n                if(timer ||\n                    paused !== _paused ||\n                    !status.blockNumber.eq(_status.blockNumber) || \n                    status.walletAddress !== _status.walletAddress || \n                    !status.startingBlockNumber.eq(_status.startingBlockNumber) ||\n                    !status.nextChallengeBlockNumber.eq(_status.nextChallengeBlockNumber) ||\n                    !status.minedChallenges.eq(_status.minedChallenges) ||\n                    status.blocksPerChallenge !== _status.blocksPerChallenge || \n\n                    lockStatus.locked !== _locked || \n                    !lockStatus.lockedUntil.eq(_lockedUntil) ||\n                    ownerAddress !== _ownerAddress ||\n                    // registeredBalances !== _registeredBalances ||\n                    address !== _address ||\n                    !totalSupply.eq(_totalSupply) ||\n                    !balance.eq(_balance) ||\n                    blockNumber !== _blockNumber\n                ) {\n                    setPaused(_paused)\n                    setStatus(_status)\n                    setLockStatus({locked: _locked, lockedUntil: _lockedUntil})\n                    setOwnerAddress(_ownerAddress)\n                    setRegisteredBalances(_registeredBalances)\n                    setAddress(_address)\n                    setTotalSupply(_totalSupply)\n                    setBalance(_balance)\n                    setBlockNumber(_blockNumber)\n                    if(address !== _address || useEffectCnt === 0) {\n                        readChallenges()\n                    }\n                    setUseEffectCnt(useEffectCnt + 1)\n                    refreshed = true\n                }\n\n                setTimeout(_timeRefresh, 5000)\n            }\n            return refreshed\n        }\n\n        const _timeRefresh = async () => {\n            const refreshed = await _refresh(true)\n            if(!refreshed) {\n                setUseEffectCnt(useEffectCnt + 1)\n            }\n        }\n\n        const _cleanup = () => {\n            mounted = false\n        }\n\n        _refresh(false)\n\n        return _cleanup\n    }\n\n    useEffect(refresh)\n\n    const runLockTx = async (txf: (t: TokenTypechain) => Promise<ContractTransaction>) => {\n        runTokenTx(txf, async t => {\n            const { 0: locked, 1: lockedUntil } = await t.lockStatus()\n            setLockStatus({locked, lockedUntil})\n        })\n    }\n\n    const runTokenTx = async (\n        txf: (t: TokenTypechain) => Promise<ContractTransaction>,\n        f?: (t: TokenTypechain) => void\n    ) => {\n        setErr(\"\")\n        try {\n            const t = token.instance\n            if (!t) {\n                throw Error(\"Token instance not ready\")\n            }\n            const tx = await txf(t)\n            const cr = await tx.wait()\n            if(cr.confirmations <= 0) {\n                throw new Error(\"No confirmations in contract receipt\")\n            }\n            if(f) {\n                f(t)\n            }\n            setTxCnt(txCnt + 1)\n            return true\n        } catch(ex) {\n            let msg = ex.data && ex.data.message ? ex.data.message : ex.message ? ex.message : ex.toString()\n            // setErr(msg)\n            const err0 = \"VM Exception while processing transaction: revert \"\n            if(msg && msg.startsWith(err0)) {\n                msg = msg.substring(err0.length)\n            }\n            window.alert(msg)\n            return false\n        }\n    }\n\n    const handleLock = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        runLockTx(g => g.lock())\n    }\n\n    const handleUnlock = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        runLockTx(g => g.unlock())\n    }\n\n    const handleTimeLock = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        const delay = BigNumber.from(lockDelay).mul(3600)\n        runLockTx(g => g.timeLock(delay))\n    }\n\n    const handlePause = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        runTokenTx(t => t.pause())\n    }\n\n    const handleUnpause = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        runTokenTx(t => t.unpause())\n    }\n\n    const readChallenges = async () => {\n        const t = token.instance\n        if (!t) return\n\n        {\n        const basicCha = await t.readBasicChallenges()\n        const {cnt, indexes, blockNumbers, blockHashes, nexts, claimsCnt, claimed} = basicCha\n        setBasicChallenges({cnt, indexes, blockNumbers, blockHashes, nexts, claimsCnt, claimed})\n        }\n\n        {\n        const premiumCha = await t.readPremiumChallenges()\n        const {cnt, indexes, blockNumbers, blockHashes, nexts, claimsCnt, claimed} = premiumCha\n        setPremiumChallenges({cnt, indexes, blockNumbers, blockHashes, nexts, claimsCnt, claimed})\n        }\n    }\n\n    const handleReadChallenges = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n\n        readChallenges()\n    }\n\n    const handleAddChallenges = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n\n        await runTokenTx(t => t.addChallenges(mineableChallenges))\n        readChallenges()\n    }\n\n    const handleRegisterBalance = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        runTokenTx(t => t.registerBalance())\n    }\n\n    const handleClearClaim = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        setGoMiner(\"\")\n    }\n\n    const handleVerifyClaim = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault()\n        const a = goMiner.split(\"/\")\n        if(a.length === 2) {\n            const blockNumber = BigNumber.from(a[0].trim())\n            const solution = BigNumber.from(a[1].trim())\n            const { reason, reward, adjustedDifficulty, solvedDifficulty } = await verifyClaim(blockNumber, solution)\n            if(reason === 0) {\n                const rewardStr = formatBalance(reward, registeredBalances.decimals)\n                window.alert(\"Claim Verification on block #\"+blockNumber.toString()+\" was Successful, GO Ahead and Claim \"+rewardStr+\" \"+(rewardStr === \"1\" ? \"Token\" : \"Tokens\")+\" for Real!\")\n            } else {\n                window.alert(\"Claim Verification on block #\"+blockNumber.toString()+\" FAILED: \" + getReasonLabel(reason) + \", YOUR Target Difficulty: \"+adjustedDifficulty+\", SolvedDifficulty: \"+solvedDifficulty)\n            }\n        } else {\n            window.alert(\"Invalid GoMiner Solution\")\n        }\n    }\n\n    const handleClaim = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault()\n        const a = goMiner.split(\"/\")\n        if(a.length === 2) {\n            const blockNumber = BigNumber.from(a[0].trim())\n            const solution = BigNumber.from(a[1].trim())\n            const success = await runTokenTx(t => t.claimReward(blockNumber, solution))\n            if(success) {\n                setGoMiner(\"\")\n                readChallenges()\n            }\n        }\n    }\n\n    const handleGoMinerChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n        e.preventDefault()\n        setGoMiner(e.target.value.trim())\n    }\n\n    const verifyClaim = async (blockNumber: BigNumber, solution: BigNumber) => {\n        const t = token.instance\n        if (!t) {\n            throw new Error(\"Couldn't call contract\")\n        }\n\n        const { reward, reason, premium, rewardsCnt, generalDifficulty, adjustedDifficulty, solvedDifficulty } = await t.verifyClaim(blockNumber, solution)\n\n        return { reward, reason, premium, rewardsCnt, generalDifficulty, adjustedDifficulty, solvedDifficulty }\n    }\n\n    const claimReward = async (blockNumber: BigNumber, solution: BigNumber) => {\n        const success = await runTokenTx(t => t.claimReward(blockNumber, solution))\n        if(success) {\n            readChallenges()\n        }\n    }\n\n    const lockedUntilMs = lockStatus.lockedUntil.mul(1000).toNumber()\n\n    const formatDate = (t: Date): String => {\n        const day = ('0' + t.getDate()).slice(-2)\n        const month = ('0' + (t.getMonth() + 1)).slice(-2)\n        const year = t.getFullYear()\n        const hours = ('0' + t.getHours()).slice(-2)\n        const minutes = ('0' + t.getMinutes()).slice(-2)\n        const seconds = ('0' + t.getSeconds()).slice(-2)\n        const time = `${month}/${day}/${year} ${hours}:${minutes}:${seconds}`\n        return time\n    }\n\n    const owner = address === ownerAddress\n    const locked = lockStatus.locked || lockedUntilMs > 0\n    let mineableChallenges = Math.floor((status.blockNumber.toNumber() + 1 - status.startingBlockNumber.toNumber() + 1) / status.blocksPerChallenge)\n    mineableChallenges -= status.minedChallenges.toNumber()\n    if(mineableChallenges > status.blockNumber.toNumber() + 1 - status.nextChallengeBlockNumber.toNumber()) {\n        mineableChallenges = status.blockNumber.toNumber() + 1 - status.nextChallengeBlockNumber.toNumber()\n    }\n    if(mineableChallenges > 10) {\n        mineableChallenges = 10\n    }\n    if(mineableChallenges > MAX_CHALLENGE_CNT - basicChallenges.cnt) {\n        mineableChallenges = MAX_CHALLENGE_CNT - basicChallenges.cnt\n    }\n\n    return <div>\n        {err ? <p>ERROR: {err}</p> : null}\n        {paused ? <h2 style={{backgroundColor: \"red\"}}>The Smart Contract Is PAUSED<br/>Please Wait Until the Contact Owner Resumes Its Operations</h2> : null}\n        <img alt=\"\" src=\"logo256.png\"/>\n        <h2>BEER Coin</h2>\n        <p><span style={{fontWeight: \"bold\"}}>Contract:</span> {token && token.instance && token.instance.address} {token && token.instance && token.instance.address && <CopyToClipboard text={token.instance.address}><button>Copy</button></CopyToClipboard>}</p>\n        <p><span style={{fontWeight: \"bold\"}}>Total Supply:</span> {formatBalance(totalSupply, registeredBalances.decimals)}</p>\n        <h2>YOUR Wallet</h2>\n        <p><span style={{fontWeight: \"bold\"}}>Wallet:</span> {address} <CopyToClipboard text={address}><button>Copy</button></CopyToClipboard></p>\n        <p><span style={{fontWeight: \"bold\"}}>Wallet Balance:</span> {formatBalance(balance, registeredBalances.decimals)}&nbsp;<button disabled={paused} onClick={(e) => handleRegisterBalance(e)}>Register Balance</button></p>\n        {registeredBalances.cnt > 0 ? <><h2>Registered Balances</h2>\n        <p/>\n        <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <thead>\n                <tr>\n                    <th>Balance</th>\n                    <th>Since Block</th>\n                </tr>\n            </thead>\n            <tbody>\n                {registeredBalances.balances\n                .filter((balance, i) => i < registeredBalances.cnt)\n                .map((balance, i) => {\n                    const blockNumber = registeredBalances.blockNumbers[i]\n                    return <tr key={i}>\n                        <td>{formatBalance(balance, registeredBalances.decimals)}</td>\n                        <td>{blockNumber.toString()}</td>\n                    </tr>\n                })}\n            </tbody>\n        </table>\n        </> : balance.gte(BigNumber.from(2).pow(registeredBalances.decimals-3)) ? <p>Please register your current balance to be eligible for additional benefits</p> : null}\n        <p/>\n        <h2>BEER Coin Miner</h2>\n        <button disabled={false} onClick={(e) => refresh()}>Refresh</button>\n        <button disabled={paused} onClick={(e) => handleReadChallenges(e)}>Refresh Challenges</button>\n        <button disabled={paused || mineableChallenges <= 0} onClick={(e) => handleAddChallenges(e)}>Add Challenges ({mineableChallenges})</button>\n        <p/>\n        <h2>Claim GoMiner Solution</h2>\n        <p>Download GoMiner\n            &nbsp;\n            <a style={{color: \"white\"}} href=\"/downloads/gominer-linux-amd64\" download=\"gominer\">\n                Linux\n            </a>\n            &nbsp;&bull;&nbsp;\n            <a style={{color: \"white\"}} href=\"/downloads/gominer-linux-amd64\" download=\"gominer\">\n                Linux arm64\n            </a>\n            &nbsp;&bull;&nbsp;\n            <a style={{color: \"white\"}} href=\"/downloads/gominer.exe\" download=\"gominer.exe\">\n                Windows\n            </a>\n            &nbsp;&bull;&nbsp;\n            <a style={{color: \"white\"}} href=\"/downloads/gominer-macos-amd64.exe\" download=\"gominer\">\n                Mac OS\n            </a>\n            &nbsp;&bull;&nbsp;\n            <a style={{color: \"white\"}} href=\"/downloads/gominer-macos-arm64.exe\" download=\"gominer\">\n                Mac OS M1\n            </a>\n        </p>\n        <form onSubmit={(e) => handleClaim(e)}>\n            <input type=\"text\" size={60} value={goMiner} onChange={e => handleGoMinerChange(e)} />\n            <button disabled={!goMiner} onClick={(e) => handleClearClaim(e)}>Clear</button>\n            <button disabled={!goMiner} onClick={(e) => handleVerifyClaim(e)}>Verify</button>\n            <input style={{color: goMiner ? \"red\" : \"\"}} disabled={!goMiner} type=\"submit\" value=\"Claim\" />\n        </form>\n        <p/>\n        <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <thead>\n            <tr>\n                <th><h2>Regular Challenges ({basicChallenges.cnt})</h2></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n                <td>\n                    <Challenges challenges={basicChallenges} group=\"basic\" address={address} registeredBalances={registeredBalances} verifyClaim={verifyClaim} claimReward={claimReward}/>\n                </td>\n                </tr>\n            <tr>\n                <td><p/></td>\n            </tr>\n            <tr>\n                <th><h2>Premium Challenges ({premiumChallenges.cnt})</h2></th>\n            </tr>\n            <tr>\n                <td>\n                    <Challenges challenges={premiumChallenges} group=\"premium\" address={address} registeredBalances={registeredBalances} verifyClaim={verifyClaim} claimReward={claimReward}/>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n        <p/>\n        <h2>Contract Management</h2>\n        <p>Contract Owner: {ownerAddress}</p>\n        <p>Contract Address: {token && token.instance && token.instance.address}</p>\n        <p/>\n        {owner ? <table style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n            <thead>\n            <tr>\n                <th>Manual Lock: {lockStatus.locked ? \"ON\" : \"OFF\"}</th>\n                <th>Time Lock: {lockedUntilMs > 0 ? \"ON for \"+(lockStatus.lockedUntil.mul(1000).sub(Date.now()).div(3600).toNumber() / 1000)+\" hours\" : \"OFF\"}</th>\n                <th>{!locked ? <>Paused: {paused ? \"YES\" : \"NO\"}</> : null}</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n                <td>\n                    <button disabled={lockStatus.locked} onClick={(e) => handleLock(e)}>Lock</button>\n                    <button disabled={!lockStatus.locked} onClick={(e) => handleUnlock(e)}>Unlock</button>\n                </td>\n                <td>\n                    {lockedUntilMs > 0 ? <p>{\"Until \"+formatDate(new Date(lockedUntilMs))}</p> : null }\n                    <input value={lockDelay} onChange={e => setLockDelay(parseInt(e.target.value))}></input>\n                    <button disabled={!lockDelay} onClick={(e) => handleTimeLock(e)}>Lock{lockDelay && lockDelay > 0 ? \" for \"+lockDelay+\" hours\" : \"\"}</button>\n                </td>\n                <td>\n                    <button disabled={paused} onClick={(e) => handlePause(e)}>Pause</button>\n                    <button disabled={!paused} onClick={(e) => handleUnpause(e)}>Unpause</button>\n                </td>\n            </tr>\n            </tbody>\n        </table> : null }\n        <h2>Debug</h2>\n        <p>Block Number: {blockNumber}</p>\n        <p>Refresh Cnt: {useEffectCnt}</p>\n        {/* <p>Status: blockNumber: {status.blockNumber.toString()}, startingBlockNumber: {status.startingBlockNumber.toString()}, nextChallengeBlockNumber: {status.nextChallengeBlockNumber.toString()}, startingBlockNumber: {status.startingBlockNumber.toString()}, minedChallenges: {status.minedChallenges.toString()}</p> */}\n   </div>\n}","import React from 'react';\nimport './App.css';\nimport { Symfoni } from \"./hardhat/SymfoniContext\";\nimport { RareToken as Token } from \"./components/RareToken\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Symfoni autoInit={true} >\n          <Token/>\n        </Symfoni>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport { Provider as AlertProvider } from 'react-alert'\nconst AlertTemplate: any = require('react-alert-template-basic')\n\nReactDOM.render(\n  <React.StrictMode>\n    <AlertProvider template={AlertTemplate}>\n      <App />\n    </AlertProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}